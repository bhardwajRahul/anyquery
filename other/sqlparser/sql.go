// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const INTERSECT = 57354
const SELECT = 57355
const STREAM = 57356
const VSTREAM = 57357
const INSERT = 57358
const UPDATE = 57359
const DELETE = 57360
const FROM = 57361
const WHERE = 57362
const GROUP = 57363
const HAVING = 57364
const ORDER = 57365
const BY = 57366
const LIMIT = 57367
const OFFSET = 57368
const FOR = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const SET = 57378
const LOCK = 57379
const UNLOCK = 57380
const KEYS = 57381
const DO = 57382
const CALL = 57383
const ALL = 57384
const ANY = 57385
const SOME = 57386
const DISTINCTROW = 57387
const PARSER = 57388
const GENERATED = 57389
const ALWAYS = 57390
const OUTFILE = 57391
const S3 = 57392
const DATA = 57393
const LOAD = 57394
const LINES = 57395
const TERMINATED = 57396
const ESCAPED = 57397
const ENCLOSED = 57398
const DUMPFILE = 57399
const CSV = 57400
const HEADER = 57401
const MANIFEST = 57402
const OVERWRITE = 57403
const STARTING = 57404
const OPTIONALLY = 57405
const VALUES = 57406
const LAST_INSERT_ID = 57407
const NEXT = 57408
const VALUE = 57409
const SHARE = 57410
const MODE = 57411
const SQL_NO_CACHE = 57412
const SQL_CACHE = 57413
const SQL_CALC_FOUND_ROWS = 57414
const SQL_SMALL_RESULT = 57415
const SQL_BIG_RESULT = 57416
const HIGH_PRIORITY = 57417
const JOIN = 57418
const STRAIGHT_JOIN = 57419
const LEFT = 57420
const RIGHT = 57421
const INNER = 57422
const OUTER = 57423
const CROSS = 57424
const NATURAL = 57425
const USE = 57426
const FORCE = 57427
const ON = 57428
const USING = 57429
const INPLACE = 57430
const COPY = 57431
const INSTANT = 57432
const ALGORITHM = 57433
const NONE = 57434
const SHARED = 57435
const EXCLUSIVE = 57436
const SUBQUERY_AS_EXPR = 57437
const STRING = 57438
const SQL_BUFFER_RESULT = 57439
const ID = 57440
const AT_ID = 57441
const AT_AT_ID = 57442
const HEX = 57443
const NCHAR_STRING = 57444
const INTEGRAL = 57445
const FLOAT = 57446
const DECIMAL = 57447
const HEXNUM = 57448
const COMMENT = 57449
const COMMENT_KEYWORD = 57450
const BITNUM = 57451
const BIT_LITERAL = 57452
const COMPRESSION = 57453
const VALUE_ARG = 57454
const LIST_ARG = 57455
const OFFSET_ARG = 57456
const JSON_PRETTY = 57457
const JSON_STORAGE_SIZE = 57458
const JSON_STORAGE_FREE = 57459
const JSON_CONTAINS = 57460
const JSON_CONTAINS_PATH = 57461
const JSON_EXTRACT = 57462
const JSON_KEYS = 57463
const JSON_OVERLAPS = 57464
const JSON_SEARCH = 57465
const JSON_VALUE = 57466
const JSON_ARRAYAGG = 57467
const JSON_OBJECTAGG = 57468
const EXTRACT = 57469
const NULL = 57470
const UNKNOWN = 57471
const TRUE = 57472
const FALSE = 57473
const OFF = 57474
const DISCARD = 57475
const IMPORT = 57476
const ENABLE = 57477
const DISABLE = 57478
const TABLESPACE = 57479
const VIRTUAL = 57480
const STORED = 57481
const BOTH = 57482
const LEADING = 57483
const TRAILING = 57484
const KILL = 57485
const TRACE = 57486
const EMPTY_FROM_CLAUSE = 57487
const LOWER_THAN_CHARSET = 57488
const CHARSET = 57489
const UNIQUE = 57490
const KEY = 57491
const EXPRESSION_PREC_SETTER = 57492
const OR = 57493
const XOR = 57494
const AND = 57495
const NOT = 57496
const BETWEEN = 57497
const CASE = 57498
const WHEN = 57499
const THEN = 57500
const ELSE = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const SCHEMA = 57578
const TABLE = 57579
const INDEX = 57580
const VIEW = 57581
const TO = 57582
const IGNORE = 57583
const IF = 57584
const PRIMARY = 57585
const COLUMN = 57586
const SPATIAL = 57587
const FULLTEXT = 57588
const KEY_BLOCK_SIZE = 57589
const CHECK = 57590
const INDEXES = 57591
const ACTION = 57592
const CASCADE = 57593
const CONSTRAINT = 57594
const FOREIGN = 57595
const NO = 57596
const REFERENCES = 57597
const RESTRICT = 57598
const SHOW = 57599
const DESCRIBE = 57600
const EXPLAIN = 57601
const DATE = 57602
const ESCAPE = 57603
const REPAIR = 57604
const OPTIMIZE = 57605
const TRUNCATE = 57606
const COALESCE = 57607
const EXCHANGE = 57608
const REBUILD = 57609
const PARTITIONING = 57610
const REMOVE = 57611
const PREPARE = 57612
const EXECUTE = 57613
const MAXVALUE = 57614
const PARTITION = 57615
const REORGANIZE = 57616
const LESS = 57617
const THAN = 57618
const PROCEDURE = 57619
const TRIGGER = 57620
const VINDEX = 57621
const VINDEXES = 57622
const DIRECTORY = 57623
const NAME = 57624
const UPGRADE = 57625
const STATUS = 57626
const VARIABLES = 57627
const WARNINGS = 57628
const CASCADED = 57629
const DEFINER = 57630
const OPTION = 57631
const SQL = 57632
const UNDEFINED = 57633
const SEQUENCE = 57634
const MERGE = 57635
const TEMPORARY = 57636
const TEMPTABLE = 57637
const INVOKER = 57638
const SECURITY = 57639
const FIRST = 57640
const AFTER = 57641
const LAST = 57642
const VITESS_MIGRATION = 57643
const CANCEL = 57644
const RETRY = 57645
const LAUNCH = 57646
const COMPLETE = 57647
const CLEANUP = 57648
const THROTTLE = 57649
const UNTHROTTLE = 57650
const FORCE_CUTOVER = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const FORMAT_BYTES = 58016
const FORMAT_PICO_TIME = 58017
const PS_CURRENT_THREAD_ID = 58018
const PS_THREAD_ID = 58019
const GTID_SUBSET = 58020
const GTID_SUBTRACT = 58021
const WAIT_FOR_EXECUTED_GTID_SET = 58022
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58023
const FORMAT = 58024
const TREE = 58025
const VITESS = 58026
const TRADITIONAL = 58027
const VTEXPLAIN = 58028
const VEXPLAIN = 58029
const PLAN = 58030
const LOCAL = 58031
const LOW_PRIORITY = 58032
const NO_WRITE_TO_BINLOG = 58033
const LOGS = 58034
const ERROR = 58035
const GENERAL = 58036
const HOSTS = 58037
const OPTIMIZER_COSTS = 58038
const USER_RESOURCES = 58039
const SLOW = 58040
const CHANNEL = 58041
const RELAY = 58042
const EXPORT = 58043
const CURRENT = 58044
const ROW = 58045
const ROWS = 58046
const AVG_ROW_LENGTH = 58047
const CONNECTION = 58048
const CHECKSUM = 58049
const DELAY_KEY_WRITE = 58050
const ENCRYPTION = 58051
const ENGINE = 58052
const INSERT_METHOD = 58053
const MAX_ROWS = 58054
const MIN_ROWS = 58055
const PACK_KEYS = 58056
const PASSWORD = 58057
const FIXED = 58058
const DYNAMIC = 58059
const COMPRESSED = 58060
const REDUNDANT = 58061
const COMPACT = 58062
const ROW_FORMAT = 58063
const STATS_AUTO_RECALC = 58064
const STATS_PERSISTENT = 58065
const STATS_SAMPLE_PAGES = 58066
const STORAGE = 58067
const MEMORY = 58068
const DISK = 58069
const PARTITIONS = 58070
const LINEAR = 58071
const RANGE = 58072
const LIST = 58073
const SUBPARTITION = 58074
const SUBPARTITIONS = 58075
const HASH = 58076

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	17, 49,
	18, 49,
	-2, 40,
	-1, 52,
	1, 157,
	752, 157,
	-2, 165,
	-1, 53,
	150, 165,
	192, 165,
	364, 165,
	-2, 524,
	-1, 61,
	39, 784,
	255, 784,
	266, 784,
	301, 798,
	302, 798,
	-2, 786,
	-1, 66,
	257, 822,
	-2, 820,
	-1, 124,
	254, 1626,
	-2, 131,
	-1, 126,
	1, 158,
	752, 158,
	-2, 165,
	-1, 137,
	151, 409,
	260, 409,
	-2, 513,
	-1, 156,
	150, 165,
	192, 165,
	364, 165,
	-2, 533,
	-1, 750,
	178, 41,
	-2, 43,
	-1, 959,
	96, 1643,
	-2, 1487,
	-1, 960,
	96, 1644,
	237, 1648,
	-2, 1488,
	-1, 961,
	237, 1647,
	-2, 42,
	-1, 1045,
	66, 898,
	-2, 911,
	-1, 1133,
	265, 1114,
	270, 1114,
	-2, 420,
	-1, 1218,
	1, 581,
	752, 581,
	-2, 165,
	-1, 1529,
	237, 1648,
	-2, 1488,
	-1, 1727,
	290, 998,
	-2, 995,
	-1, 1744,
	66, 899,
	-2, 915,
	-1, 1745,
	66, 900,
	-2, 916,
	-1, 1805,
	150, 165,
	192, 165,
	364, 165,
	-2, 459,
	-1, 1888,
	151, 409,
	260, 409,
	-2, 513,
	-1, 1897,
	265, 1115,
	270, 1115,
	-2, 421,
	-1, 2346,
	237, 1652,
	-2, 1646,
	-1, 2347,
	237, 1648,
	-2, 1644,
	-1, 2452,
	150, 165,
	192, 165,
	364, 165,
	-2, 460,
	-1, 2459,
	29, 186,
	-2, 188,
	-1, 2864,
	290, 999,
	-2, 996,
	-1, 2992,
	727, 702,
	-2, 676,
	-1, 3217,
	56, 1591,
	-2, 1585,
	-1, 4051,
	727, 702,
	-2, 690,
	-1, 4142,
	99, 634,
	105, 634,
	115, 634,
	194, 634,
	195, 634,
	196, 634,
	197, 634,
	198, 634,
	199, 634,
	200, 634,
	201, 634,
	202, 634,
	203, 634,
	204, 634,
	205, 634,
	206, 634,
	207, 634,
	208, 634,
	209, 634,
	210, 634,
	211, 634,
	212, 634,
	213, 634,
	214, 634,
	215, 634,
	216, 634,
	217, 634,
	218, 634,
	219, 634,
	220, 634,
	221, 634,
	222, 634,
	223, 634,
	224, 634,
	225, 634,
	226, 634,
	227, 634,
	228, 634,
	229, 634,
	230, 634,
	231, 634,
	232, 634,
	233, 634,
	234, 634,
	235, 634,
	-2, 2023,
}

const yyPrivate = 57344

const yyLast = 57156

var yyAct = [...]int{
	975, 3704, 3705, 87, 3703, 4217, 4121, 2449, 4033, 2151,
	3504, 4015, 963, 4230, 3368, 4184, 4109, 1286, 4185, 970,
	2018, 962, 2139, 3269, 3276, 3326, 2174, 4140, 2375, 3938,
	3331, 2077, 1284, 3328, 5, 3230, 3327, 3325, 3330, 3329,
	4013, 3640, 2376, 3653, 3082, 3167, 105, 3346, 3284, 2524,
	3317, 3345, 754, 1038, 3231, 3234, 3746, 3550, 3544, 3056,
	3218, 924, 2404, 782, 3081, 2423, 2487, 923, 1808, 3348,
	2884, 749, 748, 1865, 2958, 928, 4083, 3038, 42, 3534,
	2989, 3375, 1764, 2511, 3572, 2492, 1043, 1165, 87, 1095,
	2959, 165, 2960, 2437, 1063, 2555, 2909, 1070, 2876, 1913,
	2425, 744, 41, 2424, 2858, 2299, 3030, 1043, 43, 2890,
	2331, 2298, 3228, 2533, 2135, 2173, 1895, 2085, 2510, 151,
	2412, 2572, 2494, 2951, 1105, 1128, 1123, 1797, 2926, 1725,
	2897, 1040, 2427, 1777, 1542, 1723, 2179, 104, 2110, 2099,
	1062, 1467, 1450, 100, 2014, 1902, 3233, 1102, 1099, 764,
	1131, 1994, 1134, 1874, 2483, 1129, 1141, 1103, 1130, 2484,
	1080, 1042, 2405, 1046, 1796, 759, 1782, 1082, 3741, 1747,
	1052, 2856, 751, 1049, 2206, 1525, 85, 2076, 3733, 2187,
	1274, 99, 1065, 2026, 169, 3561, 107, 129, 1501, 127,
	1047, 128, 3505, 134, 135, 1887, 1048, 1214, 1050, 752,
	1075, 106, 84, 758, 925, 93, 1546, 1282, 98, 4218,
	1260, 3641, 1074, 3314, 741, 2526, 1551, 2526, 2527, 2528,
	4067, 3012, 3011, 2570, 684, 2980, 1468, 3633, 1979, 1037,
	4167, 3046, 3047, 4063, 4062, 2372, 2373, 130, 2092, 3596,
	2091, 1167, 2090, 1055, 2089, 2088, 4068, 1096, 1170, 136,
	2087, 2057, 1230, 2854, 1184, 1185, 1186, 2623, 1189, 1190,
	1191, 1192, 3214, 3171, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1090, 1056, 681, 1089, 682, 1039, 742, 1041, 1144,
	4161, 2, 4240, 1120, 4188, 1145, 3336, 2559, 1768, 1766,
	4223, 4171, 1464, 4183, 3508, 1461, 1484, 3336, 1171, 1174,
	1175, 130, 1064, 2886, 1119, 4041, 1118, 1178, 1117, 2982,
	3333, 4208, 3708, 3507, 3708, 4222, 4170, 2398, 1769, 1767,
	3002, 1112, 1187, 1231, 1478, 4063, 113, 114, 115, 726,
	118, 2558, 929, 124, 192, 95, 193, 2401, 1107, 676,
	2400, 4169, 95, 3005, 1036, 95, 3334, 95, 726, 4016,
	2819, 739, 740, 720, 2097, 3394, 4136, 3334, 131, 3934,
	3933, 1031, 1032, 1033, 1034, 2113, 4168, 3646, 1045, 130,
	3647, 4165, 1169, 1168, 174, 3340, 4198, 1758, 720, 3944,
	3665, 1452, 978, 979, 980, 3654, 3340, 978, 979, 980,
	4110, 4118, 2552, 3943, 2144, 1121, 2630, 4145, 1077, 1078,
	1463, 1088, 1092, 927, 110, 112, 3420, 1876, 3707, 2855,
	3707, 110, 112, 1088, 1092, 927, 109, 86, 108, 3664,
	2940, 715, 3265, 109, 2557, 108, 103, 3045, 110, 112,
	3266, 3267, 1480, 103, 171, 2627, 1474, 172, 2443, 1466,
	109, 4122, 108, 110, 112, 4150, 1481, 1250, 1482, 1483,
	720, 2444, 2445, 86, 1798, 109, 1799, 108, 110, 112,
	3029, 2935, 720, 191, 2934, 4148, 2628, 2936, 3760, 700,
	109, 1279, 86, 2069, 2070, 4154, 4155, 1029, 720, 1028,
	1255, 1256, 698, 1238, 4034, 3286, 3287, 1251, 1239, 2947,
	3337, 1758, 4149, 1244, 3103, 2900, 3402, 3372, 2374, 86,
	95, 3337, 88, 1238, 3370, 1462, 2462, 2461, 1239, 2503,
	2893, 2894, 4126, 3400, 720, 1213, 1237, 4126, 1236, 2022,
	2621, 2408, 695, 2901, 734, 1445, 2068, 732, 4046, 3031,
	1758, 710, 2072, 2497, 738, 720, 95, 1116, 4189, 1223,
	1224, 3376, 1729, 2990, 1451, 3986, 705, 3987, 2534, 2573,
	3015, 4220, 1271, 1468, 1219, 95, 1267, 708, 1269, 4190,
	718, 1969, 3363, 1995, 1253, 1254, 1444, 721, 719, 2579,
	3364, 1226, 2624, 1276, 2625, 1259, 2215, 1188, 175, 2597,
	3635, 2598, 95, 2599, 1278, 1252, 1502, 181, 1257, 3634,
	1277, 1245, 721, 3373, 3285, 1114, 1266, 1268, 1258, 3918,
	3371, 2600, 3019, 3033, 3020, 1970, 3288, 1971, 3391, 1143,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1510, 1512,
	1513, 2537, 1194, 1193, 2580, 2575, 2577, 3712, 685, 3631,
	687, 701, 1081, 723, 1125, 722, 691, 2421, 689, 693,
	702, 694, 1124, 688, 2378, 699, 1125, 1163, 690, 703,
	704, 707, 711, 712, 713, 709, 706, 1162, 697, 724,
	2023, 1478, 3104, 3547, 721, 1161, 1160, 3170, 2576, 1159,
	1158, 1157, 1156, 1151, 1732, 2207, 721, 1880, 3288, 2983,
	2209, 2578, 4162, 1164, 2214, 2210, 2496, 4241, 2211, 2212,
	2213, 4195, 721, 2208, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 1100, 1100, 1283, 1264, 1283, 1283, 1137,
	1265, 1136, 1142, 1173, 1100, 166, 2406, 2407, 1098, 1136,
	1270, 2015, 1875, 1172, 1076, 3034, 2563, 1115, 721, 1091,
	1085, 1083, 1473, 1470, 1471, 1472, 1477, 1479, 1476, 2562,
	1475, 1091, 1085, 1083, 3630, 1263, 2011, 1453, 1181, 721,
	1469, 3308, 3014, 3198, 1794, 1873, 1872, 1043, 1526, 1531,
	1532, 1871, 1535, 1537, 1538, 1539, 1540, 1541, 3000, 1544,
	1545, 1547, 1547, 1474, 1547, 1547, 1552, 1552, 1552, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 2556, 4040, 1272, 1523, 1679, 2981, 1681,
	1682, 1683, 1684, 1685, 1442, 1443, 1981, 1980, 1982, 1983,
	1984, 1552, 1552, 1552, 1552, 1552, 1552, 3594, 3595, 1122,
	3004, 3663, 4086, 2949, 725, 1536, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1519, 1520, 1521, 1522, 167, 716, 1441, 3017, 1460, 976,
	1533, 179, 1527, 4124, 3338, 3339, 2629, 1720, 4124, 976,
	717, 976, 3548, 89, 3003, 3338, 3339, 3342, 1548, 4153,
	1549, 1550, 3492, 1217, 2984, 1795, 2012, 3706, 3342, 3706,
	1235, 1248, 1719, 1553, 1554, 4123, 1111, 1154, 1225, 1113,
	4123, 94, 187, 111, 3057, 2628, 1084, 3037, 1152, 1234,
	111, 1240, 1241, 1242, 1243, 1222, 1516, 1143, 1084, 2500,
	1901, 1728, 4234, 4152, 1516, 1757, 1869, 111, 3392, 1143,
	1043, 1229, 675, 2380, 1043, 1280, 1281, 94, 2859, 2861,
	1043, 1717, 111, 1517, 1518, 168, 173, 170, 176, 177,
	178, 180, 182, 183, 184, 185, 94, 111, 4163, 4029,
	2501, 186, 188, 189, 190, 1180, 3585, 2499, 1718, 1473,
	1470, 1471, 1472, 1477, 1479, 1476, 720, 1475, 1040, 1739,
	2000, 1143, 2554, 94, 3568, 1737, 2931, 1469, 3059, 2586,
	2582, 2584, 2585, 2583, 2587, 2588, 2589, 2896, 1116, 2831,
	1108, 2502, 3050, 2147, 1786, 1736, 3272, 1110, 1109, 1740,
	2645, 2498, 1680, 3028, 3179, 1042, 3027, 1228, 3178, 2408,
	1142, 2891, 126, 1999, 683, 1146, 1136, 1738, 2450, 1900,
	1148, 104, 1142, 1516, 1149, 1147, 1718, 1686, 1687, 1688,
	1689, 1690, 1691, 2188, 1513, 1116, 1212, 1155, 3264, 2656,
	1758, 1724, 1496, 1059, 1233, 1150, 1114, 3273, 1153, 1275,
	2189, 3069, 3068, 3067, 1711, 4054, 3061, 1261, 3065, 1734,
	3060, 2027, 3058, 3196, 2379, 1166, 3040, 3063, 3040, 3626,
	107, 3039, 3275, 3039, 1142, 3560, 3062, 2574, 1143, 1506,
	1507, 1508, 1509, 1511, 1510, 1512, 1513, 121, 1877, 1878,
	1879, 2081, 3270, 2180, 2008, 3064, 3066, 1247, 1800, 1484,
	1216, 1893, 2860, 3077, 2516, 1143, 1482, 1483, 1249, 1760,
	2551, 4199, 3286, 3287, 2180, 1483, 2665, 1143, 3755, 3271,
	1964, 3601, 1721, 1039, 2656, 1735, 2020, 1886, 1143, 3600,
	1763, 1915, 1041, 1916, 2541, 1918, 1920, 1910, 1905, 1924,
	1926, 1928, 1930, 1932, 4232, 1946, 1909, 4233, 1899, 4231,
	2549, 1283, 1154, 3277, 1152, 1954, 1955, 4242, 1791, 1792,
	2546, 1960, 1961, 2171, 4191, 122, 1904, 2546, 1996, 1054,
	1997, 1860, 3586, 1998, 1758, 4236, 1903, 1903, 1115, 2553,
	721, 1142, 2185, 1179, 1868, 3926, 1484, 1176, 3925, 2186,
	2004, 4087, 2002, 2003, 2001, 2005, 2006, 2007, 1232, 4021,
	1884, 1882, 1883, 2550, 2406, 2407, 1896, 1218, 1142, 1215,
	2548, 2692, 3916, 1146, 1136, 1262, 1741, 3677, 1148, 2028,
	1142, 3285, 1149, 1147, 1950, 1115, 1136, 1139, 1140, 1907,
	1100, 1142, 1484, 3288, 1133, 1137, 3676, 1136, 1139, 1140,
	4088, 1100, 978, 979, 980, 1133, 1137, 3608, 4022, 1481,
	2016, 1482, 1483, 4243, 3607, 1132, 1942, 1484, 3079, 1945,
	1989, 1947, 2163, 2152, 2153, 2154, 2155, 2165, 2156, 2157,
	2158, 2170, 2166, 2159, 2160, 2167, 2168, 2169, 2161, 2162,
	2164, 3597, 3315, 130, 2413, 2414, 1119, 3660, 1118, 3661,
	1117, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1510,
	1512, 1513, 1508, 1509, 1511, 1510, 1512, 1513, 1987, 2115,
	2033, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1510, 1512,
	1513, 1283, 1283, 2116, 1514, 1515, 2114, 2029, 2030, 4192,
	1484, 1988, 2055, 3304, 1976, 2956, 1481, 87, 1482, 1483,
	87, 2034, 2955, 2103, 2104, 2101, 2102, 2954, 2041, 2042,
	2043, 2506, 192, 3274, 2103, 2104, 2635, 2636, 2054, 1490,
	1491, 1492, 1493, 1494, 1495, 1489, 1486, 1990, 1974, 1502,
	2100, 1973, 1498, 1484, 1499, 1972, 131, 1962, 1956, 1986,
	1953, 1484, 1481, 1952, 1482, 1483, 1951, 1922, 1500, 1514,
	1515, 1497, 174, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1511, 1510, 1512, 1513, 1502, 1975, 3049, 1481, 1733, 1482,
	1483, 3591, 42, 726, 726, 42, 2336, 2142, 2142, 2140,
	2140, 2143, 3367, 4204, 1758, 1447, 1794, 4049, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1511, 1510, 1512, 1513, 2105,
	95, 2938, 4048, 726, 1719, 2522, 1771, 2521, 2520, 2336,
	2519, 1484, 171, 2333, 4025, 172, 2654, 1484, 2031, 2518,
	4024, 2517, 2335, 4023, 2226, 2035, 2653, 2037, 2038, 2039,
	2040, 3921, 1502, 3905, 2044, 1758, 2652, 2704, 974, 3904,
	1481, 191, 1482, 1483, 3754, 1484, 2056, 1480, 1758, 2882,
	4219, 2240, 3752, 1717, 2706, 1772, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1511, 1510, 1512, 1513, 3673, 3409, 1716,
	85, 1715, 1502, 85, 2644, 4179, 1758, 2082, 2882, 1758,
	1718, 1484, 1714, 1481, 3605, 1482, 1483, 2112, 2062, 2063,
	1484, 1481, 3590, 1482, 1483, 2175, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1511, 1510, 1512, 1513, 3377, 1484, 3374,
	4202, 1758, 2118, 1484, 2120, 2121, 2122, 2123, 2124, 2125,
	2127, 2129, 2130, 2131, 2132, 2133, 2134, 2117, 1480, 1758,
	1758, 2323, 2324, 2325, 2326, 2327, 1484, 3307, 2346, 1758,
	2119, 2345, 2146, 2882, 4117, 2882, 4096, 1484, 2348, 3306,
	2250, 2351, 2352, 2344, 2965, 3278, 175, 2882, 4093, 3282,
	1484, 1481, 2702, 1482, 1483, 181, 3281, 1481, 2952, 1482,
	1483, 1527, 4006, 1758, 2332, 4193, 2190, 2191, 2192, 2193,
	3644, 4039, 4042, 4132, 1758, 2334, 101, 2369, 2225, 2181,
	2204, 1502, 103, 3929, 1758, 1481, 102, 1482, 1483, 2242,
	3283, 4130, 1758, 101, 1713, 3279, 4128, 1758, 1484, 1706,
	3280, 2882, 3917, 102, 2618, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1511, 1510, 1512, 1513, 3644, 1758, 1484, 3999,
	1758, 1481, 2429, 1482, 1483, 2343, 2882, 3642, 2349, 2350,
	1481, 1758, 1482, 1483, 2346, 1484, 2610, 2418, 2546, 1758,
	1775, 2609, 104, 3997, 1758, 3953, 2459, 1758, 1481, 2344,
	1482, 1483, 2568, 1481, 1484, 1482, 1483, 3566, 1758, 2786,
	1758, 1484, 3297, 3296, 1758, 104, 3294, 3295, 3952, 2661,
	2111, 2393, 3292, 3293, 2381, 2567, 1481, 2403, 1482, 1483,
	1484, 3292, 3291, 166, 103, 1484, 2382, 1481, 2058, 1482,
	1483, 3994, 1758, 2906, 1758, 1105, 2024, 2431, 1480, 3201,
	1481, 1985, 1482, 1483, 1484, 2628, 3013, 3563, 2387, 1484,
	2388, 1774, 2468, 2469, 2470, 2471, 1484, 2463, 1977, 2464,
	2465, 2466, 2467, 1864, 2994, 3909, 2454, 2453, 3948, 1105,
	2367, 2987, 2988, 2473, 1055, 1967, 2475, 2476, 2477, 2478,
	2435, 2882, 2881, 2145, 1758, 3908, 2394, 2660, 1481, 1758,
	1482, 1483, 1963, 1484, 3976, 1758, 2489, 1959, 1958, 1957,
	1864, 1863, 2457, 2396, 1806, 1805, 1484, 1773, 1481, 1273,
	1482, 1483, 2535, 3533, 1758, 3562, 3559, 2495, 3526, 1758,
	2416, 3652, 2991, 2970, 2440, 1481, 1090, 1482, 1483, 1089,
	2441, 2439, 2456, 1484, 1502, 2455, 2927, 3523, 1758, 1484,
	2458, 1480, 3521, 1758, 1481, 2898, 1482, 1483, 1484, 3484,
	1758, 1481, 2532, 1482, 1483, 1484, 2505, 2898, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1511, 1510, 1512, 1513, 4081,
	1481, 1484, 1482, 1483, 4053, 1481, 1484, 1482, 1483, 2490,
	1484, 109, 2486, 2479, 2481, 2482, 2540, 4037, 2882, 2543,
	2508, 2544, 2504, 2509, 1481, 2906, 1482, 1483, 2927, 1481,
	3913, 1482, 1483, 3259, 2928, 2560, 1481, 2547, 1482, 1483,
	2879, 3512, 1144, 2628, 2930, 2490, 2539, 2542, 1145, 2538,
	3229, 2905, 2906, 1484, 103, 3294, 3482, 1758, 1903, 1484,
	2561, 3559, 3478, 1758, 3559, 2564, 3609, 3202, 1484, 2565,
	2566, 3475, 1758, 1481, 2442, 1482, 1483, 1484, 3473, 1758,
	2786, 2689, 1484, 1759, 1761, 1480, 1481, 2688, 1482, 1483,
	2546, 2529, 167, 2411, 3471, 1758, 2928, 1762, 2633, 179,
	3627, 2546, 1484, 3469, 1758, 2370, 2628, 1043, 1043, 1043,
	2571, 2145, 2906, 1481, 2083, 1482, 1483, 2067, 2877, 1481,
	2010, 1482, 1483, 3610, 3611, 3612, 1793, 1537, 1481, 1537,
	1482, 1483, 1044, 1127, 1126, 1481, 4158, 1482, 1483, 4099,
	187, 3940, 1765, 1484, 3906, 2648, 3467, 1758, 3767, 3625,
	1484, 1481, 3581, 1482, 1483, 1484, 1481, 2603, 1482, 1483,
	1481, 3528, 1482, 1483, 3622, 2346, 3603, 1484, 2345, 2171,
	3465, 1758, 1484, 3425, 2961, 3463, 1758, 3424, 1866, 2488,
	2651, 3365, 3320, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 3318, 3461, 1758, 3316, 2995, 186,
	188, 189, 190, 1481, 1484, 1482, 1483, 2485, 2480, 1481,
	2620, 1482, 1483, 2474, 2671, 95, 2472, 1992, 1481, 1484,
	1482, 1483, 1898, 1894, 1862, 2626, 123, 1481, 2962, 1482,
	1483, 2686, 1481, 1484, 1482, 1483, 3459, 1758, 1484, 2962,
	2634, 1217, 1484, 3457, 1758, 3573, 3574, 3369, 3455, 1758,
	3579, 3941, 1481, 2640, 1482, 1483, 2637, 2638, 2639, 1484,
	3453, 1758, 2503, 2385, 2112, 3451, 1758, 4214, 2163, 2152,
	2153, 2154, 2155, 2165, 2156, 2157, 2158, 2170, 2166, 2159,
	2160, 2167, 2168, 2169, 2161, 2162, 2164, 1484, 2641, 3613,
	2643, 2060, 4212, 1481, 4186, 1482, 1483, 3449, 1758, 2646,
	1481, 2647, 1482, 1483, 4061, 1481, 3981, 1482, 1483, 3576,
	3312, 3311, 3447, 1758, 3310, 2664, 2642, 1481, 3229, 1482,
	1483, 1484, 1481, 2974, 1482, 1483, 3445, 1758, 2604, 3578,
	1484, 3431, 1758, 3248, 1484, 3407, 1758, 3253, 1484, 2915,
	2916, 3251, 3614, 3615, 3616, 2830, 3252, 3247, 1484, 3732,
	2649, 3731, 2851, 1758, 1481, 1770, 1482, 1483, 2061, 4057,
	1484, 680, 3249, 2612, 2613, 3942, 1484, 3250, 2615, 1481,
	2700, 1482, 1483, 2402, 2818, 1057, 2391, 2616, 3567, 2863,
	2849, 1758, 3207, 1481, 3206, 1482, 1483, 3745, 1481, 1938,
	1482, 1483, 1481, 4020, 1482, 1483, 3747, 2020, 1043, 3555,
	2864, 3219, 3221, 2142, 3730, 2140, 2867, 2865, 3216, 1481,
	3222, 1482, 1483, 3290, 2824, 1758, 1484, 3552, 2009, 1027,
	2862, 2903, 2904, 2801, 1758, 3551, 1058, 2793, 1758, 1484,
	2429, 2784, 1758, 1043, 2923, 743, 2945, 1481, 2966, 1482,
	1483, 2782, 1758, 1060, 1484, 2188, 1939, 1940, 1941, 1484,
	1069, 1061, 2902, 2769, 1758, 2596, 2868, 2111, 2870, 2767,
	1758, 1484, 2189, 2595, 1068, 1484, 2883, 1446, 2594, 1484,
	2593, 1481, 2592, 1482, 1483, 2108, 2106, 2107, 2591, 2590,
	1481, 1183, 1482, 1483, 1481, 1182, 1482, 1483, 1481, 101,
	1482, 1483, 3385, 1484, 3001, 2921, 42, 2961, 1481, 102,
	1482, 1483, 1484, 1724, 3043, 2920, 2853, 131, 2922, 3524,
	1481, 1484, 1482, 1483, 3557, 1484, 1481, 2892, 1482, 1483,
	1934, 103, 2765, 1758, 2413, 2414, 4228, 2948, 2950, 101,
	1484, 2978, 1718, 2607, 4135, 103, 2875, 2763, 1758, 102,
	3535, 1484, 2761, 1758, 2941, 2895, 1484, 2880, 2999, 4038,
	3936, 3289, 2925, 2919, 2759, 1758, 2397, 1484, 2757, 1758,
	2632, 2066, 2755, 1758, 2924, 2929, 1481, 2065, 1482, 1483,
	2932, 108, 3010, 1935, 1936, 1937, 1484, 2495, 2939, 1481,
	2942, 1482, 1483, 2183, 2964, 1484, 2753, 1758, 2184, 2967,
	2968, 4005, 3205, 4004, 1481, 3490, 1482, 1483, 2953, 1481,
	3204, 1482, 1483, 3984, 2751, 1758, 3753, 3751, 2749, 1758,
	1484, 1481, 3750, 1482, 1483, 1481, 2963, 1482, 1483, 1481,
	3743, 1482, 1483, 2747, 1758, 1484, 2246, 3623, 2971, 1484,
	2972, 2975, 2976, 2977, 2745, 1758, 3556, 1484, 3554, 2743,
	1758, 3321, 3007, 1481, 2530, 1482, 1483, 1881, 1067, 1886,
	2741, 1758, 1481, 109, 1482, 1483, 3053, 3054, 2996, 2997,
	1484, 1481, 3742, 1482, 1483, 1481, 3545, 1482, 1483, 2739,
	1758, 2898, 4216, 4215, 3006, 3, 3716, 2879, 2737, 1758,
	1481, 3107, 1482, 1483, 3073, 2690, 2383, 1787, 1779, 4215,
	1484, 1481, 4216, 1482, 1483, 4026, 1481, 3589, 1482, 1483,
	1484, 3032, 2080, 2735, 1758, 10, 2329, 1481, 97, 1482,
	1483, 116, 117, 3070, 2078, 1484, 3051, 9, 2730, 1758,
	1484, 3035, 2726, 1758, 1484, 1, 1481, 1035, 1482, 1483,
	2724, 1758, 1449, 1040, 1448, 1481, 2361, 1482, 1483, 3593,
	3098, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096,
	3097, 4147, 696, 3486, 1759, 2368, 2079, 2371, 1722, 8,
	1481, 3105, 1482, 1483, 4187, 4143, 4144, 3008, 1978, 3071,
	1484, 1968, 3655, 2297, 3937, 1481, 3324, 1482, 1483, 1481,
	2536, 1482, 1483, 2717, 1758, 3621, 1484, 1481, 2493, 1482,
	1483, 1135, 156, 2715, 1758, 2451, 2395, 2452, 1484, 4112,
	120, 1093, 119, 1138, 1246, 2531, 1484, 3645, 3422, 2946,
	1481, 2460, 1482, 1483, 2957, 1812, 3147, 3421, 3149, 3109,
	3165, 3055, 3041, 1810, 1811, 3042, 1809, 1814, 1484, 3072,
	1813, 4085, 3393, 2691, 3160, 3161, 3162, 3163, 1484, 3491,
	1481, 2071, 1482, 1483, 733, 3052, 2918, 727, 194, 1801,
	1481, 1780, 1482, 1483, 2064, 1177, 686, 3298, 2986, 2569,
	692, 1534, 2059, 3413, 3183, 1481, 3172, 1482, 1483, 3174,
	1481, 3203, 1482, 1483, 1481, 1484, 1482, 1483, 2933, 3411,
	2429, 1087, 1079, 1484, 2332, 2420, 2332, 2384, 2869, 1086,
	3914, 2847, 3145, 3237, 1484, 2334, 3549, 2334, 3215, 2846,
	3217, 2885, 3236, 2507, 87, 3220, 1484, 2429, 2429, 2429,
	2429, 2429, 3213, 4019, 3155, 3156, 3157, 3158, 3159, 3744,
	1481, 2842, 1482, 1483, 4097, 2943, 1776, 2429, 3511, 3183,
	2429, 2841, 2663, 3173, 2178, 3175, 1481, 1524, 1482, 1483,
	2428, 3241, 3711, 2098, 1484, 3211, 3182, 756, 1481, 2020,
	1482, 1483, 755, 753, 2871, 2431, 1481, 2899, 1482, 1483,
	1488, 1487, 3194, 3200, 964, 2857, 1788, 1484, 2840, 2910,
	2908, 2907, 1484, 2605, 3208, 3210, 2839, 2436, 1481, 1046,
	1482, 1483, 2431, 2431, 2431, 2431, 2431, 2838, 1481, 3575,
	1482, 1483, 3260, 3341, 3571, 3261, 4139, 3223, 3224, 2837,
	2430, 2426, 2431, 3349, 3240, 2431, 1047, 3209, 3243, 3244,
	3242, 3246, 1048, 3245, 3254, 104, 3195, 3197, 3199, 1484,
	2878, 915, 914, 1484, 3262, 1481, 765, 1482, 1483, 757,
	747, 977, 3268, 1481, 913, 1482, 1483, 2828, 3226, 912,
	1484, 3351, 3352, 3016, 1481, 3366, 1482, 1483, 3018, 3302,
	3303, 3301, 3300, 3299, 1484, 3258, 1481, 2944, 1482, 1483,
	2827, 3362, 1465, 1484, 3353, 2826, 3350, 1743, 1746, 2392,
	3354, 1106, 3390, 1484, 4044, 2631, 3419, 3322, 2495, 1742,
	3343, 4051, 2911, 2914, 2915, 2916, 2912, 3360, 2913, 2917,
	1484, 3332, 3573, 3574, 1481, 1484, 1482, 1483, 3639, 3313,
	2992, 1484, 2523, 69, 46, 3232, 4014, 4082, 907, 1484,
	3232, 3381, 2825, 3380, 3378, 904, 2822, 1481, 3713, 1482,
	1483, 3388, 1481, 3714, 1482, 1483, 3715, 3168, 3398, 3169,
	4064, 3395, 3396, 2817, 3397, 4065, 903, 3399, 4066, 3401,
	2235, 3403, 1459, 1456, 4160, 2073, 96, 2810, 3414, 3415,
	3416, 3417, 3418, 36, 35, 34, 2809, 2911, 2914, 2915,
	2916, 2912, 33, 2913, 2917, 32, 2808, 26, 25, 1481,
	24, 1482, 1483, 1481, 23, 1482, 1483, 1537, 22, 29,
	19, 1537, 2650, 2807, 21, 20, 2655, 18, 2806, 3335,
	1481, 4182, 1482, 1483, 2805, 3323, 4227, 3536, 125, 3538,
	55, 52, 2804, 50, 1481, 133, 1482, 1483, 132, 2658,
	53, 2659, 3506, 1481, 49, 1482, 1483, 2667, 1220, 3510,
	47, 2669, 2670, 1481, 31, 1482, 1483, 30, 17, 16,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	1481, 2687, 1482, 1483, 3235, 1481, 15, 1482, 1483, 14,
	3389, 1481, 13, 1482, 1483, 12, 11, 1484, 7, 1481,
	2429, 1482, 1483, 1719, 2693, 2694, 2695, 2696, 6, 2698,
	2699, 1484, 2701, 3587, 39, 3541, 2703, 3537, 3553, 3539,
	2708, 2709, 38, 2710, 3546, 1484, 2713, 2714, 2716, 2718,
	2719, 2720, 2721, 2722, 2723, 2725, 2727, 2728, 2729, 2731,
	1484, 2733, 2734, 2736, 2738, 2740, 2742, 2744, 2746, 2748,
	2750, 2752, 2754, 2756, 2758, 2760, 2762, 2764, 2766, 2768,
	2770, 2771, 2772, 3344, 2774, 3582, 2776, 745, 2778, 2779,
	3577, 2781, 2783, 2785, 3353, 2431, 3350, 2788, 3580, 3543,
	3354, 2792, 3588, 3558, 37, 2797, 2798, 2799, 2800, 3513,
	2803, 3515, 3516, 3517, 3604, 1484, 3606, 28, 2811, 2812,
	2813, 2814, 2815, 2816, 2802, 1484, 2820, 2821, 3649, 3650,
	3598, 3599, 3570, 27, 2823, 3383, 3384, 40, 2796, 2829,
	1484, 4, 2979, 2525, 2832, 2833, 2834, 2835, 2836, 1484,
	0, 3583, 3584, 2795, 1484, 2843, 2844, 0, 2845, 0,
	0, 2848, 2850, 2395, 1484, 2852, 0, 1481, 0, 1482,
	1483, 0, 0, 0, 0, 0, 0, 2866, 0, 0,
	0, 1481, 3632, 1482, 1483, 0, 3636, 3637, 3638, 1484,
	0, 0, 0, 0, 0, 1481, 1066, 1482, 1483, 0,
	0, 1072, 1072, 1484, 3651, 0, 0, 0, 2794, 0,
	1481, 0, 1482, 1483, 0, 0, 0, 0, 2791, 3667,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 0, 0, 2790, 0, 0, 0, 1484, 0, 0,
	0, 1484, 2789, 0, 0, 1484, 0, 2787, 0, 0,
	0, 3678, 0, 1484, 0, 0, 0, 2780, 0, 0,
	0, 1484, 0, 0, 0, 1481, 1484, 1482, 1483, 0,
	0, 0, 0, 3700, 0, 1481, 1484, 1482, 1483, 0,
	0, 0, 2777, 3719, 0, 3720, 3721, 3722, 0, 0,
	1481, 0, 1482, 1483, 0, 3729, 2775, 0, 3736, 1481,
	3738, 1482, 1483, 1484, 1481, 0, 1482, 1483, 0, 0,
	0, 0, 3709, 2773, 1481, 0, 1482, 1483, 0, 0,
	3672, 0, 2732, 3236, 0, 0, 87, 0, 3236, 3739,
	2712, 0, 0, 0, 2711, 0, 0, 0, 2707, 1481,
	0, 1482, 1483, 0, 0, 0, 2705, 0, 0, 0,
	0, 0, 0, 1481, 2697, 1482, 1483, 3761, 0, 2668,
	0, 2142, 3740, 2140, 3769, 3748, 3759, 3749, 0, 2662,
	1481, 0, 1482, 1483, 3756, 0, 0, 1040, 3758, 1481,
	0, 1482, 1483, 0, 3765, 0, 0, 1481, 0, 1482,
	1483, 1481, 3920, 1482, 1483, 1481, 2657, 1482, 1483, 0,
	0, 42, 3772, 1481, 0, 1482, 1483, 0, 3628, 3629,
	0, 1481, 0, 1482, 1483, 0, 1481, 0, 1482, 1483,
	0, 0, 0, 0, 0, 0, 1481, 0, 1482, 1483,
	0, 0, 0, 3912, 3911, 0, 0, 0, 0, 0,
	0, 3927, 0, 0, 0, 0, 0, 3939, 0, 0,
	0, 3931, 3932, 1481, 0, 1482, 1483, 0, 0, 0,
	3910, 1748, 0, 0, 0, 3978, 3979, 3083, 3084, 3085,
	3086, 3087, 0, 3770, 3763, 1756, 0, 3737, 1749, 0,
	0, 3922, 3923, 3924, 0, 0, 0, 3102, 2142, 0,
	2140, 3982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2389, 2390, 1755, 1753, 1754, 1750, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 1040, 3985,
	4027, 3236, 0, 3988, 3232, 3983, 0, 0, 0, 0,
	4018, 0, 0, 1752, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1675, 1676, 1677,
	1678, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 3235, 4031, 4028, 4002, 4012,
	3235, 4011, 0, 0, 0, 4008, 0, 4010, 0, 4045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 87, 0, 3238,
	0, 0, 0, 0, 0, 0, 0, 1719, 1756, 4030,
	0, 1749, 0, 3915, 0, 0, 0, 3256, 0, 0,
	0, 0, 0, 0, 0, 4047, 0, 0, 4052, 0,
	0, 4050, 0, 0, 3919, 0, 1744, 1745, 1755, 1753,
	1754, 1750, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4059, 0, 0, 1752, 0, 0, 0,
	0, 4069, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4070, 0, 0, 4071, 0, 4095, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4080, 0, 0, 0, 0, 0, 0,
	0, 0, 4089, 0, 0, 0, 0, 0, 0, 0,
	4098, 0, 1719, 0, 1485, 0, 0, 4103, 0, 4125,
	0, 0, 4108, 4111, 3387, 4105, 3939, 4114, 4104, 4102,
	4107, 4106, 4100, 4133, 0, 4032, 0, 0, 0, 0,
	0, 0, 0, 3235, 0, 1543, 3404, 3405, 0, 3406,
	3408, 3410, 0, 0, 42, 4156, 0, 0, 0, 0,
	0, 4146, 4151, 4138, 4180, 0, 0, 0, 0, 4166,
	0, 0, 4164, 1830, 0, 4125, 4177, 3423, 0, 0,
	0, 0, 3426, 0, 3428, 3429, 3430, 3432, 3433, 3434,
	3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444,
	3446, 3448, 3450, 3452, 3454, 3456, 3458, 3460, 3462, 3464,
	3466, 3468, 3470, 3472, 3474, 3476, 3477, 3479, 3480, 3481,
	3483, 2020, 4200, 3485, 4196, 3487, 3488, 3489, 4206, 4209,
	3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502,
	3503, 4213, 2142, 4211, 2140, 4210, 4221, 4207, 4197, 3509,
	4181, 4176, 4125, 3514, 4091, 0, 0, 3518, 3519, 4229,
	3520, 3522, 0, 3525, 3527, 4237, 3529, 3530, 3531, 3532,
	4235, 3232, 0, 0, 4036, 0, 3540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4246, 4247, 3979, 4245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2142, 4043, 2140, 4244, 0, 0, 0, 0, 4055, 0,
	0, 0, 3564, 3565, 0, 0, 3569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 4172,
	0, 86, 44, 45, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 48, 76, 77, 0, 74, 78,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 1831, 0, 0, 0, 0, 0,
	0, 3643, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3662, 0, 0, 3666,
	0, 0, 0, 1867, 83, 0, 0, 0, 0, 1844,
	1847, 1848, 1849, 1850, 1851, 1852, 0, 1853, 1854, 1856,
	1857, 1855, 1858, 1859, 1832, 1833, 1834, 1835, 1815, 1816,
	1845, 0, 1818, 3679, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 0, 0, 1828, 1836, 1837, 1838, 1839,
	0, 1840, 1841, 1842, 1843, 0, 4194, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3702, 0, 51,
	54, 57, 56, 59, 0, 73, 0, 0, 82, 79,
	3710, 0, 0, 0, 0, 0, 0, 3717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 61, 91, 90, 0, 0, 71, 72, 58,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 64,
	0, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3928, 0, 0, 0, 0,
	0, 0, 0, 0, 3935, 60, 0, 0, 0, 0,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3945, 3946, 3947, 0, 3949, 1101,
	3950, 3951, 0, 0, 0, 0, 3954, 3955, 3956, 3957,
	3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967,
	3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 0, 3977,
	3980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3989, 3990, 3991, 3992, 3993,
	3995, 3996, 3998, 4000, 4001, 4003, 0, 0, 0, 4007,
	0, 0, 0, 4009, 0, 89, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4035, 2093, 2094,
	2095, 2096, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2148,
	2149, 0, 0, 0, 0, 2172, 0, 0, 2176, 2177,
	0, 0, 0, 2182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 0, 2205,
	0, 0, 0, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2236, 0, 2241, 0, 2243, 2244, 2245, 0, 2247,
	2248, 2249, 0, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 70, 0, 0, 0, 0, 2328, 0, 2330,
	0, 2337, 2338, 2339, 2340, 2341, 2342, 0, 0, 0,
	0, 0, 0, 0, 4060, 0, 0, 0, 0, 0,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 0, 2362,
	2363, 2364, 2365, 2366, 0, 0, 1830, 0, 4075, 0,
	0, 0, 0, 0, 4078, 0, 4079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 4094,
	0, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 4119, 4120, 0, 0, 0, 0,
	174, 0, 2409, 2410, 0, 0, 0, 0, 4127, 4129,
	4131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4137, 0, 2448, 0,
	0, 0, 0, 0, 164, 0, 0, 4159, 0, 0,
	152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4178, 0, 0, 0, 0,
	0, 0, 0, 0, 960, 140, 141, 163, 162, 191,
	2491, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4201,
	4203, 4205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 4226, 197, 0, 0, 0, 731, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	4238, 4239, 1221, 197, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 138, 160, 145, 137, 1025, 158, 159, 2336,
	0, 0, 1026, 0, 175, 0, 737, 197, 737, 0,
	0, 0, 2141, 181, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 0, 149, 147,
	142, 143, 144, 148, 0, 0, 0, 0, 0, 0,
	139, 0, 1844, 1847, 1848, 1849, 1850, 1851, 1852, 150,
	1853, 1854, 1856, 1857, 1855, 1858, 1859, 1832, 1833, 1834,
	1835, 1815, 1816, 1845, 0, 1818, 0, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 0, 0, 1828, 1836,
	1837, 1838, 1839, 0, 1840, 1841, 1842, 1843, 0, 0,
	1829, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1025, 0, 0, 0, 0, 0, 1026, 2666, 0,
	0, 0, 0, 0, 0, 0, 0, 2141, 2672, 2673,
	2674, 2675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 0, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 1807, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 168, 173, 170, 176, 177, 178, 180, 182, 183,
	184, 185, 0, 0, 0, 0, 0, 186, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 0, 0, 0,
	197, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 737, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1529, 0, 0, 0, 0, 0, 0, 0,
	0, 3048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3074, 3075,
	3076, 0, 0, 3078, 0, 0, 3080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3099, 3100, 3101, 0,
	0, 0, 0, 0, 0, 3106, 0, 0, 0, 0,
	3108, 0, 0, 3110, 3111, 3112, 0, 0, 0, 3113,
	3114, 0, 0, 3115, 0, 3116, 0, 0, 0, 0,
	0, 0, 3117, 2086, 3118, 0, 0, 0, 3119, 0,
	3120, 0, 0, 3121, 0, 3122, 0, 3123, 0, 3124,
	0, 3125, 0, 3126, 0, 3127, 0, 3128, 0, 3129,
	0, 3130, 0, 3131, 0, 3132, 0, 3133, 0, 3134,
	0, 3135, 0, 3136, 0, 3137, 0, 3138, 0, 0,
	0, 3139, 0, 3140, 0, 3141, 0, 0, 3142, 0,
	3143, 0, 3144, 0, 2300, 3146, 0, 0, 3148, 0,
	0, 3150, 3151, 3152, 3153, 0, 0, 0, 0, 3154,
	2300, 2300, 2300, 2300, 2300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3164, 0, 0, 0, 0,
	0, 0, 0, 3177, 0, 1529, 3181, 0, 0, 0,
	0, 0, 0, 0, 0, 3184, 3185, 3186, 3187, 3188,
	3189, 0, 0, 0, 3190, 3191, 0, 3192, 0, 3193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1072, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 737, 737, 0,
	0, 0, 0, 0, 0, 0, 3227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3257, 0, 0, 0, 0, 0, 737, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3319, 0, 0, 0, 0, 737, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 1529,
	737, 0, 0, 737, 737, 737, 737, 0, 737, 0,
	737, 737, 0, 737, 737, 737, 737, 737, 737, 0,
	0, 0, 0, 0, 0, 0, 1529, 737, 737, 1529,
	737, 1529, 197, 737, 959, 0, 2415, 0, 0, 0,
	0, 0, 0, 0, 2419, 0, 2422, 0, 0, 2086,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3412, 737, 0,
	0, 737, 0, 197, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 714, 0, 0, 0,
	197, 0, 736, 0, 0, 3427, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2086,
	0, 0, 0, 0, 0, 0, 2581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2601, 2602, 0,
	0, 2606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2611, 0, 0, 0, 0, 0, 0,
	2614, 0, 0, 0, 0, 737, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 192, 0, 3624, 0, 2617, 0, 0, 0,
	0, 197, 0, 0, 2985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 3648, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 0, 0, 0, 3668, 0, 3669, 0, 3670,
	0, 3671, 171, 0, 0, 172, 0, 0, 0, 3674,
	3675, 0, 0, 0, 0, 0, 0, 0, 0, 3680,
	0, 0, 0, 0, 0, 0, 0, 1889, 1890, 163,
	162, 191, 0, 3681, 0, 3682, 0, 3683, 0, 3684,
	0, 3685, 0, 3686, 0, 3687, 0, 3688, 0, 3689,
	0, 3690, 0, 3691, 0, 3692, 0, 3693, 0, 3694,
	0, 3695, 0, 3696, 0, 0, 3697, 0, 0, 0,
	3698, 0, 3699, 0, 0, 0, 0, 0, 3701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3718, 0, 0, 0, 0, 0, 0, 0, 0, 3723,
	0, 3724, 3725, 0, 3726, 0, 3727, 0, 0, 0,
	0, 3728, 0, 0, 0, 2347, 0, 0, 0, 0,
	0, 0, 0, 157, 1891, 160, 0, 1888, 0, 158,
	159, 0, 0, 0, 0, 0, 175, 0, 3757, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 3766, 0, 0, 3768, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 3771, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 737, 0,
	0, 2347, 197, 0, 197, 0, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2086, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 737, 737, 737, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4017, 0, 0, 0, 0, 0, 0, 737, 0, 736,
	1440, 736, 736, 737, 737, 0, 0, 737, 0, 737,
	0, 0, 0, 0, 0, 737, 2973, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 1528, 0, 0, 737, 0, 0, 0, 737,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3021, 3022, 3023, 3024, 3025, 3026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	2086, 3036, 0, 0, 0, 197, 197, 0, 0, 197,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 3044, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 916, 197, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 4058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4072, 0, 0, 4073, 0, 4074, 0, 0,
	1529, 0, 2347, 0, 0, 1528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 0, 1097, 0, 1104, 0, 186,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 4173, 0, 4174, 0,
	4175, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 1528,
	736, 0, 0, 736, 736, 736, 736, 0, 736, 0,
	736, 736, 0, 736, 736, 736, 736, 736, 736, 0,
	4224, 0, 4225, 0, 0, 0, 1528, 736, 736, 1528,
	736, 1528, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 3309, 197, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3347, 736, 0,
	737, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 197,
	0, 3379, 0, 0, 3382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 737, 737, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1529, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 197, 197, 197, 197, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 197,
	3542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 736, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3602, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 1528, 0, 0, 0, 3617, 0, 3618, 3619, 3620,
	2150, 0, 0, 192, 0, 0, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	1285, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 1454, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 737, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1889, 1890,
	163, 162, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 1529, 0, 0, 737, 737,
	1529, 197, 197, 197, 197, 197, 0, 736, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 197, 197, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 157, 1891, 160, 0, 1888, 0,
	158, 159, 0, 0, 0, 0, 0, 175, 736, 0,
	0, 736, 0, 0, 0, 0, 181, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 737, 0, 0, 1529, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 736, 736, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 736, 736, 0, 0, 736, 0, 736,
	0, 0, 0, 0, 0, 736, 1730, 1731, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 736, 1784, 0, 0, 736,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1861, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 1897, 0, 0,
	161, 0, 0, 0, 0, 1906, 0, 0, 197, 1908,
	0, 0, 1911, 1912, 1914, 1914, 0, 1914, 0, 1914,
	1914, 0, 1923, 1914, 1914, 1914, 1914, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 1944, 0, 1097,
	0, 0, 1949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 0, 0,
	2017, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 917, 0, 0, 154,
	0, 0, 155, 197, 0, 197, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 737, 737, 0, 0, 0,
	1528, 0, 736, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 4056, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 737, 737, 737, 737, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1073, 1073, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 0, 0, 0, 0, 0,
	186, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1285, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 737, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1529, 0, 0, 0, 197, 0,
	0, 737, 0, 737, 0, 0, 736, 0, 0, 0,
	2136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 2937, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 736, 736, 0, 0,
	0, 736, 0, 0, 737, 0, 0, 0, 0, 0,
	0, 737, 0, 737, 1285, 0, 0, 1528, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 1104, 0,
	0, 0, 0, 0, 0, 2512, 2513, 2514, 0, 0,
	0, 0, 0, 0, 0, 737, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 1104, 1906, 0, 0, 1906, 0, 1906, 0,
	0, 0, 0, 0, 2545, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 1097,
	0, 737, 0, 0, 2136, 0, 736, 0, 2136, 2136,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1529, 737, 0, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 2347,
	0, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 1528, 0, 0, 736, 736,
	1528, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2622, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 197, 0,
	0, 0, 736, 0, 0, 1528, 0, 0, 0, 0,
	736, 0, 737, 0, 737, 95, 0, 0, 1025, 0,
	0, 0, 0, 965, 1026, 978, 979, 980, 966, 0,
	0, 967, 968, 0, 969, 0, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	974, 0, 981, 982, 0, 0, 0, 0, 0, 0,
	0, 0, 3386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3355, 3356, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 0, 3357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3358, 3359, 0, 0,
	0, 1530, 0, 0, 0, 2872, 0, 0, 0, 0,
	0, 0, 3592, 0, 0, 0, 0, 0, 0, 2887,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 1530, 0, 1530, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 736, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 930, 0, 0, 0, 2019, 679, 934, 0, 0,
	0, 931, 932, 0, 0, 0, 933, 935, 0, 0,
	0, 0, 679, 0, 736, 736, 736, 736, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 2969, 2045, 2046,
	679, 679, 679, 679, 679, 679, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2399, 0, 0, 0, 0, 0,
	0, 2993, 0, 0, 0, 1906, 1906, 0, 0, 0,
	2998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2136, 0,
	0, 736, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 0, 0, 0, 0,
	0, 736, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2136, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 736, 0, 736, 0, 0, 0, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3212, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 0,
	1285, 0, 0, 0, 0, 0, 0, 3239, 1914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1073, 1097, 0, 0, 0, 0, 0, 0, 0, 2399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	0, 736, 0, 2019, 679, 0, 679, 0, 1727, 2438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 736, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 679,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 679, 736,
	0, 679, 0, 2608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	679, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 736, 0, 679, 0, 0, 0,
	0, 0, 0, 2619, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2399, 2399, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3656, 3657, 3658, 3659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1530, 0, 2019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3734, 0, 3734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3762, 0, 3764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 1965, 0, 2019, 0, 0, 2399,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3734, 0, 0, 0, 0, 0, 0,
	3734, 0, 3734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 679, 679, 679, 679, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3793, 3795, 3794, 3860, 3861, 3862,
	3863, 3864, 3865, 3866, 3796, 3797, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2399, 0, 4092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1285, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1073, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4084, 0,
	0, 0, 0, 0, 0, 0, 0, 1530, 0, 0,
	0, 0, 1530, 1727, 1727, 1727, 1727, 1727, 0, 0,
	0, 0, 2399, 0, 0, 3255, 0, 0, 0, 0,
	0, 0, 0, 1727, 0, 0, 1727, 3263, 2019, 0,
	0, 1861, 0, 4141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 3809, 3810, 0, 0, 3885, 3884, 3883, 0,
	0, 3881, 3882, 3880, 0, 0, 0, 1530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 679, 0, 0, 679, 0, 0, 3886, 930, 0,
	783, 784, 3887, 3888, 934, 3889, 786, 787, 931, 932,
	0, 781, 785, 933, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3790, 3791, 3792, 3798, 3799, 3800, 3811, 3858, 3859, 3867,
	3869, 886, 3868, 3870, 3871, 3872, 3875, 3876, 3877, 3878,
	3873, 3874, 3879, 3773, 3777, 3774, 3775, 3776, 3788, 3778,
	3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3789,
	3890, 3891, 3892, 3893, 3894, 3895, 3804, 3808, 3807, 3805,
	3806, 3802, 3803, 3830, 3829, 3831, 3832, 3833, 3834, 3835,
	3836, 3838, 3837, 3839, 3840, 3841, 3842, 3843, 3844, 3812,
	3813, 3816, 3817, 3815, 3814, 3818, 3827, 3828, 3819, 3820,
	3821, 3822, 3823, 3824, 3826, 3825, 3845, 3846, 3847, 3848,
	3849, 3851, 3850, 3854, 3855, 3853, 3852, 3857, 3856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 0, 936, 0, 937, 0, 0, 941, 0, 0,
	0, 943, 942, 0, 944, 906, 905, 0, 0, 938,
	939, 0, 940, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 3896, 3897, 3898,
	3899, 3900, 3901, 3902, 3903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 679, 0, 679, 679, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	1965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1965, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 398, 0, 0, 0, 0, 0, 0, 1423,
	0, 1407, 530, 0, 1349, 1426, 1317, 1336, 1436, 1339,
	1342, 1386, 1295, 1364, 418, 1333, 1321, 1290, 1328, 1291,
	1319, 1351, 272, 1316, 1409, 1368, 1425, 368, 269, 1297,
	1288, 206, 507, 1322, 432, 1338, 205, 1388, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 1432, 372, 1374, 0, 499, 403, 0, 0,
	2019, 1413, 1412, 1343, 1353, 1415, 1362, 1400, 1348, 1387,
	1305, 1373, 1427, 1334, 1383, 1428, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 4115, 509, 961,
	0, 0, 0, 0, 4116, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 1330, 1380,
	611, 1422, 1331, 1382, 267, 323, 274, 266, 582, 1433,
	1414, 1294, 1361, 1421, 1356, 598, 0, 0, 231, 1424,
	1355, 0, 1385, 0, 1439, 1289, 1376, 0, 1292, 1296,
	1435, 1419, 1325, 277, 0, 0, 0, 0, 0, 0,
	0, 1352, 1363, 1397, 1401, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 1372, 0, 0, 0,
	1301, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 1304,
	0, 1324, 1398, 0, 1287, 299, 1298, 404, 259, 0,
	455, 1405, 1418, 1347, 631, 1420, 1345, 1344, 1392, 1302,
	1411, 1337, 367, 1300, 332, 199, 227, 0, 1335, 414,
	463, 475, 1410, 1320, 1329, 255, 1327, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 1371, 1390, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 1299, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	1315, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 1406, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 1395, 1438, 427, 474, 242, 608, 498, 201,
	1309, 1314, 1307, 0, 256, 257, 1377, 577, 1310, 1308,
	1366, 1367, 1311, 1429, 1430, 1431, 1416, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 1399, 1303, 0, 1312, 1313,
	400, 1408, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 1370, 198, 223, 370, 1434, 456, 290, 652, 620,
	486, 615, 208, 225, 1306, 264, 1318, 1326, 0, 1332,
	1340, 1341, 1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381,
	1389, 1391, 1394, 1396, 1403, 1417, 1437, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 1369, 1375, 383, 283, 307,
	322, 1384, 619, 504, 229, 468, 292, 253, 1402, 1404,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 1365, 1393, 378, 578, 579, 318,
	398, 0, 0, 0, 0, 0, 0, 1423, 0, 1407,
	530, 0, 1349, 1426, 1317, 1336, 1436, 1339, 1342, 1386,
	1295, 1364, 418, 1333, 1321, 1290, 1328, 1291, 1319, 1351,
	272, 1316, 1409, 1368, 1425, 368, 269, 1297, 1288, 206,
	507, 1322, 432, 1338, 205, 1388, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	1432, 372, 1374, 0, 499, 403, 0, 0, 0, 1413,
	1412, 1343, 1353, 1415, 1362, 1400, 1348, 1387, 1305, 1373,
	1427, 1334, 1383, 1428, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 0, 509, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 1330, 1380, 611, 1422,
	1331, 1382, 267, 323, 274, 266, 582, 1433, 1414, 1294,
	1361, 1421, 1356, 598, 0, 0, 231, 1424, 1355, 0,
	1385, 0, 1439, 1289, 1376, 0, 1292, 1296, 1435, 1419,
	1325, 277, 0, 0, 0, 0, 0, 0, 0, 1352,
	1363, 1397, 1401, 1346, 0, 0, 0, 0, 0, 0,
	3264, 0, 1323, 0, 1372, 0, 0, 0, 1301, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 1304, 0, 1324,
	1398, 0, 1287, 299, 1298, 404, 259, 0, 455, 1405,
	1418, 1347, 631, 1420, 1345, 1344, 1392, 1302, 1411, 1337,
	367, 1300, 332, 199, 227, 0, 1335, 414, 463, 475,
	1410, 1320, 1329, 255, 1327, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 1371, 1390, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	1299, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 1315, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 1406, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	1395, 1438, 427, 474, 242, 608, 498, 201, 1309, 1314,
	1307, 0, 256, 257, 1377, 577, 1310, 1308, 1366, 1367,
	1311, 1429, 1430, 1431, 1416, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 1399, 1303, 0, 1312, 1313, 400, 1408,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 1370,
	198, 223, 370, 1434, 456, 290, 652, 620, 486, 615,
	208, 225, 1306, 264, 1318, 1326, 0, 1332, 1340, 1341,
	1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391,
	1394, 1396, 1403, 1417, 1437, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 1369, 1375, 383, 283, 307, 322, 1384,
	619, 504, 229, 468, 292, 253, 1402, 1404, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 1365, 1393, 378, 578, 579, 318, 398, 0,
	0, 0, 0, 0, 0, 1423, 0, 1407, 530, 0,
	1349, 1426, 1317, 1336, 1436, 1339, 1342, 1386, 1295, 1364,
	418, 1333, 1321, 1290, 1328, 1291, 1319, 1351, 272, 1316,
	1409, 1368, 1425, 368, 269, 1297, 1288, 206, 507, 1322,
	432, 1338, 205, 1388, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 1432, 372,
	1374, 0, 499, 403, 0, 0, 0, 1413, 1412, 1343,
	1353, 1415, 1362, 1400, 1348, 1387, 1305, 1373, 1427, 1334,
	1383, 1428, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 1330, 1380, 611, 1422, 1331, 1382,
	267, 323, 274, 266, 582, 1433, 1414, 1294, 1361, 1421,
	1356, 598, 0, 0, 231, 1424, 1355, 0, 1385, 0,
	1439, 1289, 1376, 0, 1292, 1296, 1435, 1419, 1325, 277,
	0, 0, 0, 0, 0, 0, 0, 1352, 1363, 1397,
	1401, 1346, 0, 0, 0, 0, 0, 0, 3225, 0,
	1323, 0, 1372, 0, 0, 0, 1301, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 1304, 0, 1324, 1398, 0,
	1287, 299, 1298, 404, 259, 0, 455, 1405, 1418, 1347,
	631, 1420, 1345, 1344, 1392, 1302, 1411, 1337, 367, 1300,
	332, 199, 227, 0, 1335, 414, 463, 475, 1410, 1320,
	1329, 255, 1327, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 1371, 1390, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 1299, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 1315, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 1406,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 1395, 1438,
	427, 474, 242, 608, 498, 201, 1309, 1314, 1307, 0,
	256, 257, 1377, 577, 1310, 1308, 1366, 1367, 1311, 1429,
	1430, 1431, 1416, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 1399, 1303, 0, 1312, 1313, 400, 1408, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 1370, 198, 223,
	370, 1434, 456, 290, 652, 620, 486, 615, 208, 225,
	1306, 264, 1318, 1326, 0, 1332, 1340, 1341, 1354, 1357,
	1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391, 1394, 1396,
	1403, 1417, 1437, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 1369, 1375, 383, 283, 307, 322, 1384, 619, 504,
	229, 468, 292, 253, 1402, 1404, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	1365, 1393, 378, 578, 579, 318, 398, 0, 0, 0,
	0, 0, 0, 1423, 0, 1407, 530, 0, 1349, 1426,
	1317, 1336, 1436, 1339, 1342, 1386, 1295, 1364, 418, 1333,
	1321, 1290, 1328, 1291, 1319, 1351, 272, 1316, 1409, 1368,
	1425, 368, 269, 1297, 1288, 206, 507, 1322, 432, 1338,
	205, 1388, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 1432, 372, 1374, 0,
	499, 403, 0, 0, 0, 1413, 1412, 1343, 1353, 1415,
	1362, 1400, 1348, 1387, 1305, 1373, 1427, 1334, 1383, 1428,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 1330, 1380, 611, 1422, 1331, 1382, 267, 323,
	274, 266, 582, 1433, 1414, 1294, 1361, 1421, 1356, 598,
	0, 0, 231, 1424, 1355, 0, 1385, 0, 1439, 1289,
	1376, 0, 1292, 1296, 1435, 1419, 1325, 277, 0, 0,
	0, 0, 0, 0, 0, 1352, 1363, 1397, 1401, 1346,
	0, 0, 0, 0, 0, 0, 2417, 0, 1323, 0,
	1372, 0, 0, 0, 1301, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 1304, 0, 1324, 1398, 0, 1287, 299,
	1298, 404, 259, 0, 455, 1405, 1418, 1347, 631, 1420,
	1345, 1344, 1392, 1302, 1411, 1337, 367, 1300, 332, 199,
	227, 0, 1335, 414, 463, 475, 1410, 1320, 1329, 255,
	1327, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 1371, 1390, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 1299, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 1315, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 1406, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 1395, 1438, 427, 474,
	242, 608, 498, 201, 1309, 1314, 1307, 0, 256, 257,
	1377, 577, 1310, 1308, 1366, 1367, 1311, 1429, 1430, 1431,
	1416, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 1399,
	1303, 0, 1312, 1313, 400, 1408, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 1370, 198, 223, 370, 1434,
	456, 290, 652, 620, 486, 615, 208, 225, 1306, 264,
	1318, 1326, 0, 1332, 1340, 1341, 1354, 1357, 1358, 1359,
	1360, 1378, 1379, 1381, 1389, 1391, 1394, 1396, 1403, 1417,
	1437, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 1369,
	1375, 383, 283, 307, 322, 1384, 619, 504, 229, 468,
	292, 253, 1402, 1404, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 1365, 1393,
	378, 578, 579, 318, 398, 0, 0, 0, 0, 0,
	0, 1423, 0, 1407, 530, 0, 1349, 1426, 1317, 1336,
	1436, 1339, 1342, 1386, 1295, 1364, 418, 1333, 1321, 1290,
	1328, 1291, 1319, 1351, 272, 1316, 1409, 1368, 1425, 368,
	269, 1297, 1288, 206, 507, 1322, 432, 1338, 205, 1388,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 1432, 372, 1374, 0, 499, 403,
	0, 0, 0, 1413, 1412, 1343, 1353, 1415, 1362, 1400,
	1348, 1387, 1305, 1373, 1427, 1334, 1383, 1428, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	1330, 1380, 611, 1422, 1331, 1382, 267, 323, 274, 266,
	582, 1433, 1414, 1294, 1361, 1421, 1356, 598, 0, 0,
	231, 1424, 1355, 0, 1385, 0, 1439, 1289, 1376, 0,
	1292, 1296, 1435, 1419, 1325, 277, 0, 0, 0, 0,
	0, 0, 0, 1352, 1363, 1397, 1401, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 1323, 0, 1372, 0,
	0, 0, 1301, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 1304, 0, 1324, 1398, 0, 1287, 299, 1298, 404,
	259, 0, 455, 1405, 1418, 1347, 631, 1420, 1345, 1344,
	1392, 1302, 1411, 1337, 367, 1300, 332, 199, 227, 0,
	1335, 414, 463, 475, 1410, 1320, 1329, 255, 1327, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 1371,
	1390, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 1299, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 1315, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 1406, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 1395, 1438, 427, 474, 242, 608,
	498, 201, 1309, 1314, 1307, 0, 256, 257, 1377, 577,
	1310, 1308, 1366, 1367, 1311, 1429, 1430, 1431, 1416, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 1399, 1303, 0,
	1312, 1313, 400, 1408, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 1370, 198, 223, 370, 1434, 456, 290,
	652, 620, 486, 615, 208, 225, 1306, 264, 1318, 1326,
	0, 1332, 1340, 1341, 1354, 1357, 1358, 1359, 1360, 1378,
	1379, 1381, 1389, 1391, 1394, 1396, 1403, 1417, 1437, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 1369, 1375, 383,
	283, 307, 322, 1384, 619, 504, 229, 468, 292, 253,
	1402, 1404, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 1365, 1393, 378, 578,
	579, 318, 398, 0, 0, 0, 0, 0, 0, 1423,
	0, 1407, 530, 0, 1349, 1426, 1317, 1336, 1436, 1339,
	1342, 1386, 1295, 1364, 418, 1333, 1321, 1290, 1328, 1291,
	1319, 1351, 272, 1316, 1409, 1368, 1425, 368, 269, 1297,
	1288, 206, 507, 1322, 432, 1338, 205, 1388, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 1432, 372, 1374, 0, 499, 403, 0, 0,
	0, 1413, 1412, 1343, 1353, 1415, 1362, 1400, 1348, 1387,
	1305, 1373, 1427, 1334, 1383, 1428, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 1330, 1380,
	611, 1422, 1331, 1382, 267, 323, 274, 266, 582, 1433,
	1414, 1294, 1361, 1421, 1356, 598, 0, 0, 231, 1424,
	1355, 0, 1385, 0, 1439, 1289, 1376, 0, 1292, 1296,
	1435, 1419, 1325, 277, 0, 0, 0, 0, 0, 0,
	0, 1352, 1363, 1397, 1401, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 1372, 0, 0, 0,
	1301, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 1304,
	0, 1324, 1398, 0, 1287, 299, 1298, 404, 259, 0,
	455, 1405, 1418, 1347, 631, 1420, 1345, 1344, 1392, 1302,
	1411, 1337, 367, 1300, 332, 199, 227, 0, 1335, 414,
	463, 475, 1410, 1320, 1329, 255, 1327, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 1371, 1390, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 1299, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	1315, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 1406, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 1395, 1438, 427, 474, 242, 608, 498, 201,
	1309, 1314, 1307, 0, 256, 257, 1377, 577, 1310, 1308,
	1366, 1367, 1311, 1429, 1430, 1431, 1416, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 1399, 1303, 0, 1312, 1313,
	400, 1408, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 1370, 198, 223, 370, 1434, 456, 290, 652, 620,
	486, 615, 208, 225, 1306, 264, 1318, 1326, 0, 1332,
	1340, 1341, 1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381,
	1389, 1391, 1394, 1396, 1403, 1417, 1437, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 1369, 1375, 383, 283, 307,
	322, 1384, 619, 504, 229, 468, 292, 253, 1402, 1404,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 1365, 1393, 378, 578, 579, 318,
	398, 0, 0, 0, 0, 0, 0, 1423, 0, 1407,
	530, 0, 1349, 1426, 1317, 1336, 1436, 1339, 1342, 1386,
	1295, 1364, 418, 1333, 1321, 1290, 1328, 1291, 1319, 1351,
	272, 1316, 1409, 1368, 1425, 368, 269, 1297, 1288, 206,
	507, 1322, 432, 1338, 205, 1388, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	1432, 372, 1374, 0, 499, 403, 0, 0, 0, 1413,
	1412, 1343, 1353, 1415, 1362, 1400, 1348, 1387, 1305, 1373,
	1427, 1334, 1383, 1428, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 0, 509, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 1330, 1380, 611, 1422,
	1331, 1382, 267, 323, 274, 266, 582, 1433, 1414, 1294,
	1361, 1421, 1356, 598, 0, 0, 231, 1424, 1355, 0,
	1385, 0, 1439, 1289, 1376, 0, 1292, 1296, 1435, 1419,
	1325, 277, 0, 0, 0, 0, 0, 0, 0, 1352,
	1363, 1397, 1401, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1372, 0, 0, 0, 1301, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 1304, 0, 1324,
	1398, 0, 1287, 299, 1298, 404, 259, 0, 455, 1405,
	1418, 1347, 631, 1420, 1345, 1344, 1392, 1302, 1411, 1337,
	367, 1300, 332, 199, 227, 0, 1335, 414, 463, 475,
	1410, 1320, 1329, 255, 1327, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 1371, 1390, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	1299, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 1315, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 1406, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	1395, 1438, 427, 474, 242, 608, 498, 201, 1309, 1314,
	1307, 0, 256, 257, 1377, 577, 1310, 1308, 1366, 1367,
	1311, 1429, 1430, 1431, 1416, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 1399, 1303, 0, 1312, 1313, 400, 1408,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 1370,
	198, 223, 370, 1434, 456, 290, 652, 620, 486, 615,
	208, 225, 1306, 264, 1318, 1326, 0, 1332, 1340, 1341,
	1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391,
	1394, 1396, 1403, 1417, 1437, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 1369, 1375, 383, 283, 307, 322, 1384,
	619, 504, 229, 468, 292, 253, 1402, 1404, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 1365, 1393, 378, 578, 579, 318, 398, 0,
	0, 0, 0, 0, 0, 1423, 0, 1407, 530, 0,
	1349, 1426, 1317, 1336, 1436, 1339, 1342, 1386, 1295, 1364,
	418, 1333, 1321, 1290, 1328, 1291, 1319, 1351, 272, 1316,
	1409, 1368, 1425, 368, 269, 1297, 1288, 206, 507, 1322,
	432, 1338, 205, 1388, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 1432, 372,
	1374, 0, 499, 403, 0, 0, 0, 1413, 1412, 1343,
	1353, 1415, 1362, 1400, 1348, 1387, 1305, 1373, 1427, 1334,
	1383, 1428, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 1330, 1380, 611, 1422, 1331, 1382,
	267, 323, 274, 266, 582, 1433, 1414, 1294, 1361, 1421,
	1356, 598, 0, 0, 231, 1424, 1355, 0, 1385, 0,
	1439, 1289, 1376, 0, 1292, 1296, 1435, 1419, 1325, 277,
	0, 0, 0, 0, 0, 0, 0, 1352, 1363, 1397,
	1401, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 1372, 0, 0, 0, 1301, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 1304, 0, 1324, 1398, 0,
	1287, 299, 1298, 404, 259, 0, 455, 1405, 1418, 1347,
	631, 1420, 1345, 1344, 1392, 1302, 1411, 1337, 367, 1300,
	332, 199, 227, 0, 1335, 414, 463, 475, 1410, 1320,
	1329, 255, 1327, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 1371, 1390, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 1299, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 1315, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 1406,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 1395, 1438,
	427, 474, 242, 608, 498, 201, 1309, 1314, 1307, 0,
	256, 257, 1377, 577, 1310, 1308, 1366, 1367, 1311, 1429,
	1430, 1431, 1416, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 1399, 1303, 0, 1312, 1313, 400, 1408, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 1370, 198, 223,
	370, 1434, 456, 290, 652, 620, 486, 615, 208, 225,
	1306, 264, 1318, 1326, 0, 1332, 1340, 1341, 1354, 1357,
	1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391, 1394, 1396,
	1403, 1417, 1437, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 1369, 1375, 383, 283, 307, 322, 1384, 619, 504,
	229, 468, 292, 253, 1402, 1404, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	1365, 1393, 378, 578, 579, 318, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 766, 0, 0, 0, 272, 771, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 778, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 95, 0,
	0, 1025, 509, 961, 750, 927, 965, 1026, 978, 979,
	980, 966, 0, 240, 967, 968, 247, 969, 0, 926,
	809, 811, 810, 876, 877, 878, 879, 880, 881, 882,
	812, 813, 807, 974, 611, 981, 982, 0, 267, 323,
	274, 266, 582, 0, 0, 2237, 2238, 2239, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	746, 763, 0, 777, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 760, 761, 0, 0, 0, 0,
	921, 0, 762, 0, 0, 770, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 920, 0, 0, 631, 0,
	0, 918, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 971,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 972,
	973, 258, 654, 817, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 825, 826,
	282, 309, 902, 901, 900, 308, 310, 898, 899, 897,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 908, 930, 919, 783, 784, 909, 910,
	934, 911, 786, 787, 931, 932, 780, 781, 785, 933,
	935, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 922,
	769, 768, 0, 775, 776, 0, 805, 806, 808, 814,
	815, 816, 827, 874, 875, 883, 885, 886, 884, 887,
	888, 889, 892, 893, 894, 895, 890, 891, 896, 788,
	792, 789, 790, 791, 803, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 804, 945, 946, 947, 948,
	949, 950, 820, 824, 823, 821, 822, 818, 819, 846,
	845, 847, 848, 849, 850, 851, 852, 854, 853, 855,
	856, 857, 858, 859, 860, 828, 829, 832, 833, 831,
	830, 834, 843, 844, 835, 836, 837, 838, 839, 840,
	842, 841, 861, 862, 863, 864, 865, 867, 866, 870,
	871, 869, 868, 873, 872, 767, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 936, 264,
	937, 0, 0, 941, 0, 0, 0, 943, 942, 0,
	944, 906, 905, 0, 0, 938, 939, 0, 940, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 951, 952, 953, 954, 955, 956, 957,
	958, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 976, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 766, 0, 0, 0, 272, 771,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 778, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 774, 0, 0, 0, 0, 0, 0,
	2446, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	95, 0, 0, 1025, 509, 961, 750, 927, 965, 1026,
	978, 979, 980, 966, 0, 240, 967, 968, 247, 969,
	0, 926, 809, 811, 810, 876, 877, 878, 879, 880,
	881, 882, 812, 813, 807, 974, 611, 981, 982, 2447,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 746, 763, 0, 777, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 761, 0, 0,
	0, 0, 921, 0, 762, 0, 0, 770, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 920, 0, 0,
	631, 0, 0, 918, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 971, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 972, 973, 258, 654, 817, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	825, 826, 282, 309, 902, 901, 900, 308, 310, 898,
	899, 897, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 908, 930, 919, 783, 784,
	909, 910, 934, 911, 786, 787, 931, 932, 780, 781,
	785, 933, 935, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 922, 769, 768, 0, 775, 776, 0, 805, 806,
	808, 814, 815, 816, 827, 874, 875, 883, 885, 886,
	884, 887, 888, 889, 892, 893, 894, 895, 890, 891,
	896, 788, 792, 789, 790, 791, 803, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 804, 945, 946,
	947, 948, 949, 950, 820, 824, 823, 821, 822, 818,
	819, 846, 845, 847, 848, 849, 850, 851, 852, 854,
	853, 855, 856, 857, 858, 859, 860, 828, 829, 832,
	833, 831, 830, 834, 843, 844, 835, 836, 837, 838,
	839, 840, 842, 841, 861, 862, 863, 864, 865, 867,
	866, 870, 871, 869, 868, 873, 872, 767, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	936, 264, 937, 0, 0, 941, 0, 0, 0, 943,
	942, 0, 944, 906, 905, 0, 0, 938, 939, 0,
	940, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 951, 952, 953, 954, 955,
	956, 957, 958, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 976, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 86,
	530, 0, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 766, 0, 0, 0,
	272, 771, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	778, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 95, 0, 0, 1025, 509, 961, 750, 927,
	965, 1026, 978, 979, 980, 966, 0, 240, 967, 968,
	247, 969, 0, 926, 809, 811, 810, 876, 877, 878,
	879, 880, 881, 882, 812, 813, 807, 974, 611, 981,
	982, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 746, 763, 0, 777, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 760, 761,
	0, 0, 0, 0, 921, 0, 762, 0, 0, 770,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 920,
	0, 0, 631, 0, 0, 918, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 971, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 972, 973, 258, 654, 817, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 825, 826, 282, 309, 902, 901, 900, 308,
	310, 898, 899, 897, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 908, 930, 919,
	783, 784, 909, 910, 934, 911, 786, 787, 931, 932,
	780, 781, 785, 933, 935, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 922, 769, 768, 0, 775, 776, 0,
	805, 806, 808, 814, 815, 816, 827, 874, 875, 883,
	885, 886, 884, 887, 888, 889, 892, 893, 894, 895,
	890, 891, 896, 788, 792, 789, 790, 791, 803, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 804,
	945, 946, 947, 948, 949, 950, 820, 824, 823, 821,
	822, 818, 819, 846, 845, 847, 848, 849, 850, 851,
	852, 854, 853, 855, 856, 857, 858, 859, 860, 828,
	829, 832, 833, 831, 830, 834, 843, 844, 835, 836,
	837, 838, 839, 840, 842, 841, 861, 862, 863, 864,
	865, 867, 866, 870, 871, 869, 868, 873, 872, 767,
	198, 223, 370, 94, 456, 290, 652, 620, 486, 615,
	208, 225, 936, 264, 937, 0, 0, 941, 0, 0,
	0, 943, 942, 0, 944, 906, 905, 0, 0, 938,
	939, 0, 940, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 951, 952, 953,
	954, 955, 956, 957, 958, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 976, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 766, 0,
	0, 0, 272, 771, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 778, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 95, 0, 0, 1025, 509, 961,
	750, 927, 965, 1026, 978, 979, 980, 966, 0, 240,
	967, 968, 247, 969, 0, 926, 809, 811, 810, 876,
	877, 878, 879, 880, 881, 882, 812, 813, 807, 974,
	611, 981, 982, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 746, 763, 0, 777,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 761, 0, 0, 0, 0, 921, 0, 762, 0,
	0, 770, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 920, 0, 0, 631, 0, 0, 918, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 971, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 4101, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 972, 973, 258, 654, 817,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 825, 826, 282, 309, 902, 901,
	900, 308, 310, 898, 899, 897, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 908,
	930, 919, 783, 784, 909, 910, 934, 911, 786, 787,
	931, 932, 780, 781, 785, 933, 935, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 922, 769, 768, 0, 775,
	776, 0, 805, 806, 808, 814, 815, 816, 827, 874,
	875, 883, 885, 886, 884, 887, 888, 889, 892, 893,
	894, 895, 890, 891, 896, 788, 792, 789, 790, 791,
	803, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 804, 945, 946, 947, 948, 949, 950, 820, 824,
	823, 821, 822, 818, 819, 846, 845, 847, 848, 849,
	850, 851, 852, 854, 853, 855, 856, 857, 858, 859,
	860, 828, 829, 832, 833, 831, 830, 834, 843, 844,
	835, 836, 837, 838, 839, 840, 842, 841, 861, 862,
	863, 864, 865, 867, 866, 870, 871, 869, 868, 873,
	872, 767, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 936, 264, 937, 0, 0, 941,
	0, 0, 0, 943, 942, 0, 944, 906, 905, 0,
	0, 938, 939, 0, 940, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 951,
	952, 953, 954, 955, 956, 957, 958, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 976, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	766, 0, 0, 0, 272, 771, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 778, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 1758, 1025,
	509, 961, 750, 927, 965, 1026, 978, 979, 980, 966,
	0, 240, 967, 968, 247, 969, 0, 926, 809, 811,
	810, 876, 877, 878, 879, 880, 881, 882, 812, 813,
	807, 974, 611, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 746, 763,
	0, 777, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 761, 0, 0, 0, 0, 921, 0,
	762, 0, 0, 770, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 920, 0, 0, 631, 0, 0, 918,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 971, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 972, 973, 258,
	654, 817, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 825, 826, 282, 309,
	902, 901, 900, 308, 310, 898, 899, 897, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 908, 930, 919, 783, 784, 909, 910, 934, 911,
	786, 787, 931, 932, 780, 781, 785, 933, 935, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 922, 769, 768,
	0, 775, 776, 0, 805, 806, 808, 814, 815, 816,
	827, 874, 875, 883, 885, 886, 884, 887, 888, 889,
	892, 893, 894, 895, 890, 891, 896, 788, 792, 789,
	790, 791, 803, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 804, 945, 946, 947, 948, 949, 950,
	820, 824, 823, 821, 822, 818, 819, 846, 845, 847,
	848, 849, 850, 851, 852, 854, 853, 855, 856, 857,
	858, 859, 860, 828, 829, 832, 833, 831, 830, 834,
	843, 844, 835, 836, 837, 838, 839, 840, 842, 841,
	861, 862, 863, 864, 865, 867, 866, 870, 871, 869,
	868, 873, 872, 767, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 936, 264, 937, 0,
	0, 941, 0, 0, 0, 943, 942, 0, 944, 906,
	905, 0, 0, 938, 939, 0, 940, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 951, 952, 953, 954, 955, 956, 957, 958, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	976, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 766, 0, 0, 0, 272, 771, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 778, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 95, 0,
	0, 1025, 509, 961, 750, 927, 965, 1026, 978, 979,
	980, 966, 0, 240, 967, 968, 247, 969, 0, 926,
	809, 811, 810, 876, 877, 878, 879, 880, 881, 882,
	812, 813, 807, 974, 611, 981, 982, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	746, 763, 0, 777, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 760, 761, 1071, 0, 0, 0,
	921, 0, 762, 0, 0, 770, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 920, 0, 0, 631, 0,
	0, 918, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 971,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 972,
	973, 258, 654, 817, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 825, 826,
	282, 309, 902, 901, 900, 308, 310, 898, 899, 897,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 908, 930, 919, 783, 784, 909, 910,
	934, 911, 786, 787, 931, 932, 780, 781, 785, 933,
	935, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 922,
	769, 768, 0, 775, 776, 0, 805, 806, 808, 814,
	815, 816, 827, 874, 875, 883, 885, 886, 884, 887,
	888, 889, 892, 893, 894, 895, 890, 891, 896, 788,
	792, 789, 790, 791, 803, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 804, 945, 946, 947, 948,
	949, 950, 820, 824, 823, 821, 822, 818, 819, 846,
	845, 847, 848, 849, 850, 851, 852, 854, 853, 855,
	856, 857, 858, 859, 860, 828, 829, 832, 833, 831,
	830, 834, 843, 844, 835, 836, 837, 838, 839, 840,
	842, 841, 861, 862, 863, 864, 865, 867, 866, 870,
	871, 869, 868, 873, 872, 767, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 936, 264,
	937, 0, 0, 941, 0, 0, 0, 943, 942, 0,
	944, 906, 905, 0, 0, 938, 939, 0, 940, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 951, 952, 953, 954, 955, 956, 957,
	958, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 976, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 766, 0, 0, 0, 272, 771,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 778, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	95, 0, 0, 1025, 509, 961, 750, 927, 965, 1026,
	978, 979, 980, 966, 0, 240, 967, 968, 247, 969,
	0, 926, 809, 811, 810, 876, 877, 878, 879, 880,
	881, 882, 812, 813, 807, 974, 611, 981, 982, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 746, 763, 0, 777, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 761, 0, 0,
	0, 0, 921, 0, 762, 0, 0, 770, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 920, 0, 0,
	631, 0, 0, 918, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 971, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 972, 973, 258, 654, 817, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	825, 826, 282, 309, 902, 901, 900, 308, 310, 898,
	899, 897, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 908, 930, 919, 783, 784,
	909, 910, 934, 911, 786, 787, 931, 932, 780, 781,
	785, 933, 935, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 922, 769, 768, 0, 775, 776, 0, 805, 806,
	808, 814, 815, 816, 827, 874, 875, 883, 885, 886,
	884, 887, 888, 889, 892, 893, 894, 895, 890, 891,
	896, 788, 792, 789, 790, 791, 803, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 804, 945, 946,
	947, 948, 949, 950, 820, 824, 823, 821, 822, 818,
	819, 846, 845, 847, 848, 849, 850, 851, 852, 854,
	853, 855, 856, 857, 858, 859, 860, 828, 829, 832,
	833, 831, 830, 834, 843, 844, 835, 836, 837, 838,
	839, 840, 842, 841, 861, 862, 863, 864, 865, 867,
	866, 870, 871, 869, 868, 873, 872, 767, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	936, 264, 937, 0, 0, 941, 0, 0, 0, 943,
	942, 0, 944, 906, 905, 0, 0, 938, 939, 0,
	940, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 951, 952, 953, 954, 955,
	956, 957, 958, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 976, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 766, 0, 0, 0,
	272, 771, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	778, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 95, 0, 0, 1025, 509, 961, 750, 927,
	965, 1026, 978, 979, 980, 966, 0, 240, 967, 968,
	247, 969, 0, 926, 809, 811, 810, 876, 877, 878,
	879, 880, 881, 882, 812, 813, 807, 974, 611, 981,
	982, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 746, 763, 0, 777, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 760, 761,
	0, 0, 0, 0, 921, 0, 762, 0, 0, 770,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 3180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 920,
	0, 0, 631, 0, 0, 918, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 971, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 972, 973, 258, 654, 817, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 825, 826, 282, 309, 902, 901, 900, 308,
	310, 898, 899, 897, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 908, 930, 919,
	783, 784, 909, 910, 934, 911, 786, 787, 931, 932,
	780, 781, 785, 933, 935, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 922, 769, 768, 0, 775, 776, 0,
	805, 806, 808, 814, 815, 816, 827, 874, 875, 883,
	885, 886, 884, 887, 888, 889, 892, 893, 894, 895,
	890, 891, 896, 788, 792, 789, 790, 791, 803, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 804,
	945, 946, 947, 948, 949, 950, 820, 824, 823, 821,
	822, 818, 819, 846, 845, 847, 848, 849, 850, 851,
	852, 854, 853, 855, 856, 857, 858, 859, 860, 828,
	829, 832, 833, 831, 830, 834, 843, 844, 835, 836,
	837, 838, 839, 840, 842, 841, 861, 862, 863, 864,
	865, 867, 866, 870, 871, 869, 868, 873, 872, 767,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 936, 264, 937, 0, 0, 941, 0, 0,
	0, 943, 942, 0, 944, 906, 905, 0, 0, 938,
	939, 0, 940, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 951, 952, 953,
	954, 955, 956, 957, 958, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 976, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 766, 0,
	0, 0, 272, 771, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 778, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 95, 0, 0, 1025, 509, 961,
	750, 927, 965, 1026, 978, 979, 980, 966, 0, 240,
	967, 968, 247, 969, 0, 926, 809, 811, 810, 876,
	877, 878, 879, 880, 881, 882, 812, 813, 807, 974,
	611, 981, 982, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 746, 763, 0, 777,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 761, 0, 0, 0, 0, 921, 0, 762, 0,
	0, 770, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 3176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 920, 0, 0, 631, 0, 0, 918, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 971, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 972, 973, 258, 654, 817,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 825, 826, 282, 309, 902, 901,
	900, 308, 310, 898, 899, 897, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 908,
	930, 919, 783, 784, 909, 910, 934, 911, 786, 787,
	931, 932, 780, 781, 785, 933, 935, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 922, 769, 768, 0, 775,
	776, 0, 805, 806, 808, 814, 815, 816, 827, 874,
	875, 883, 885, 886, 884, 887, 888, 889, 892, 893,
	894, 895, 890, 891, 896, 788, 792, 789, 790, 791,
	803, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 804, 945, 946, 947, 948, 949, 950, 820, 824,
	823, 821, 822, 818, 819, 846, 845, 847, 848, 849,
	850, 851, 852, 854, 853, 855, 856, 857, 858, 859,
	860, 828, 829, 832, 833, 831, 830, 834, 843, 844,
	835, 836, 837, 838, 839, 840, 842, 841, 861, 862,
	863, 864, 865, 867, 866, 870, 871, 869, 868, 873,
	872, 767, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 936, 264, 937, 0, 0, 941,
	0, 0, 0, 943, 942, 0, 944, 906, 905, 0,
	0, 938, 939, 0, 940, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 951,
	952, 953, 954, 955, 956, 957, 958, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 976, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	766, 0, 0, 0, 272, 771, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 778, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 1025,
	509, 961, 1092, 927, 965, 1026, 978, 979, 980, 966,
	0, 240, 967, 968, 247, 969, 0, 926, 809, 811,
	810, 876, 877, 878, 879, 880, 881, 882, 812, 813,
	807, 974, 611, 981, 982, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 763,
	0, 777, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 761, 0, 0, 0, 0, 921, 0,
	762, 0, 0, 770, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 920, 0, 0, 631, 0, 0, 918,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 971, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 972, 973, 258,
	654, 817, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 825, 826, 282, 309,
	902, 901, 900, 308, 310, 898, 899, 897, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 908, 930, 919, 783, 784, 909, 910, 934, 911,
	786, 787, 931, 932, 780, 781, 785, 933, 935, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 922, 769, 768,
	0, 775, 776, 0, 805, 806, 808, 814, 815, 816,
	827, 874, 875, 883, 885, 886, 884, 887, 888, 889,
	892, 893, 894, 895, 890, 891, 896, 788, 792, 789,
	790, 791, 803, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 804, 945, 946, 947, 948, 949, 950,
	820, 824, 823, 821, 822, 818, 819, 846, 845, 847,
	848, 849, 850, 851, 852, 854, 853, 855, 856, 857,
	858, 859, 860, 828, 829, 832, 833, 831, 830, 834,
	843, 844, 835, 836, 837, 838, 839, 840, 842, 841,
	861, 862, 863, 864, 865, 867, 866, 870, 871, 869,
	868, 873, 872, 767, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 936, 264, 937, 0,
	0, 941, 0, 0, 0, 943, 942, 0, 944, 906,
	905, 0, 0, 938, 939, 0, 940, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 951, 952, 953, 954, 955, 956, 957, 958, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	976, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 779, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 766, 0, 0, 0, 272, 771, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 778, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 95, 0,
	0, 1025, 509, 961, 1092, 927, 965, 1026, 978, 979,
	980, 966, 0, 240, 967, 968, 247, 969, 0, 926,
	809, 811, 810, 876, 877, 878, 879, 880, 881, 882,
	812, 813, 807, 974, 611, 981, 982, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 763, 0, 777, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 760, 761, 0, 0, 0, 0,
	921, 0, 762, 0, 0, 770, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 2128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 920, 0, 0, 631, 0,
	0, 918, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 971,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 972,
	973, 258, 654, 817, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 825, 826,
	282, 309, 902, 901, 900, 308, 310, 898, 899, 897,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 908, 930, 919, 783, 784, 909, 910,
	934, 911, 786, 787, 931, 932, 780, 781, 785, 933,
	935, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 922,
	769, 768, 0, 775, 776, 0, 805, 806, 808, 814,
	815, 816, 827, 874, 875, 883, 885, 886, 884, 887,
	888, 889, 892, 893, 894, 895, 890, 891, 896, 788,
	792, 789, 790, 791, 803, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 804, 945, 946, 947, 948,
	949, 950, 820, 824, 823, 821, 822, 818, 819, 846,
	845, 847, 848, 849, 850, 851, 852, 854, 853, 855,
	856, 857, 858, 859, 860, 828, 829, 832, 833, 831,
	830, 834, 843, 844, 835, 836, 837, 838, 839, 840,
	842, 841, 861, 862, 863, 864, 865, 867, 866, 870,
	871, 869, 868, 873, 872, 767, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 936, 264,
	937, 0, 0, 941, 0, 0, 0, 943, 942, 0,
	944, 906, 905, 0, 0, 938, 939, 0, 940, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 951, 952, 953, 954, 955, 956, 957,
	958, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 976, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 766, 0, 0, 0, 272, 771,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 778, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	95, 0, 0, 1025, 509, 961, 1092, 927, 965, 1026,
	978, 979, 980, 966, 0, 240, 967, 968, 247, 969,
	0, 926, 809, 811, 810, 876, 877, 878, 879, 880,
	881, 882, 812, 813, 807, 974, 611, 981, 982, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 763, 0, 777, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 761, 0, 0,
	0, 0, 921, 0, 762, 0, 0, 770, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	2126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 920, 0, 0,
	631, 0, 0, 918, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 971, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 972, 973, 258, 654, 817, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	825, 826, 282, 309, 902, 901, 900, 308, 310, 898,
	899, 897, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 908, 930, 919, 783, 784,
	909, 910, 934, 911, 786, 787, 931, 932, 780, 781,
	785, 933, 935, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 922, 769, 768, 0, 775, 776, 0, 805, 806,
	808, 814, 815, 816, 827, 874, 875, 883, 885, 886,
	884, 887, 888, 889, 892, 893, 894, 895, 890, 891,
	896, 788, 792, 789, 790, 791, 803, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 804, 945, 946,
	947, 948, 949, 950, 820, 824, 823, 821, 822, 818,
	819, 846, 845, 847, 848, 849, 850, 851, 852, 854,
	853, 855, 856, 857, 858, 859, 860, 828, 829, 832,
	833, 831, 830, 834, 843, 844, 835, 836, 837, 838,
	839, 840, 842, 841, 861, 862, 863, 864, 865, 867,
	866, 870, 871, 869, 868, 873, 872, 767, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	936, 264, 937, 0, 0, 941, 0, 0, 0, 943,
	942, 0, 944, 906, 905, 0, 0, 938, 939, 0,
	940, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 951, 952, 953, 954, 955,
	956, 957, 958, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 976, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 0, 509, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 1143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 1142, 631, 0, 0, 0, 0, 0, 1139, 1140,
	367, 1100, 332, 199, 227, 1133, 1137, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 1713, 509, 961,
	0, 0, 1710, 0, 0, 0, 0, 1708, 0, 240,
	1709, 1707, 247, 1712, 0, 926, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 86, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 94, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 2433, 0, 0, 2432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 1781, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 1783, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 1785, 509, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 1481, 0, 1482, 1483,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 86, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	95, 0, 1758, 0, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 94, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 95, 0, 0, 0, 509, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	2433, 0, 0, 2432, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 1100, 332, 199, 227, 1098, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 2377,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1966,
	509, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	1758, 0, 509, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 3735, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 2137, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 2888, 509, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 726,
	0, 0, 0, 0, 2873, 0, 0, 0, 0, 240,
	0, 0, 247, 2874, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 1804, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 1803,
	509, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 728, 729, 730, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 4077, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 1966, 509, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 3735, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 2434, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 1785, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 0, 509, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 2084, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 2075, 509, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1933, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 1931, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 1929, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 1927, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 0, 509, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	1925, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 1921, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 1919, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 1917, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 1892, 0, 0, 0, 509, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 1789, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 95, 0, 0, 0,
	509, 961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1458, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 1457, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 368, 269, 0, 0, 206,
	507, 0, 432, 0, 205, 0, 489, 254, 379, 376,
	585, 284, 275, 271, 252, 319, 387, 430, 520, 424,
	0, 372, 0, 0, 499, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 325, 250, 327, 204, 415, 500,
	288, 0, 0, 0, 0, 0, 509, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	247, 0, 0, 0, 353, 362, 361, 341, 342, 344,
	346, 352, 359, 365, 338, 347, 0, 0, 611, 0,
	0, 0, 267, 323, 274, 266, 582, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 404, 259, 0, 455, 0,
	677, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 332, 199, 227, 0, 0, 414, 463, 475,
	0, 0, 0, 255, 0, 473, 428, 606, 235, 286,
	460, 434, 471, 442, 289, 0, 0, 472, 374, 587,
	452, 603, 632, 633, 265, 408, 617, 524, 625, 650,
	228, 262, 422, 508, 609, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 638, 226, 481, 373, 244, 233,
	589, 614, 301, 291, 458, 645, 215, 519, 600, 241,
	485, 0, 0, 653, 249, 506, 612, 601, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 654, 230, 624, 222,
	0, 623, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 610, 628, 0, 210, 0,
	501, 613, 655, 454, 214, 236, 237, 239, 0, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 0, 581, 604, 618, 630, 636, 637, 639, 640,
	641, 642, 643, 646, 644, 409, 313, 497, 335, 375,
	0, 0, 427, 474, 242, 608, 498, 201, 0, 0,
	0, 0, 256, 257, 0, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 651, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 0, 0, 0, 0, 0, 400, 0,
	593, 594, 674, 386, 488, 605, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 621, 622, 626, 207,
	464, 465, 466, 467, 294, 616, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 0,
	198, 223, 370, 0, 456, 290, 652, 620, 486, 615,
	208, 225, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 607, 627, 634, 482, 303, 304, 446,
	447, 316, 317, 648, 649, 302, 602, 635, 599, 647,
	629, 440, 380, 0, 0, 383, 283, 307, 322, 0,
	619, 504, 229, 468, 292, 253, 0, 0, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 398, 0, 378, 578, 579, 318, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 368, 269, 0,
	0, 206, 507, 0, 432, 0, 205, 0, 489, 254,
	379, 376, 585, 284, 275, 271, 252, 319, 387, 430,
	520, 424, 0, 372, 0, 0, 499, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 325, 250, 327, 204,
	415, 500, 288, 0, 0, 0, 0, 0, 509, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 247, 0, 0, 0, 353, 362, 361, 341,
	342, 344, 346, 352, 359, 365, 338, 347, 0, 0,
	611, 0, 0, 0, 267, 323, 274, 266, 582, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 404, 259, 0,
	455, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 332, 199, 227, 0, 0, 414,
	463, 475, 0, 0, 0, 255, 0, 473, 428, 606,
	235, 286, 460, 434, 471, 442, 289, 0, 0, 472,
	374, 587, 452, 603, 632, 633, 265, 408, 617, 524,
	625, 650, 228, 262, 422, 508, 609, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 638, 226, 481, 373,
	244, 233, 589, 614, 301, 291, 458, 645, 215, 519,
	600, 241, 485, 0, 0, 653, 249, 506, 612, 601,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 654, 230,
	624, 222, 0, 623, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 610, 628, 0,
	210, 0, 501, 613, 655, 454, 214, 236, 237, 239,
	0, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 0, 581, 604, 618, 630, 636, 637,
	639, 640, 641, 642, 643, 646, 644, 409, 313, 497,
	335, 375, 0, 0, 427, 474, 242, 608, 498, 201,
	0, 0, 0, 0, 256, 257, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 651, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 0, 0, 0, 0, 0,
	400, 0, 593, 594, 674, 386, 488, 605, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 621, 622,
	626, 207, 464, 465, 466, 467, 294, 616, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 0, 198, 223, 370, 0, 456, 290, 652, 620,
	486, 615, 208, 225, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 4142,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 607, 627, 634, 482, 303,
	304, 446, 447, 316, 317, 648, 649, 302, 602, 635,
	599, 647, 629, 440, 380, 0, 0, 383, 283, 307,
	322, 0, 619, 504, 229, 468, 292, 253, 0, 0,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 398, 0, 378, 578, 579, 318,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 368,
	269, 0, 0, 206, 507, 0, 432, 0, 205, 0,
	489, 254, 379, 376, 585, 284, 275, 271, 252, 319,
	387, 430, 520, 424, 0, 372, 0, 0, 499, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 250,
	327, 204, 415, 500, 288, 0, 0, 0, 0, 0,
	509, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 247, 0, 0, 0, 353, 362,
	361, 341, 342, 344, 346, 352, 359, 365, 338, 347,
	0, 0, 611, 0, 0, 0, 267, 323, 274, 266,
	582, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 404,
	259, 0, 455, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 332, 199, 227, 0,
	0, 414, 463, 475, 0, 0, 0, 255, 0, 473,
	428, 606, 235, 286, 460, 434, 471, 442, 289, 0,
	0, 472, 374, 587, 452, 603, 632, 633, 265, 408,
	617, 524, 625, 650, 228, 262, 422, 508, 609, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 638, 226,
	481, 373, 244, 233, 589, 614, 301, 291, 458, 645,
	215, 519, 600, 241, 485, 0, 0, 653, 249, 506,
	612, 601, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	654, 230, 624, 222, 0, 623, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 610,
	628, 0, 210, 0, 501, 613, 655, 454, 214, 236,
	237, 239, 0, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 0, 581, 604, 618, 630,
	636, 637, 639, 640, 641, 642, 643, 646, 644, 409,
	313, 497, 335, 375, 0, 0, 427, 474, 242, 608,
	498, 201, 0, 0, 0, 0, 256, 257, 0, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 651, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 0, 0, 0,
	0, 0, 400, 0, 593, 594, 674, 386, 488, 605,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	621, 622, 626, 207, 464, 465, 466, 467, 294, 616,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 0, 198, 223, 370, 0, 456, 290,
	652, 620, 486, 615, 208, 225, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 607, 627, 634,
	482, 303, 304, 446, 447, 316, 317, 648, 649, 302,
	602, 635, 599, 647, 629, 440, 380, 0, 0, 383,
	283, 307, 322, 0, 619, 504, 229, 468, 292, 253,
	0, 0, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 398, 0, 378, 578,
	579, 318, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 368, 269, 0, 0, 206, 507, 0, 432, 0,
	205, 0, 489, 254, 379, 376, 585, 284, 275, 271,
	252, 319, 387, 430, 520, 424, 0, 372, 0, 0,
	499, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	325, 250, 327, 204, 415, 500, 288, 0, 0, 0,
	0, 0, 509, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 247, 0, 0, 0,
	353, 362, 361, 341, 342, 344, 346, 352, 359, 365,
	338, 347, 0, 0, 611, 0, 0, 0, 267, 323,
	274, 266, 582, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 404, 259, 0, 455, 0, 0, 0, 631, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 332, 199,
	227, 0, 0, 414, 463, 475, 0, 0, 0, 255,
	0, 473, 428, 606, 235, 286, 460, 434, 471, 442,
	289, 0, 0, 472, 374, 587, 452, 603, 632, 633,
	265, 408, 617, 524, 625, 650, 228, 262, 422, 508,
	609, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	638, 226, 481, 373, 244, 233, 589, 614, 301, 291,
	458, 645, 215, 519, 600, 241, 485, 0, 0, 653,
	249, 506, 612, 601, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 654, 230, 624, 222, 0, 623, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 610, 628, 0, 210, 0, 501, 613, 655, 454,
	214, 236, 237, 239, 0, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 0, 581, 604,
	618, 630, 636, 637, 639, 640, 641, 642, 643, 646,
	644, 409, 313, 497, 335, 375, 0, 0, 427, 474,
	242, 608, 498, 201, 0, 0, 0, 0, 256, 257,
	0, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 651,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 0,
	0, 0, 0, 0, 400, 0, 593, 594, 674, 386,
	488, 605, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 621, 622, 626, 207, 464, 465, 466, 467,
	294, 616, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 0, 198, 223, 370, 0,
	456, 290, 652, 620, 486, 615, 208, 225, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 607,
	627, 634, 482, 303, 304, 446, 447, 316, 317, 648,
	649, 302, 602, 635, 599, 647, 629, 440, 380, 0,
	0, 383, 283, 307, 322, 0, 619, 504, 229, 468,
	292, 253, 0, 0, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 398, 0,
	378, 578, 579, 318, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 368, 269, 0, 0, 206, 507, 0,
	432, 0, 205, 0, 489, 254, 379, 376, 585, 284,
	275, 271, 252, 319, 387, 430, 520, 424, 0, 372,
	0, 0, 499, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 325, 250, 327, 204, 415, 500, 288, 0,
	0, 0, 0, 0, 509, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 247, 0,
	0, 0, 353, 362, 361, 341, 342, 344, 346, 352,
	359, 365, 338, 347, 0, 0, 611, 0, 0, 0,
	267, 323, 274, 266, 582, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 606, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 603,
	632, 633, 265, 408, 617, 524, 625, 650, 228, 262,
	422, 508, 609, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 638, 226, 481, 373, 244, 233, 589, 614,
	301, 291, 458, 645, 215, 519, 600, 241, 485, 0,
	0, 653, 249, 506, 612, 601, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 654, 230, 624, 222, 0, 623,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 610, 628, 0, 210, 0, 501, 613,
	655, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 604, 618, 630, 636, 637, 639, 640, 641, 642,
	643, 646, 644, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 608, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 651, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	674, 386, 488, 605, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 621, 622, 626, 207, 464, 465,
	466, 467, 294, 616, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 652, 620, 486, 615, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 607, 627, 634, 482, 303, 304, 446, 447, 316,
	317, 648, 649, 302, 602, 635, 599, 647, 629, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 619, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	0, 0, 378, 578, 579, 318,
}

var yyPact = [...]int{
	-1000, -1000, 4288, -1000, -544, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2502, 410, -1000, -1000, -1000, -1000, 2694, -1000, 1111,
	2130, -1000, 2472, 5049, -1000, 56404, 788, -1000, 53436, -423,
	941, 238, 37112, -1000, 205, -1000, 197, 54920, 209, -1000,
	-1000, -1000, -1000, -423, 23014, 2368, 73, 71, 56404, -1000,
	-1000, -1000, -1000, -369, 457, 2119, -1000, 450, -1000, -1000,
	-1000, -1000, -1000, -1000, 52694, -1000, 1179, -1000, -1000, 2488,
	2462, 2358, 986, 2394, -1000, 2546, 2119, -1000, 23014, 2624,
	2422, -1000, -1000, 22272, 22272, 476, -1000, -1000, 310, -1000,
	-1000, 31918, 56404, 40080, 855, -1000, 2472, -1000, -1000, -1000,
	213, -1000, 366, 2037, -1000, 2036, -1000, 1085, 875, 393,
	878, 867, 392, 391, 390, 389, 386, 385, 377, 367,
	408, -1000, 1019, 1019, -218, -219, 1461, 468, 460, 460,
	1046, 501, 2446, 2442, -1000, -1000, 1019, 1019, 1019, 395,
	1019, 1019, 1019, 1019, 335, 334, 1019, 1019, 1019, 1019,
	1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019,
	1019, 1019, 1019, 902, 2472, 264, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 56404, 294, 56404, -1000, 890,
	787, -1000, -1000, -457, 1144, 1144, 112, 1144, 1144, 1144,
	1144, 202, 962, 41, -1000, 196, 273, 189, 284, 1158,
	312, -1000, -1000, 260, 1158, 1840, -1000, 995, 282, 184,
	-1000, 1144, 1144, -1000, 15570, 257, 15570, 15570, 275, 194,
	-1000, 2431, -1000, -1000, -1000, -1000, -1000, 1443, -1000, -1000,
	-1000, -1000, -43, 500, -1000, -1000, -1000, -1000, 54920, 51952,
	263, -1000, -1000, 33, 1874, 1348, 23014, 1313, 984, -1000,
	-1000, 1334, 951, -1000, -1000, -1000, -1000, -1000, 814, -1000,
	25240, 25240, 25240, 25240, -1000, -1000, 1464, 51210, 1464, 1464,
	25240, 1464, 25240, 1464, 1464, 1464, 1464, 23014, 1464, 1464,
	1464, 1464, -1000, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, -1000, -1000, -1000, -1000, 1464, 885, 1464, 1464,
	1464, 1464, 1464, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1464, 1464, 1464, 1464, 1464, 1464, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, -1000,
	-1000, -1000, 1670, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28208, 1543, 1532, 1530, -1000, 20046, 1464, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56404, -1000,
	1464, 234, 54920, 54920, 397, 1422, -1000, -1000, 2546, 2119,
	-1000, 457, 427, 450, -1000, 3906, 403, 1719, 1592, 2119,
	2000, 56404, -1000, 2046, -1000, -1000, -1000, -354, -355, 2287,
	1516, 1838, -1000, -1000, -1000, -1000, 1784, 23014, -1000, -1000,
	2669, -1000, 29692, 877, 2668, 50468, -1000, 476, 476, 2029,
	663, 32, -1000, -1000, -1000, -1000, 1052, 36370, -1000, -1000,
	-1000, -1000, -1000, 1837, 56404, -1000, -1000, 5000, 54920, -1000,
	2128, -1000, 1833, -1000, 2082, 23014, 2150, 782, 54920, 516,
	511, 510, 473, -70, -1000, -1000, -1000, -1000, -1000, -1000,
	1019, 1019, 1019, -1000, 402, 2623, 5049, 7892, -1000, -1000,
	-1000, 49726, 2127, 54920, -1000, 2126, -1000, 1116, 879, 939,
	939, 54920, -1000, -1000, 55662, 54920, 1114, 1105, 54920, 54920,
	54920, 54920, -1000, 48984, -1000, 48242, 47500, 1401, 54920, 46758,
	46016, 45274, 44532, 43790, -1000, 2485, -1000, 2354, -1000, -1000,
	-1000, 55662, 54920, 54920, 55662, 54920, 55662, 56404, 54920, -1000,
	-1000, 374, -1000, -1000, 1400, 1397, 1394, 1019, 1019, 1392,
	1830, 1829, 1828, 1019, 1019, 1391, 1823, 38596, 1806, 300,
	1389, 1385, 1382, 1419, 1789, 193, 1772, 1393, 1345, 1381,
	54920, 2121, 56404, -1000, 268, 1047, 991, 1048, 2472, 2367,
	2023, 499, 742, 54920, 472, 472, 54920, -1000, 16318, 56404,
	272, -1000, 1767, 23014, -1000, 1162, 1158, 1158, -1000, -1000,
	-1000, -1000, -1000, -1000, 1144, 56404, 1162, -1000, -1000, -1000,
	1158, 1144, 56404, 1144, 1144, 1144, 1144, 1158, 1158, 1158,
	1144, 56404, 56404, 56404, 56404, 56404, 56404, 56404, 56404, 56404,
	15570, 995, 1144, -458, -1000, 1759, -1000, -1000, -1000, 2272,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	15570, 15570, -1000, -1000, 2540, 2534, -1000, -1000, -1000, 2020,
	-1000, 198, 48, 207, -1000, 43048, 496, 1045, -1000, 496,
	-1000, -1000, -1000, -1000, -1000, 2017, 42306, -1000, -459, -464,
	-465, -467, -1000, -1000, -1000, -469, -471, -1000, -1000, -1000,
	23014, 23014, 23014, 23014, -257, -1000, 1332, 25240, 2433, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23014, 259, 1269, 25240,
	25240, 25240, 25240, 25240, 25240, 25240, 26724, 25982, 25240, 25240,
	25240, 25240, 25240, 25240, -1000, -1000, 34144, 5402, 5402, 951,
	951, 951, 951, -1000, -190, 2014, 55662, -1000, -1000, -1000,
	876, 23014, 23014, 951, -1000, 1433, 1809, 20046, 23014, 23014,
	23014, 23014, 1051, 1348, 55662, 23014, -1000, 1592, -1000, -1000,
	-1000, -1000, 1196, -1000, -1000, 1125, 2417, 2417, 2417, 2417,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	2417, 23014, 226, 226, 923, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 18562, 23014, 23014, 25240, 23014, 23014, 23014,
	1592, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	1592, 23014, 1467, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	17814, 23014, 23014, 23014, 23014, 23014, -1000, -1000, -1000, -1000,
	-1000, -1000, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	1592, 23014, 23014, 23014, 23014, 23014, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 442, 1736, 1591,
	23014, -1000, 2008, -1000, -199, 32660, 364, 947, 23014, 1757,
	2667, 2176, 54920, -1000, -1000, -1000, -1000, 2546, -1000, 2546,
	442, 3673, 2310, 22272, -1000, -1000, 3673, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1821, -1000, 56404, 2000, 2527, 54920, -1000, -296, -1000, -299,
	2304, 1748, 936, -1000, 23014, 23014, 1996, -1000, 1373, 56404,
	-1000, -257, -1000, 41564, -1000, -1000, 14822, 56404, 357, 56404,
	-1000, 31176, 40822, 322, -1000, 32, 1977, -1000, 15, 26,
	19304, 946, -1000, -1000, -1000, 1461, 27466, 1872, 946, 122,
	-1000, -1000, -1000, 2082, -1000, 2082, 2082, 2082, 2082, 936,
	936, 936, 936, -1000, -1000, -1000, -1000, -1000, 2120, 2082,
	2117, -1000, 2082, 2082, 2082, 2082, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2112, 2112, 2112, 2111, 2111, 2083, 2083,
	448, -1000, 23014, 432, 40080, 2493, 1365, 1497, 268, 473,
	2175, 54920, 54920, 54920, 56404, 1066, -1000, 1480, 1469, 1466,
	-1000, -529, 1994, -1000, -1000, 2620, -1000, -1000, 1096, 1134,
	1132, 1073, 54920, 243, 341, -1000, 449, -1000, 40080, 54920,
	1102, 939, 54920, -1000, 54920, -1000, -1000, -1000, -1000, -1000,
	54920, -1000, -1000, 1993, -1000, 2004, 1190, 1130, 1183, 1090,
	1993, -1000, -1000, -195, 1993, -1000, 1993, -1000, 1993, -1000,
	1993, -1000, 1993, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1056, 276, -348, 54920, 243, 492, -1000, 479,
	34144, -1000, -1000, -1000, 34144, 34144, -1000, -1000, -1000, -1000,
	1746, 1723, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -519, 56404, -1000, 252, 1031, 339, 382, 325, 56404,
	780, 2437, 2436, 2430, 2428, 2426, 2421, 2413, 281, 313,
	56404, 56404, 472, 2242, 56404, 2503, 56404, -1000, -1000, -1000,
	-1000, -1000, 1712, 1707, -1000, 1348, 56404, -1000, -1000, 1144,
	1144, -1000, -1000, 56404, 1144, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1144, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56404,
	-1000, -1000, -1000, -1000, 1675, -1000, 56404, -43, 191, -1000,
	-1000, 54920, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -118, -1000, 370, 11, 379, -1000, -1000, -1000, -1000,
	-1000, 2533, -1000, 1348, 1070, 1078, -1000, 1464, -1000, -1000,
	1343, -1000, -1000, -1000, -1000, -1000, 1464, 1464, 1464, -1000,
	-1000, -1000, -1000, -1000, 259, 25240, 25240, 25240, 1477, 842,
	1596, 1232, 1251, 1017, 1017, 1238, 25240, 1238, 25240, 965,
	965, 965, 965, 965, -1000, -1000, -1000, -1000, -1000, -1000,
	1670, -1000, 1665, -1000, 1464, 55662, 1816, 17814, 1567, 1489,
	1592, 977, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3539, 1592, 1874, 1592, 1820, 3512, 1072, -1000,
	23014, 1592, 3502, -1000, -1000, 1592, 1592, 23014, -1000, -1000,
	23014, 23014, 23014, 23014, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 1497, 23014, 1497, 1990, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1984, 2666, 1302, 1497, 1497,
	1497, 1497, 3497, 1497, 1497, 23014, 1703, -1000, -1000, -1000,
	1510, 3489, 1437, 3481, 1497, 1497, -1000, 1497, 3477, 3473,
	1592, 2696, 2686, 1497, 1497, 1497, 1497, 1497, 2633, 2625,
	1497, 1497, 2621, 1497, 3465, 1497, 2606, 2581, 2572, 2553,
	2542, 2537, 2526, 2511, 2507, 2489, 2465, 2461, 2457, 2445,
	2440, 2425, 2362, 2356, 1497, 1497, 1497, 3456, 1497, 3439,
	1497, 3425, 1497, 1497, 3400, 2344, 2334, 1592, 1983, -1000,
	3390, 1497, 3385, 3376, 3361, 2330, 3351, 3296, 3281, 1497,
	1497, 1497, 2326, 3267, 3253, 3105, 3097, 3091, 3086, 3069,
	3059, 3050, 1497, 1591, 1591, 1591, 1591, 1591, 3036, -262,
	1497, 1592, -1000, -1000, -1000, -1000, -1000, 3019, 2317, 3015,
	2968, 2963, 2940, 1592, 1464, 872, -1000, -1000, 1591, 1592,
	1592, 1591, 1591, 2902, 2890, 2879, 2871, 2834, 2824, 1497,
	1497, -1000, 1497, 2802, 2794, 2283, 2255, 1592, -1000, 1591,
	56404, -1000, -453, -1000, -16, 964, -1000, 38596, 1464, 16318,
	23014, 1592, -1000, 5197, -1000, 1434, -1000, -1000, -1000, -1000,
	-1000, 35628, 2021, -1000, -1000, -1000, -1000, 1464, 1814, -1000,
	-1000, -1000, -1000, 936, 92, 34886, 938, 938, 132, 1348,
	1348, 23014, -1000, -1000, -1000, -1000, -1000, -1000, 870, 2651,
	469, 1464, -1000, 2015, 3081, -1000, -1000, -1000, 2524, 28950,
	-1000, -1000, 1464, 1464, 56404, 2009, 1947, -1000, 859, -1000,
	1445, 1977, 32, 37, -1000, -1000, -1000, -1000, 1348, -1000,
	1462, 354, 333, -1000, 459, -1000, -1000, -1000, -1000, 2389,
	103, -1000, -1000, -1000, 338, 936, -1000, -1000, -1000, -1000,
	-1000, -1000, 1629, -1000, 1629, -1000, -1000, -1000, -1000, -1000,
	1361, -1000, -1000, -1000, -1000, 1356, -1000, -1000, 1349, -1000,
	-1000, 2716, 2137, 432, -1000, -1000, 1019, 1615, -1000, -1000,
	2392, 1019, 1019, 54920, -1000, -1000, 1855, 2493, 252, 56404,
	2237, -1000, 2175, 2175, 2175, -1000, 2501, -1000, -1000, -1000,
	-1000, -1000, -1000, -520, 167, 593, -1000, -1000, -1000, 6631,
	54920, 1804, -1000, 237, -1000, 1854, -1000, 54920, -1000, 1796,
	2102, 54920, 54920, -1000, -1000, -1000, 54920, 1464, -1000, -1000,
	-1000, -1000, 524, 2459, 295, -1000, -1000, -284, -1000, -1000,
	243, 237, 55662, 54920, 946, -1000, -1000, -1000, -1000, -1000,
	-522, 1778, 506, 246, 513, 56404, 56404, 56404, 56404, 56404,
	56404, 880, -1000, -1000, 46, -1000, -1000, 212, -1000, -1000,
	-1000, -1000, -1000, -1000, 212, -1000, -1000, -1000, -1000, -1000,
	314, 478, -1000, 56404, 56404, 920, -1000, -1000, -1000, -1000,
	-1000, 1158, -1000, -1000, 1158, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2467, 56404, 3,
	-487, -1000, -484, 23014, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1369, 834, 1596, 25240, 25240, 1809, 1809, 25240, -1000,
	-1000, -1000, 821, 821, 34144, -1000, 25240, 23014, -1000, -1000,
	23014, 23014, 23014, 1058, -1000, 23014, 1215, -1000, 23014, -1000,
	-262, 1591, 1497, 1497, 1497, 1497, -262, -262, -262, -262,
	-262, -262, -262, -262, -262, -262, 1988, -1000, 23014, 23014,
	23014, 1592, 311, -1000, -1000, -1000, -262, 23014, -1000, -1000,
	2662, -1000, 23014, -1000, 34144, 23014, 23014, 23014, -1000, -1000,
	-1000, 23014, 23014, -1000, -1000, 23014, -1000, 23014, -1000, -1000,
	-1000, -1000, -1000, -1000, 23014, -1000, 23014, -1000, -1000, -1000,
	23014, -1000, 23014, -1000, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, -1000, -1000, 23014, -1000, 23014, -1000, 23014, -1000, -1000,
	23014, -1000, 23014, -1000, 23014, -1000, 23014, 23014, -1000, 23014,
	23014, 23014, -1000, 23014, 23014, 23014, 23014, -1000, -1000, -1000,
	-1000, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014, 23014,
	23014, -1000, -1000, -1000, -1000, -1000, -1000, 23014, -1000, 40080,
	5, -262, 1467, 5, 1467, 24498, 892, 888, 23756, -1000,
	23014, 17066, -1000, -1000, -1000, -1000, -1000, 23014, 23014, 23014,
	23014, 23014, 23014, -1000, -1000, -1000, 23014, 23014, -1000, 23014,
	-1000, 23014, -1000, -1000, -1000, -1000, -1000, 964, -1000, 887,
	467, 939, -1000, 54920, -1000, 1771, -1000, -1000, -1000, 1970,
	-1000, 2573, -1000, 2320, 2318, 2658, 2651, 22272, -1000, 31176,
	-1000, -1000, 54920, -437, -1000, 2355, 2347, 938, 938, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14074, 2546, 23014, 2232,
	55662, 261, -1000, 30434, 54920, 55662, 31176, 31176, 31176, 31176,
	31176, -1000, 2271, 2257, -1000, 2286, 2265, 2261, 56404, -1000,
	442, 1766, -1000, 23014, 2651, 1946, 31176, -1000, -1000, 31176,
	56404, 13326, -1000, -1000, -2, 2, -1000, -1000, -1000, -1000,
	1461, -1000, -1000, 1081, 2522, 2365, -1000, -1000, -1000, -1000,
	-1000, 1754, -1000, 1745, 1958, 1739, 1735, 276, -1000, 2148,
	2460, 1019, 1019, -1000, 1347, -1000, 1433, 1610, 1598, -1000,
	-1000, -1000, 505, -1000, 56404, 2228, 2225, 2224, -1000, -536,
	1296, 2101, 2103, 23014, 2086, 2617, 1921, 54920, -1000, -1000,
	55662, -1000, 256, -1000, 432, 54920, -1000, -1000, -1000, 341,
	56404, -1000, 9269, -1000, -1000, -1000, 237, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56404, 267, -1000, 2085, 1440, -1000,
	-1000, 2160, -1000, -1000, -1000, -1000, -1000, 218, 211, 1570,
	223, 1568, 223, -1000, 56404, 918, 2137, 56404, -1000, -1000,
	-1000, 1144, 1144, -1000, -1000, 2455, -1000, 1433, 1497, 25240,
	25240, -1000, 951, -1000, -1000, 441, -239, 2082, 2082, -1000,
	2082, 2083, -1000, 2082, 176, 2082, 159, 2082, -1000, -1000,
	1592, 1592, -1000, 1591, 2238, 1601, 2782, -1000, 1348, 23014,
	2766, -1000, -1000, -262, -262, -262, -262, -262, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -77, 2720,
	2711, 1497, -1000, 2081, 2077, -1000, 1497, 23014, 1497, 1592,
	2234, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 2229, 2215, 2200, 2168, 2163, 2151, 2146,
	2139, 2098, 2078, 2073, 2049, 2006, 1997, 1981, 1974, 1497,
	1497, 1965, 1497, 1959, 1882, -1000, 1348, 1591, 2656, 1591,
	1497, 1497, 2498, 302, 1497, 1732, 1732, 1732, 1732, 1732,
	1591, 1591, 1591, 1591, 1497, 54920, -1000, -262, -1000, -1000,
	-331, -350, -1000, 1592, -262, 1944, 25240, 1497, 25240, 25240,
	25240, 1497, 1592, -1000, 1875, 1870, 2412, 1851, 1497, 2064,
	1497, 1497, 1497, 1846, -1000, 2513, 1464, 2513, 1464, 2513,
	1711, -1000, 1434, 56404, -1000, -1000, -1000, -1000, 2651, 2645,
	-1000, 1928, -1000, 92, 615, -1000, 2363, 2347, -1000, 2614,
	2343, 2612, -1000, -1000, -1000, -1000, -1000, 1348, -1000, 2480,
	1964, -1000, 1029, 1848, -1000, -1000, 21530, 1730, 2314, 857,
	1711, 1967, 3081, 2159, 2223, 3006, -1000, -1000, -1000, -1000,
	2253, -1000, 2174, -1000, -1000, 2046, -1000, 2055, -1000, 31176,
	1955, 1955, -1000, 839, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1161, 9269, 2680, -1000, 1553, -1000, 1432, 204, 1295,
	-1000, -1000, 1019, 1019, -1000, 1097, 1089, -1000, 56404, 2070,
	-1000, 936, 1545, 936, 1268, -1000, -1000, 1261, -1000, -1000,
	-1000, -1000, 2031, 2254, -1000, -1000, -1000, -1000, 56404, -1000,
	56404, 56404, 56404, 2068, 2603, -1000, 23014, 2053, 1023, 2002,
	54920, 54920, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 462, 1019, -500, 301, 292, 1019, 1019,
	1019, -538, -1000, -1000, 1699, 1689, -1000, -220, -1000, 23014,
	-1000, -1000, -1000, -1000, -1000, 1256, 1256, 1543, 1532, 1530,
	-1000, 2046, -1000, -1000, -1000, 1853, -1000, -1000, -202, 54920,
	54920, 54920, 54920, -1000, -1000, -1000, 1301, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 951,
	1592, 346, -208, 1592, -1000, -1000, 936, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23014, -1000, 23014,
	-1000, 23014, 1348, 23014, -1000, -1000, -1000, -1000, -1000, 2546,
	1528, 23014, 23014, -1000, 1250, 1231, -262, 1497, -1000, -1000,
	-1000, 23014, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014, -1000, 23014,
	-1000, 23014, -1000, 23014, -1000, 23014, -1000, -1000, 23014, -1000,
	-1000, -1000, 23014, -1000, 23014, -1000, 23014, -1000, -1000, -1000,
	23014, 289, 821, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1592, 347, -1000, -1000, -1000, 2657,
	-1000, 1592, 23014, 1809, -1000, 1809, 1809, 1809, -1000, -1000,
	-1000, 23014, -1000, 23014, 23014, -1000, 23014, -1000, 23014, -1000,
	-1000, -1000, -1000, 23014, 1464, 2328, 39338, 1464, 39338, 1464,
	32660, -1000, -1000, 2645, 2640, 2596, 2327, 2337, 2337, 2363,
	-1000, 2588, 2583, -1000, 1513, 2582, 1505, 1086, -1000, 55662,
	23014, -1000, 261, 38596, -1000, 414, 54920, 261, 54920, -1000,
	2630, -1000, -1000, 23014, 2052, -1000, 23014, -1000, -1000, -1000,
	-1000, 5402, 1955, -1000, -1000, 974, -1000, 23014, -1000, 11086,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1500, 1494,
	-1000, -1000, 2048, 23014, -1000, -1000, -1000, 1817, 1797, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2046, -1000, -1000,
	-1000, -1000, 341, -531, 1932, 54920, 1226, -1000, 1674, 1921,
	316, 261, 1492, 1019, 1019, 1019, 1202, 1199, 38596, 1656,
	-1000, 54920, 416, -1000, 341, -1000, -231, -232, 1497, -1000,
	-1000, 2521, -1000, -1000, 17066, -1000, -1000, 2045, 2164, -1000,
	-1000, -1000, -1000, 2296, -193, -210, -1000, -1000, 1497, 1497,
	1497, 1801, 1592, -1000, 1497, 1497, 1740, 1717, -1000, -1000,
	1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497, 1497,
	1591, 1827, -1000, 289, 1592, 2220, -1000, -1000, 5402, -1000,
	-1000, 2630, 2579, 5, -1000, -1000, 240, 5, 1348, 1062,
	1592, 1592, 1062, 1764, 1497, 1716, 1692, 1497, 1497, 33402,
	-1000, 2569, 2567, 1635, -1000, -1000, 39338, 1635, 39338, 964,
	2640, -269, 23014, 23014, 2332, 1233, -1000, -1000, -1000, -1000,
	1484, 1481, -1000, 1475, -1000, 2678, -1000, 1348, -1000, 1464,
	261, -1000, 832, 1848, -1000, 2546, 1348, 54920, 1348, 93,
	-1000, 1497, -1000, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, -1000, -1000, 54920, 1919, -1000, -1000,
	2520, 1643, 163, -1000, 1644, 1921, -1000, -1000, 249, -1000,
	23014, -1000, 38596, 1463, 1448, -1000, -1000, -1000, -1000, -538,
	-1000, -1000, -1000, -1000, -1000, -1000, 450, 1907, -1000, 1009,
	54920, 56404, -1000, 2290, -1000, -1000, -1000, -1000, 23014, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23014, -1000, 1592, 2218,
	-1000, -375, -1000, -501, 23014, -262, -1000, -1000, -262, -1000,
	-1000, -1000, -1000, -1000, 23014, -1000, -1000, 23014, -1000, 23014,
	-1000, -1000, 1635, -1000, -1000, -1000, 37854, -1000, 1635, -1000,
	1635, -1000, -269, -1000, 1902, -1000, 54920, 1348, 345, -1000,
	1225, -1000, -1000, -1000, -1000, -1000, 55662, 54920, 1848, 54920,
	-1000, -1000, 1620, 1592, 1464, -1000, 1608, -1000, 450, -1000,
	2043, 2103, -1000, -1000, -1000, 20788, -1000, -1000, -1000, -1000,
	-1000, 245, -197, 17066, 12578, 1606, -1000, -196, 1497, 1591,
	-1000, -477, -1000, -1000, -1000, -1000, 291, -1000, -1000, 1874,
	-1000, -1000, 1669, 1664, 1646, -1000, -1000, -1000, -1000, -1000,
	-1000, -269, -1000, -1000, 2505, -1000, -236, -1000, -1000, 1849,
	1541, -1000, -1000, -1000, 32660, 54178, -186, 344, -197, 23014,
	2040, 1592, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-14, -1000, -1000, 831, -1000, -1000, -1000, 2160, -217, -1000,
	-1000, -1000, 286, -490, -289, -339, 25240, -1000, 23014, -1000,
	23014, -1000, 23014, -1000, 54920, 1464, -1000, -1000, -1000, 1538,
	-1000, 4097, -359, 2208, -1000, -113, -1000, -1000, -1000, 1153,
	1350, -1000, -1000, -1000, -1000, -1000, -1000, 1637, 54920, -1000,
	436, -1000, -1000, 16318, -202, -213, 1074, -1000, -1000, -1000,
	-1000, -1000, 1809, 1573, 1446, 1497, -1000, 54920, -1000, 54178,
	-337, 946, 5402, -1000, 2206, 2181, 2655, -1000, -1000, -1000,
	-1000, -1000, -1000, -541, 1512, 255, -1000, -1000, -1000, 286,
	-340, -1000, 23014, -1000, 23014, -1000, 1592, -1000, -1000, 2496,
	93, -1000, 2675, -1000, 2671, 996, 996, -1000, 1189, -541,
	-1000, -1000, -1000, -1000, 1497, 1497, -1000, -370, -1000, -1000,
	-1000, -1000, -1000, 430, 1242, -1000, -1000, -1000, -1000, -1000,
	5402, -1000, -1000, -1000, 287, 287, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3383, 3382, 50, 5, 39, 38, 3381, 3377, 3373,
	177, 3357, 3344, 3282, 3274, 3268, 3258, 2756, 2714, 2702,
	3256, 3255, 3252, 3249, 3246, 3229, 3228, 3227, 3224, 31,
	108, 75, 102, 202, 205, 3220, 173, 170, 198, 3218,
	3214, 3210, 119, 195, 90, 92, 194, 3208, 3205, 74,
	3203, 3201, 3200, 191, 189, 187, 1132, 3198, 184, 113,
	49, 3196, 3191, 3189, 3187, 3185, 3184, 3180, 3179, 3178,
	3174, 3170, 3168, 3167, 3165, 3162, 3155, 3154, 3153, 291,
	3146, 3145, 16, 3144, 77, 3143, 3142, 3140, 3138, 3136,
	6, 3135, 3130, 10, 44, 64, 3129, 3127, 45, 3126,
	3123, 3118, 3115, 3108, 76, 3107, 11, 3106, 40, 3104,
	3103, 126, 3102, 3100, 3099, 41, 3098, 3091, 3081, 9,
	174, 3079, 3076, 141, 3075, 3074, 3072, 179, 3071, 2361,
	201, 3069, 97, 3068, 3067, 3062, 169, 197, 3061, 121,
	3057, 3048, 3045, 151, 3043, 3327, 3042, 3041, 61, 69,
	172, 3039, 3034, 199, 67, 12, 3031, 21, 22, 3030,
	3029, 63, 71, 3026, 110, 3022, 3021, 98, 65, 3020,
	103, 100, 3001, 3000, 27, 8, 2996, 1, 4, 2,
	84, 2994, 2989, 117, 2977, 2973, 2971, 96, 2970, 2969,
	4586, 2966, 93, 129, 132, 104, 79, 2965, 171, 130,
	2964, 2961, 2960, 2957, 2954, 2953, 52, 2952, 2947, 2943,
	138, 26, 115, 2942, 146, 342, 55, 149, 2940, 204,
	80, 203, 175, 2937, 2934, 136, 134, 2932, 2928, 58,
	168, 53, 2926, 46, 133, 120, 140, 94, 143, 2925,
	2924, 56, 70, 2919, 2913, 2912, 2905, 188, 2901, 2900,
	60, 2898, 57, 2896, 181, 2893, 327, 82, 2890, 178,
	165, 2889, 72, 2888, 2887, 2885, 99, 112, 35, 2882,
	164, 167, 127, 162, 2881, 2878, 54, 2871, 2862, 2861,
	200, 313, 2860, 2859, 333, 180, 144, 153, 95, 2857,
	348, 2856, 2855, 2854, 17, 5184, 7243, 192, 32, 166,
	2851, 2849, 8486, 20, 42, 28, 2848, 210, 2847, 185,
	2846, 2844, 2841, 214, 207, 114, 160, 59, 2839, 2833,
	2832, 2831, 68, 2830, 2827, 2826, 2824, 2823, 2815, 37,
	36, 33, 73, 216, 62, 7, 109, 159, 154, 66,
	2811, 2809, 2807, 123, 89, 2805, 158, 155, 125, 156,
	2804, 183, 145, 116, 2803, 87, 30, 2802, 2801, 2800,
	2799, 91, 2797, 2795, 2792, 2791, 157, 147, 122, 83,
	2788, 85, 118, 152, 148, 51, 2785, 47, 2780, 2776,
	25, 193, 29, 2774, 43, 105, 111, 2773, 6364, 2772,
	14, 331, 150, 2771, 2768, 13, 15, 18, 2766, 2765,
	2764, 2758, 135, 2757, 2752, 2751, 2739, 24, 48, 23,
	19, 106, 139, 81, 2734, 2732, 142, 2727, 2725, 2708,
	0, 1035, 128, 2675, 206,
}

//line sql.y:8790
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 418, 419, 419, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 262, 388, 260, 260, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 422, 422, 185, 185, 183, 183, 184, 184,
	265, 265, 20, 269, 269, 271, 271, 271, 271, 261,
	261, 261, 21, 21, 270, 270, 272, 272, 272, 275,
	275, 275, 275, 316, 316, 316, 22, 22, 22, 22,
	22, 128, 128, 390, 390, 389, 384, 384, 383, 383,
	382, 387, 387, 386, 386, 385, 40, 41, 50, 50,
	50, 50, 51, 52, 391, 391, 357, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 359, 359, 345, 345, 358, 358, 358,
	358, 358, 358, 358, 344, 344, 140, 140, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 406, 406, 406, 405, 405,
	240, 240, 240, 240, 240, 240, 240, 240, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 407, 407, 407, 407, 322, 322, 322,
	322, 325, 325, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 326,
	326, 326, 326, 326, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 328, 328, 328, 328, 328, 328, 328, 328, 343,
	343, 332, 332, 337, 337, 338, 338, 339, 339, 339,
	340, 340, 340, 341, 341, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 336, 336, 335, 335, 335, 346,
	371, 371, 370, 370, 368, 368, 368, 368, 368, 368,
	368, 368, 355, 355, 365, 365, 365, 365, 365, 354,
	354, 350, 350, 350, 351, 351, 352, 352, 349, 349,
	353, 353, 367, 367, 366, 366, 347, 347, 348, 348,
	373, 408, 408, 408, 408, 408, 409, 409, 374, 398,
	400, 400, 400, 399, 399, 396, 397, 395, 395, 395,
	395, 395, 84, 84, 84, 288, 288, 289, 289, 363,
	363, 362, 362, 362, 364, 364, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 283, 283, 283,
	394, 394, 394, 394, 394, 394, 393, 393, 393, 360,
	360, 360, 360, 392, 392, 59, 59, 220, 220, 411,
	411, 413, 413, 413, 47, 47, 47, 47, 47, 47,
	46, 46, 46, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 48, 48, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 111,
	111, 112, 112, 112, 112, 114, 114, 114, 376, 376,
	60, 60, 3, 3, 173, 175, 176, 176, 174, 174,
	174, 174, 174, 174, 62, 62, 61, 61, 178, 177,
	179, 179, 179, 1, 1, 2, 2, 4, 4, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 342, 342, 342, 375, 375, 377, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 117, 116, 116,
	115, 118, 118, 118, 118, 118, 118, 118, 118, 379,
	379, 379, 63, 63, 380, 329, 330, 331, 5, 6,
	356, 378, 125, 125, 24, 39, 39, 25, 25, 25,
	25, 26, 26, 64, 67, 67, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 293, 293, 282, 282, 291, 291, 281, 281,
	307, 307, 307, 284, 284, 284, 285, 285, 404, 404,
	404, 278, 278, 66, 66, 66, 308, 308, 308, 308,
	69, 69, 414, 414, 415, 415, 416, 416, 416, 70,
	71, 71, 311, 311, 312, 312, 72, 73, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 86, 86, 110,
	110, 110, 10, 10, 10, 10, 81, 81, 81, 9,
	9, 11, 68, 68, 75, 401, 401, 402, 403, 403,
	403, 403, 76, 78, 27, 27, 27, 27, 27, 27,
	135, 135, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 129, 129, 129, 124, 124, 423,
	79, 80, 80, 130, 130, 130, 130, 130, 121, 121,
	121, 127, 127, 127, 12, 12, 13, 264, 264, 14,
	14, 134, 134, 133, 133, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 131, 131, 132, 132,
	132, 132, 300, 300, 300, 299, 299, 167, 167, 169,
	168, 168, 170, 170, 171, 171, 171, 171, 218, 218,
	194, 194, 257, 257, 258, 258, 256, 256, 263, 263,
	259, 259, 259, 259, 266, 266, 172, 172, 172, 172,
	180, 180, 181, 181, 182, 182, 310, 310, 305, 305,
	305, 304, 304, 186, 186, 186, 188, 187, 187, 187,
	187, 189, 189, 191, 191, 193, 193, 193, 190, 190,
	192, 198, 198, 197, 197, 195, 195, 195, 195, 195,
	195, 196, 196, 196, 196, 199, 199, 145, 145, 145,
	145, 145, 145, 145, 145, 412, 412, 159, 159, 159,
	159, 159, 159, 159, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 247, 247, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 223, 223, 222,
	222, 87, 87, 87, 88, 88, 89, 89, 89, 89,
	89, 90, 90, 90, 90, 90, 90, 90, 92, 92,
	91, 91, 213, 213, 297, 297, 93, 94, 94, 95,
	95, 98, 98, 97, 96, 96, 102, 102, 99, 99,
	101, 101, 100, 103, 103, 104, 105, 105, 279, 279,
	200, 200, 209, 209, 209, 209, 201, 201, 202, 202,
	202, 202, 202, 202, 210, 210, 210, 217, 211, 211,
	207, 207, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 164, 164, 164, 164,
	228, 228, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 152, 152, 165,
	165, 165, 165, 166, 166, 166, 166, 166, 166, 166,
	318, 318, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	424, 424, 333, 333, 333, 208, 208, 208, 208, 208,
	126, 126, 126, 126, 126, 315, 315, 315, 319, 319,
	319, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 320, 320, 226, 226,
	122, 122, 224, 224, 225, 227, 227, 219, 219, 219,
	219, 221, 221, 204, 204, 204, 229, 229, 321, 321,
	230, 230, 106, 107, 107, 108, 108, 231, 231, 233,
	232, 232, 234, 235, 235, 235, 236, 236, 237, 237,
	237, 49, 49, 49, 49, 49, 44, 44, 44, 44,
	45, 45, 45, 45, 137, 137, 137, 137, 139, 139,
	138, 138, 82, 82, 83, 83, 83, 143, 143, 144,
	144, 144, 141, 141, 142, 142, 254, 254, 254, 254,
	254, 254, 254, 238, 238, 238, 245, 245, 245, 241,
	241, 243, 243, 243, 244, 244, 244, 242, 251, 251,
	253, 253, 252, 252, 248, 248, 249, 249, 250, 250,
	250, 246, 246, 203, 203, 203, 203, 203, 255, 255,
	255, 255, 309, 309, 309, 267, 267, 214, 214, 216,
	216, 215, 215, 163, 268, 268, 276, 273, 273, 274,
	274, 301, 301, 301, 277, 277, 290, 290, 286, 286,
	287, 287, 280, 280, 292, 292, 292, 77, 212, 212,
	372, 372, 369, 296, 296, 298, 298, 302, 302, 306,
	306, 303, 303, 8, 417, 417, 417, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 420, 421, 313,
	314, 314, 314,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 7, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 5, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 2,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	6, 10, 7, 5, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 3,
	3, 0, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 4, 5, 5, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 2, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 5,
	3, 5, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 1, 1, 2, 1, 3, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 3, 2, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 4,
	4, 4, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 1, 1, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 1, 1, 2,
	3, 7, 0, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 4, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 5,
	5, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 6, 1, 1, 3, 4, 3,
	4, 4, 4, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 5, 5, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 5, 6, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 4, 2, 4, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 1,
	0, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 2, 2,
	5, 6, 6, 6, 6, 6, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 8, 4, 8, 8,
	6, 5, 4, 4, 4, 5, 7, 4, 4, 7,
	4, 4, 6, 6, 6, 8, 6, 6, 4, 4,
	3, 4, 6, 6, 4, 4, 6, 4, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 4, 4,
	4, 6, 4, 6, 4, 4, 6, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 4, 4,
	6, 4, 6, 4, 8, 6, 4, 4, 6, 4,
	6, 8, 4, 6, 8, 4, 4, 6, 8, 6,
	4, 6, 6, 8, 10, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 5, 9, 6, 9, 8, 6, 8, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	5, 1, 1, 1, 2, 2, 0, 4, 0, 2,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 3, 4, 2,
	3, 4, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -418, -79, -423, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 14, 15, -109, -35, 36, -40,
	-50, 241, -51, -41, 242, -52, 244, 243, 281, 245,
	397, 274, 84, 330, 331, 333, 334, 335, 336, -110,
	704, 279, 280, 247, 40, 52, 37, 38, 41, 251,
	287, 288, 250, 146, -33, -36, 13, -420, 16, 487,
	276, 275, 32, -34, 597, 96, -80, -419, 752, -254,
	-238, 27, 37, 33, -237, -233, -130, -238, 25, 23,
	11, 610, 12, -79, -79, -79, 17, 18, -79, -357,
	-359, 96, 174, 96, -79, -57, -56, -54, -53, -55,
	-58, 35, -47, -48, -381, -46, -43, 246, 243, 291,
	136, 137, 281, 282, 283, 245, 265, 280, 284, 279,
	300, -42, 91, 37, 597, 600, -364, 242, 248, 249,
	244, 488, 139, 138, 85, -361, 392, 631, 722, -58,
	724, 111, 114, 723, 51, 255, 725, 726, 727, 638,
	728, 264, 729, 730, 731, 732, 738, 679, 739, 740,
	741, 140, 11, -79, -306, -302, 101, -295, 594, 267,
	629, 441, 630, 316, 91, 48, 43, 533, 604, 388,
	392, 631, 518, 722, 398, 330, 348, 342, 523, 524,
	525, 371, 363, 595, 632, 605, 319, 268, 304, 716,
	361, 150, 724, 323, 633, 282, 399, 400, 634, 401,
	111, 333, 438, 737, 322, 635, 735, 114, 723, 338,
	89, 517, 58, 719, 51, 277, 446, 447, 359, 250,
	355, 725, 305, 636, 607, 298, 139, 136, 744, 40,
	351, 57, 34, 734, 138, 56, 726, 165, 637, 727,
	638, 403, 378, 710, 55, 404, 283, 639, 94, 288,
	599, 327, 718, 405, 538, 352, 406, 315, 733, 247,
	640, 326, 699, 691, 692, 407, 408, 711, 383, 379,
	384, 540, 641, 430, 522, 409, 695, 696, 751, 59,
	642, 643, 712, 137, 644, 88, 728, 90, 346, 347,
	645, 313, 266, 543, 544, 432, 375, 500, 128, 507,
	508, 121, 122, 503, 123, 509, 124, 129, 510, 511,
	512, 501, 125, 118, 502, 513, 514, 376, 377, 126,
	515, 120, 119, 504, 506, 127, 516, 264, 39, 410,
	596, 317, 65, 321, 292, 433, 53, 381, 748, 52,
	706, 545, 646, 709, 374, 370, 497, 60, 647, 648,
	649, 650, 519, 729, 373, 345, 369, 743, 4, 310,
	492, 520, 730, 69, 249, 386, 385, 387, 299, 429,
	366, 651, 652, 653, 271, 92, 654, 356, 26, 655,
	656, 411, 306, 657, 63, 658, 659, 436, 280, 660,
	61, 731, 46, 661, 285, 745, 732, 662, 663, 664,
	705, 665, 287, 666, 413, 667, 693, 694, 412, 380,
	382, 546, 294, 414, 397, 252, 598, 668, 328, 350,
	284, 736, 669, 272, 534, 535, 536, 537, 717, 542,
	541, 286, 291, 279, 437, 273, 670, 671, 672, 673,
	674, 320, 690, 675, 676, 334, 602, 738, 498, 50,
	677, 678, 679, 680, 681, 314, 309, 431, 440, 68,
	93, 394, 682, 683, 715, 344, 339, 44, 307, 100,
	478, 480, 481, 482, 483, 484, 479, 486, 684, 331,
	62, 739, 740, 741, 301, 742, 526, 527, 528, 529,
	14, 580, 563, 591, 564, 581, 565, 574, 566, 582,
	590, 592, 547, 555, 548, 556, 586, 569, 583, 575,
	568, 567, 589, 572, 576, 549, 557, 587, 573, 550,
	558, 551, 559, 552, 560, 585, 584, 577, 588, 553,
	561, 579, 554, 562, 578, 570, 571, 449, 749, 750,
	521, 416, 140, 311, 312, 54, 367, 293, 685, 324,
	686, 357, 358, 494, 495, 372, 343, 368, 147, 702,
	332, 341, 700, 295, 417, 499, 281, 687, 439, 308,
	389, 132, 340, 395, 325, 603, 539, 300, 418, 714,
	601, 530, 531, 365, 362, 302, 532, 688, 390, 704,
	419, 256, 296, 297, 689, 701, 420, 421, 318, 422,
	423, 424, 425, 426, 428, 329, 427, 703, 697, 698,
	303, 477, 600, 337, 360, 396, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 496, 254, -79, 254, -190, -302,
	-129, 706, 708, 193, -273, 400, -291, 402, 415, 410,
	420, 408, -282, 411, 413, 294, -404, 430, 254, 417,
	241, 403, 412, 421, 422, 318, 428, 423, 329, 427,
	303, 424, 425, 426, -388, 193, 727, 742, 332, 340,
	150, 364, 407, 405, 431, 706, 101, -308, 101, 102,
	103, -295, 332, -311, 337, -296, -388, -295, 335, -79,
	-79, -313, -313, -129, -211, -145, 158, -159, -262, -162,
	102, -150, -153, -205, -206, -207, -208, -160, -221, -260,
	182, 183, 190, 159, -217, -163, 30, 593, 489, 488,
	193, 35, 236, 78, 79, 491, 492, 161, 64, 16,
	454, 455, -161, 444, 445, 456, 450, 451, 517, 519,
	520, 521, 518, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 522, 533, 494, 495, 130, 496, 118,
	120, 119, 128, 129, 497, 498, 499, 361, 545, 546,
	540, 543, 544, 542, 541, 376, 377, 500, 563, 564,
	568, 567, 565, 566, 569, 572, 573, 574, 575, 576,
	577, 579, 578, 570, 571, 548, 547, 549, 550, 551,
	552, 553, 554, 556, 555, 557, 558, 559, 560, 561,
	562, 580, 581, 582, 583, 584, 586, 585, 590, 589,
	587, 588, 592, 591, 501, 502, 121, 122, 123, 124,
	125, 126, 127, 503, 506, 504, 505, 507, 508, 509,
	514, 515, 510, 511, 512, 513, 516, 387, 385, 386,
	382, 381, 380, -89, -102, 620, 619, -103, 441, 446,
	447, 449, -151, -152, -165, -166, -296, -302, 259, 443,
	253, 188, 487, -154, -148, -219, 117, 103, -31, -215,
	442, 452, 453, 457, 448, 458, 606, 608, 623, 624,
	626, 611, 616, 615, 618, 534, 535, 536, 537, 538,
	539, 691, 692, 693, 694, 695, 696, 697, 698, -388,
	-295, 101, -157, -155, -200, 104, 109, 112, 113, 115,
	-410, 277, 357, 358, 131, -420, 720, -156, 106, 107,
	108, 133, 134, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 99, 105, 51, 416, 416,
	-190, -79, -79, -79, -79, -417, 723, 598, -231, -130,
	-233, -33, -31, -420, 13, -79, -31, -32, -30, -36,
	-38, 625, -37, -302, 110, -238, -254, 17, 68, 177,
	49, 57, -236, -237, -34, -31, -145, 24, 42, 28,
	-132, 184, -145, -302, -132, -280, 258, -79, -79, -269,
	-316, 332, -271, 431, 706, 430, -261, -274, 101, -260,
	-273, 429, 102, -358, 174, -344, -348, -296, 269, -374,
	265, -190, -367, -366, -296, -420, -128, -290, 255, 263,
	262, 151, -391, 154, 311, 443, 253, -53, -54, -55,
	-273, 192, 726, -111, 286, 290, 97, 97, -348, -347,
	-346, -392, 290, 269, -373, -365, 261, 270, -354, 262,
	263, -349, 255, 152, -392, -349, 260, 270, 265, 269,
	290, 290, 140, 290, 140, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 285, -355, 166, -355, 601, 601,
	-361, -392, 265, 255, -392, -392, 261, -292, -349, 257,
	29, 257, 39, 39, -355, -355, -355, -273, 192, -355,
	-355, -355, -355, 298, 298, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, 254, -391, -137, 427, 318, 91, -56, 300,
	-39, -190, -290, 255, 256, -391, 287, -190, 237, 254,
	709, -284, 174, 20, -284, -281, 416, 414, 401, 406,
	-284, -284, -284, -284, 301, 399, -350, 255, 39, 266,
	416, 301, 399, 301, 302, 301, 302, 409, 419, 301,
	-307, 19, 177, 443, 404, 408, 294, 254, 295, 256,
	418, 302, -307, 99, -285, 174, 301, 416, 410, 297,
	-284, -284, -314, -420, -298, -296, -294, 246, 42, 157,
	29, 31, 160, 193, 143, 24, 161, 41, 248, 364,
	265, 192, 261, 488, 241, 82, 606, 444, 451, 442,
	450, 454, 490, 491, 443, 402, 35, 18, 608, 32,
	275, 28, 45, 186, 243, 164, 609, 278, 30, 276,
	130, 134, 611, 27, 85, 270, 19, 263, 47, 21,
	612, 613, 22, 75, 259, 258, 177, 255, 80, 16,
	236, 33, 173, 76, 614, 152, 146, 615, 616, 617,
	618, 144, 78, 174, 25, 746, 452, 453, 37, 707,
	593, 289, 188, 83, 66, 708, 158, 448, 619, 620,
	131, 621, 135, 86, 713, 154, 23, 81, 49, 622,
	290, 623, 260, 747, 624, 434, 625, 175, 244, 487,
	79, 176, 720, 626, 721, 253, 415, 13, 493, 36,
	274, 262, 74, 73, 142, 77, 458, 627, 254, 163,
	257, 145, 133, 11, 151, 38, 17, 84, 87, 455,
	456, 457, 64, 141, 597, 162, 20, 628, 435, 156,
	-388, 709, -314, -314, 301, 341, 36, 102, -414, -415,
	-416, 597, 434, 257, -296, -190, -85, 699, 245, -86,
	705, 42, 252, 147, 39, -135, 416, -123, 193, 727,
	710, 711, 712, 709, 413, 717, 715, 713, 301, 714,
	97, 154, 156, 157, 4, -145, 173, -201, -202, 172,
	166, 167, 168, 169, 170, 171, 178, 177, 158, 160,
	174, -247, 155, 179, 180, 181, 182, 183, 184, 185,
	187, 186, 188, 189, 175, 176, 192, 239, 240, -153,
	-153, -153, -153, -217, -223, -222, -420, -219, -388, -295,
	-302, -420, -420, -153, -279, -420, -150, -420, -420, -420,
	-420, -420, -226, -145, -420, -420, -424, -420, -424, -424,
	-424, -333, -420, -333, -333, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	237, -420, -420, -420, -420, -420, -333, -333, -333, -333,
	-333, -333, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, 99, 113, 109, 112,
	104, -221, 115, 99, 99, 99, 99, -31, -32, -211,
	-420, -313, -401, -402, -194, -193, -190, -302, -420, 318,
	-296, -296, 287, 106, -236, -34, -31, -231, -237, -233,
	-31, -79, -121, -134, 70, 71, -133, -136, 28, 45,
	75, 77, 100, 73, 74, 72, 42, -421, 98, -421,
	-254, -421, 97, -38, -257, 96, 653, 683, 653, 683,
	68, 50, 99, 99, 97, 26, -232, -234, -145, 19,
	-300, 4, -299, 29, -296, 99, 237, 19, -191, 33,
	-190, -280, -280, 97, 101, 332, -270, -272, 432, 434,
	166, -301, -296, 99, 35, 98, 97, -190, -322, -325,
	-327, -326, -328, -323, -324, 361, 362, 193, 365, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 378, 390,
	36, 277, 357, 358, 359, 360, 379, 380, 381, 382,
	384, 385, 386, 387, 342, 363, 595, 343, 344, 345,
	346, 347, 348, 350, 351, 354, 352, 353, 355, 356,
	-297, -296, 96, 98, 97, -332, 96, -145, -137, 254,
	-296, 255, 255, 255, -287, 259, 487, -355, -355, -355,
	285, 24, -46, -43, -381, 23, -42, -43, 246, 136,
	137, 243, 96, -344, 96, -353, -297, -296, 96, 152,
	260, 151, -352, -349, -352, -353, -296, -219, -296, 152,
	152, -296, -296, -266, -296, -266, -266, 42, -266, 42,
	-266, 42, 106, -296, -266, 42, -266, 42, -266, 42,
	-266, 42, -266, 42, 35, 88, 89, 90, 35, 92,
	93, 94, -219, -296, -296, -219, -344, -219, -190, -296,
	-273, 106, 106, 106, -355, -355, 106, 99, 99, 99,
	-355, -355, 106, 99, -304, -302, 99, 99, -393, 271,
	315, 317, 106, 106, 106, 106, 35, 99, -394, 35,
	734, 733, 735, 736, 737, 99, 106, 35, 106, 35,
	106, -296, 96, -190, -143, 305, 241, 243, 246, 86,
	99, 323, 321, 322, 319, 324, 325, 326, 166, 51,
	97, 257, 254, -296, -286, 259, -286, -296, -303, -302,
	-294, -190, 257, 398, 99, -145, -351, 19, 177, -307,
	-307, -284, -190, -351, -307, -284, -190, -284, -284, -284,
	-284, -307, -307, -307, -284, -302, -302, -190, -190, -190,
	-190, -190, -190, -190, -314, -285, -284, 709, 99, -278,
	19, 86, -314, -314, -293, 27, 27, 97, 338, 435,
	436, -312, 335, -81, -296, 99, -10, -29, -18, -17,
	-19, 166, -10, 97, 597, -183, -190, 709, 709, 709,
	709, 709, 709, -145, -145, -145, -145, 621, -209, -412,
	158, 133, 134, 131, 132, -162, 43, 44, 42, -145,
	-210, -215, -217, 116, 177, 160, 174, -247, -150, -153,
	-150, -150, -150, -150, -150, -150, 236, -150, 236, -150,
	-150, -150, -150, -150, -150, -315, -296, 99, 193, -158,
	-157, 115, -410, -158, 594, 97, -222, 237, -145, -145,
	-388, -119, 460, 461, 462, 463, 465, 466, 467, 470,
	471, 475, 476, 459, 477, 464, 469, 472, 473, 474,
	468, 360, -145, -212, -211, -212, -145, -145, -224, -225,
	162, -219, -145, -421, -421, 106, 184, -127, 28, 45,
	-127, -127, -127, -127, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -127, -145, -120, 459, 477, 464,
	469, 472, 473, 474, 468, 360, 478, 479, 480, 481,
	482, 483, 484, 485, 486, -120, -119, -145, -145, -145,
	-145, -145, -145, -145, -145, -87, -145, 143, 144, 145,
	-211, -145, -150, -145, -145, -145, -421, -145, -145, -145,
	-212, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -387, -386, -385,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -211, -211, -211, -211, -211, -145, -421,
	-145, -164, -148, 106, -262, 115, 102, -145, -145, -145,
	-145, -145, -145, -212, -298, -303, -294, -295, -211, -212,
	-212, -211, -211, -145, -145, -145, -145, -145, -145, -145,
	-145, -421, -145, -145, -145, -145, -145, -254, -421, -211,
	97, -403, 434, 435, 707, -305, -304, 29, 290, 237,
	96, -212, 99, 19, -264, 87, -296, -236, -236, 70,
	71, 66, -131, -132, -136, -421, -37, 29, -256, -296,
	646, 646, 69, 99, -334, -273, 388, 389, 193, -145,
	-145, 97, -235, 31, 32, -190, -299, 184, -303, -190,
	-265, 290, -190, -168, -170, -171, -172, -194, -218, -420,
	-173, -31, 617, 614, 19, -183, -184, -192, -302, -271,
	-316, -270, 97, 433, 435, 436, 86, 135, -145, -335,
	192, -363, -362, -361, -344, -346, -347, -348, 98, -335,
	-340, 395, 394, -332, -332, -332, -332, -332, -334, -334,
	-334, -334, 96, -332, 96, -332, -332, -332, -332, -337,
	96, -337, -337, -338, -337, 96, -338, -339, 96, -339,
	-374, -145, -371, -370, -368, -369, 264, 111, 689, 645,
	597, 638, 679, 87, -366, -235, 106, -421, -143, -287,
	-372, -369, -296, -296, -296, -302, 158, 101, 99, 101,
	99, 101, 99, -112, -60, -1, 746, 747, 748, 97,
	24, -345, -344, -59, 315, -377, -378, 290, -373, -367,
	-353, 152, -352, -353, -353, -296, 97, 33, 140, 140,
	140, 140, 597, 243, 36, -288, 637, 158, 689, 645,
	-344, -59, 257, 257, -315, -315, -315, 99, 99, -283,
	742, -183, -139, 307, 166, 296, 296, 254, 309, 254,
	309, -190, 320, 323, 321, 322, 319, 324, 325, 326,
	42, 42, 42, 42, 42, 42, 42, 308, 310, 312,
	298, -190, -190, -286, 86, -185, -190, 30, -302, 99,
	99, -190, -284, -284, -190, -284, -284, -190, 99, -302,
	-416, 339, -296, 375, 700, 702, -123, 434, 97, 597,
	27, -124, 27, -420, -412, 133, 134, -217, -217, -217,
	-210, -150, -153, -150, 157, 278, -150, -150, -420, -219,
	-421, -298, 29, 97, 87, -421, 182, 97, -421, -421,
	97, 19, 97, -227, -225, 164, -145, -421, 97, -421,
	-421, -211, -145, -145, -145, -145, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -211, -421, 97, 97,
	19, -319, 29, -421, -421, -421, -421, 97, -421, -421,
	-226, -421, 19, -421, 87, 97, 177, 97, -421, -421,
	-421, 97, 97, -421, -421, 97, -421, 97, -421, -421,
	-421, -421, -421, -421, 97, -421, 97, -421, -421, -421,
	97, -421, 97, -421, -421, 97, -421, 97, -421, 97,
	-421, 97, -421, 97, -421, 97, -421, 97, -421, 97,
	-421, 97, -421, 97, -421, 97, -421, 97, -421, 97,
	-421, 97, -421, 97, -421, 97, -421, 97, -421, 97,
	-421, -421, -421, 97, -421, 97, -421, 97, -421, -421,
	97, -421, 97, -421, 97, -421, 97, 97, -421, 97,
	97, 97, -421, 97, 97, 97, 97, -421, -421, -421,
	-421, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, -421, -421, -421, -421, -421, -421, 97, -94, 622,
	-421, -421, 97, -421, 97, 97, 97, 97, 97, -421,
	-420, 237, -421, -421, -421, -421, -421, 97, 97, 97,
	97, 97, 97, -421, -421, -421, 97, 97, -421, 97,
	-421, 97, -421, -402, 706, 435, -198, -197, -195, 84,
	258, 85, -304, -420, -303, -211, -421, -158, -262, -263,
	-262, -204, -296, 106, 115, -238, -167, 97, -169, 19,
	-217, 98, 97, -334, -242, -248, -281, -296, 99, 193,
	-336, 193, -336, 388, 389, -234, 237, -199, 20, -203,
	36, 64, -29, -420, -420, 36, 97, -186, -188, -187,
	-189, 76, 80, 82, 77, 78, 79, 83, -310, 29,
	-31, -168, -31, -420, -193, -183, -422, 19, 87, -422,
	97, 237, -272, -275, 437, 434, 440, -388, 99, -111,
	97, -361, -348, -239, -140, 47, -341, 396, -334, 605,
	-334, -343, 99, -343, 106, 106, 106, 98, -49, -44,
	-45, 37, 91, -368, -355, 99, 46, -355, -355, -296,
	98, -235, -139, -190, 86, -372, -372, -372, 30, -2,
	745, 751, 152, 96, 401, 23, -256, 97, 98, -220,
	316, 98, -113, -296, 98, 96, -353, -353, -296, -420,
	254, 35, 35, 689, 645, 637, -59, -220, -219, -296,
	-335, 744, 743, 98, 256, 314, -144, 454, -141, 99,
	101, -190, -190, -190, -190, -190, -190, 246, 243, 424,
	-411, 327, -411, 299, 257, -183, -190, 97, -84, 273,
	268, -307, -307, 37, -190, 434, 718, 716, -145, 157,
	278, -162, -153, -119, -119, -150, -317, 193, 361, 277,
	359, 355, 375, 366, 394, 357, 395, 352, 351, 350,
	-317, -315, -150, -211, -145, -145, -145, 165, -145, 163,
	-145, -95, -94, -421, -421, -421, -421, -421, -95, -95,
	-95, -95, -95, -95, -95, -95, -95, -95, -231, -145,
	-145, -145, -421, 193, 361, -95, -145, 19, -145, -315,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -385, -145, -211, -145, -211,
	-145, -145, -145, -145, -145, -386, -386, -386, -386, -386,
	-211, -211, -211, -211, -145, -420, -296, -98, -97, -96,
	672, 258, -94, -164, -98, -164, 236, -145, 236, 236,
	236, -145, -212, -298, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -195, -349, 296, -349, 296, -349,
	-266, 98, 97, -277, 27, 19, 64, 64, -167, -199,
	-132, -168, -296, -245, 699, -251, 53, -249, -250, 54,
	-246, 55, 63, -336, -336, 184, -236, -145, -267, 86,
	-268, -276, -219, -214, -216, -215, -420, -255, -421, -296,
	-266, -268, -170, -171, -171, -170, -171, 76, 76, 76,
	81, 76, 81, 76, -187, -302, -421, -145, -199, 87,
	-168, -168, -192, -302, 184, 434, 438, 439, -361, -409,
	131, 158, 35, 86, 392, 111, -407, 192, 634, 684,
	689, 645, 638, 679, -408, 260, 151, 152, 272, 29,
	48, 98, 97, 98, 97, 98, 98, 97, -289, -288,
	-45, -44, -355, -355, 106, -388, 99, 99, 256, -190,
	86, 86, 86, -114, 749, 106, 96, -3, 91, -145,
	96, 24, -344, -219, -379, -329, -380, -330, -331, -5,
	-6, -356, -117, 64, 111, -63, 51, 255, 729, 730,
	140, -420, 742, -371, -256, -375, -377, -190, -149, -420,
	-161, -147, -146, -148, -154, 182, 183, 277, 357, 358,
	-220, -190, -138, 305, 313, 96, -142, 102, -390, 87,
	296, 392, 296, 392, 99, -413, 328, 99, -413, -190,
	-84, -49, -190, -284, -284, 37, -388, -421, -162, -153,
	-126, 177, 597, -320, 604, -332, -332, -332, -339, -332,
	347, -332, 347, -332, -421, -421, -421, 97, -421, 27,
	-421, 97, -145, 97, -95, -95, -95, -95, -95, -122,
	493, 97, 97, -421, 96, 96, -421, -145, -421, -421,
	-421, 97, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, 97, -421, 97, -421, 97,
	-421, 97, -421, 97, -421, 97, -421, 97, -421, 97,
	-421, 97, -421, 97, -421, 97, -421, 97, -421, 97,
	-421, 97, -421, 97, -421, 97, -421, -421, 97, -421,
	-421, -421, 97, -421, 97, -421, 97, -421, -421, -421,
	97, -318, 690, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -93, -297, -94, 654, 654, -421,
	-94, -228, 97, -150, -421, -150, -150, -150, -421, -421,
	-421, 97, -421, 97, 97, -421, 97, -421, 97, -421,
	-421, -421, -421, 97, -196, 27, -420, -196, -420, -196,
	-421, -262, -190, -199, -229, 21, -242, 58, 367, -253,
	-252, 62, 54, -250, 24, 56, 24, 34, -267, 97,
	166, -309, 97, 29, -421, -421, 97, 64, 237, -421,
	-199, -181, -180, 86, 87, -182, 86, -180, 76, 76,
	-257, 97, -168, -199, -199, 237, 131, -420, -149, 17,
	99, 99, -388, -406, 733, 734, 35, 106, -355, -355,
	152, 152, -190, 96, -334, 99, -334, 106, 106, 35,
	92, 93, 94, 35, 88, 89, 90, -190, -190, -190,
	-190, -376, 96, 24, -145, 96, 166, 98, -256, -256,
	292, 177, -355, 727, 298, 298, -355, -355, -355, -116,
	-115, 749, 98, -421, 97, -342, 597, 600, -145, -155,
	-155, -257, 98, -384, 597, -389, -296, -296, -296, -296,
	106, 108, -421, 595, 83, 598, -421, -334, -145, -145,
	-145, -145, -236, 99, -145, -145, 106, 106, -95, -421,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-211, -145, -421, -178, -177, -179, 710, 131, 35, -317,
	-421, -213, 290, -101, -100, -99, 19, -421, -145, -119,
	-119, -119, -119, -145, -145, -145, -145, -145, -145, -420,
	76, 23, 21, -259, -296, 260, -420, -259, -420, -305,
	-229, -230, 22, 24, -243, 60, -241, 59, -241, -252,
	24, 24, 99, 24, 99, 152, -276, -145, -216, -304,
	64, -29, -296, -214, -296, -231, -145, 96, -145, -158,
	-199, -145, -206, 517, 519, 520, 521, 518, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 522, 533,
	494, 495, 496, 118, 120, 119, 128, 129, 497, 498,
	499, 361, 545, 546, 540, 543, 544, 542, 541, 376,
	377, 500, 563, 564, 568, 567, 565, 566, 569, 572,
	573, 574, 575, 576, 577, 579, 578, 570, 571, 548,
	547, 549, 550, 551, 552, 553, 554, 556, 555, 557,
	558, 559, 560, 561, 562, 580, 581, 582, 583, 584,
	586, 585, 590, 589, 587, 588, 592, 591, 501, 502,
	121, 122, 123, 124, 125, 126, 127, 503, 506, 504,
	507, 508, 509, 514, 515, 510, 511, 512, 513, 516,
	387, 385, 386, 382, 381, 380, 441, 446, 447, 449,
	534, 535, 536, 537, 538, 539, 691, 692, 693, 694,
	695, 696, 697, 698, 99, 99, 96, -145, 98, 98,
	-257, -375, -60, 98, -258, -256, 106, 98, 293, -215,
	-420, 99, -355, -355, -355, 106, 106, -304, -421, 97,
	-296, -408, -377, 601, 601, -421, 29, -383, -382, -298,
	96, 87, 69, 596, 599, -421, -421, -421, 97, -421,
	-421, -421, 98, 98, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, 97, -421, -177, -179,
	-421, 86, -158, -231, 24, -98, 315, 317, -98, -421,
	-421, -421, -421, -421, 97, -421, -421, 97, -421, 97,
	-421, -421, -259, -421, 24, 24, 97, -421, -259, -421,
	-259, -198, -230, -108, -107, -106, 628, -145, -211, -244,
	61, 86, 135, 99, 99, 99, 17, -420, -214, 237,
	-309, -236, -256, -175, 401, -421, -256, 98, 29, 98,
	751, 152, 98, -215, -125, -420, 289, -304, 99, 99,
	-115, -118, -29, 97, 166, -256, -190, 69, -145, -211,
	-421, 86, 609, 710, -92, -91, -88, 721, 747, -211,
	-94, -94, -145, -145, -145, -421, -296, 260, -421, -421,
	-108, 97, -105, -104, -296, -321, 597, 86, 135, -268,
	-256, -309, -296, 98, -421, -420, 98, -240, -29, 96,
	-3, 289, -329, -380, -330, -331, -5, -6, -356, -82,
	597, -382, -360, -302, -298, 99, 106, 98, 597, -421,
	-421, -90, 160, 719, 687, -155, 236, -421, 97, -421,
	97, -421, 97, -106, 97, 29, 602, -421, -305, -176,
	-174, -296, 651, -399, -398, 593, -409, -405, 131, 158,
	111, -407, 689, 645, 141, 142, -82, -145, 96, -421,
	-83, 304, 706, 237, -390, 598, -90, 720, 665, 640,
	665, 640, -150, -145, -145, -145, -104, -420, -421, 97,
	27, -322, -62, 662, -396, -397, 86, -400, 407, 661,
	682, 131, 99, 98, -256, 265, -303, -384, 599, 157,
	-119, -421, 97, -421, 97, -421, -93, -174, 658, -335,
	-158, -397, 86, -396, 86, 18, 17, -4, 750, 98,
	306, -90, 665, 640, -145, -145, -421, -61, 30, -175,
	-395, 273, 268, 271, 36, -395, 106, -4, -421, -421,
	662, 267, 35, 131, -158, -178, -177, -177,
}

var yyDef = [...]int{
	889, -2, -2, 891, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 889, 889, 889, 0, 889, 0,
	0, 889, -2, -2, 889, 1649, 0, 889, 0, 884,
	0, -2, 804, 810, 0, 819, -2, 0, 0, 889,
	889, 2289, 2289, 884, 0, 0, 0, 0, 0, 889,
	889, 889, 889, 1654, 1507, 50, 889, 0, 85, 86,
	839, 840, 841, 65, 0, 2287, 890, 1, 3, 71,
	75, 0, 0, 0, 58, 1516, 0, 78, 0, 0,
	893, 896, 897, 0, 0, 1632, 889, 889, 0, 126,
	127, 0, 0, 0, -2, 130, -2, 159, 160, 161,
	0, 166, 609, 527, 579, 525, 564, -2, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 402, 402, 0, 0, -2, 513, 513, 513,
	1634, 0, 0, 0, 561, 464, 402, 402, 402, 0,
	402, 402, 402, 402, 0, 0, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 1534, 165, 1650, 1647, 1648, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 0, 1626, 0, 722, 998,
	0, 885, 886, 0, 793, 793, 0, 793, 793, 793,
	793, 0, 0, 0, 736, 0, 0, 0, 0, 790,
	0, 752, 753, 0, 790, 0, 759, 796, 0, 0,
	766, 793, 793, 769, 2290, 0, 2290, 2290, 0, 0,
	1617, 0, 787, 785, 799, 800, 42, 803, 806, 807,
	808, 809, 812, 0, 823, 826, 1643, 1644, 0, 828,
	833, 852, 853, 0, 45, 1158, 0, 1022, 0, 1033,
	-2, 1044, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069,
	0, 0, 0, 0, 1074, 1075, 0, 0, 0, 0,
	0, 1138, 0, 0, 0, 0, 2012, 1478, 0, 0,
	1440, 1440, 1174, 1440, 1440, 1442, 1442, 1442, 1863, 2004,
	2013, 2192, 1824, 1830, 1831, 1832, 2138, 2139, 2140, 2141,
	2233, 2234, 2238, 1926, 1819, 2205, 2206, 0, 2286, 1965,
	1973, 1974, 1950, 1959, 1998, 2100, 2217, 1842, 1993, 2063,
	1923, 1945, 1946, 2081, 2082, 1969, 1970, 1949, 2144, 2146,
	2162, 2163, 2148, 2150, 2159, 2165, 2170, 2149, 2161, 2166,
	2179, 2183, 2186, 2187, 2188, 2156, 2154, 2167, 2171, 2173,
	2175, 2181, 2184, 2157, 2155, 2168, 2172, 2174, 2176, 2182,
	2185, 2143, 2147, 2151, 2160, 2178, 2158, 2177, 2152, 2164,
	2169, 2180, 2153, 2145, 1963, 1966, 1953, 1954, 1956, 1958,
	1964, 1971, 1977, 1955, 1976, 1975, 0, 1951, 1952, 1957,
	1968, 1972, 1960, 1961, 1962, 1967, 1978, 2019, 2018, 2017,
	2062, 1989, 2061, 0, 0, 0, 0, 0, 1813, 1868,
	1869, 2189, 1362, 1363, 1364, 1365, 0, 0, 0, 0,
	0, 0, 0, 291, 292, 1491, 1492, 44, 1157, 1613,
	1442, 1442, 1442, 1442, 1442, 1442, 1096, 1097, 1098, 1099,
	1100, 1126, 1127, 1133, 1134, 2076, 2077, 2078, 2079, 1906,
	2228, 1915, 1916, 2058, 2059, 1928, 1929, 2260, 2261, -2,
	-2, -2, 232, 233, 234, 235, 236, 237, 238, 239,
	0, 1867, 2203, 2204, 228, 0, 0, 296, 293, 294,
	295, 1140, 1141, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 298, 299, 2289, 0, 862,
	0, 0, 0, 0, 0, 0, 1655, 1656, 1516, 0,
	1508, 1507, 63, 0, 889, -2, 0, 0, 0, 0,
	47, 0, 52, 952, 892, 77, 76, 1556, 1559, 0,
	0, 0, 59, 1517, 67, 69, 1518, 0, 894, 895,
	0, 928, 932, 0, 0, 0, 1633, 1632, 1632, 102,
	0, 0, 103, 123, 124, 125, 0, 0, 109, 110,
	1619, 1620, 43, 0, 0, 177, 178, 0, 1114, 429,
	0, 173, 0, 422, 361, 0, 1534, 0, 0, 0,
	0, 0, 1630, 0, 1627, 154, 155, 162, 163, 164,
	402, 402, 402, 576, 0, 0, 165, 165, 534, 535,
	536, 0, 0, -2, 427, 0, 514, 0, 0, 416,
	416, 420, 418, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 403, 0, 574, 575,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	1636, 0, 551, 552, 0, 0, 0, 402, 402, 0,
	0, 0, 0, 402, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 1547, 0, 0, 0, -2, 0,
	714, 0, 0, 0, 1628, 1628, 0, 721, 0, 0,
	0, 726, 0, 0, 727, 0, 790, 790, 788, 789,
	729, 730, 731, 732, 793, 0, 0, 411, 412, 413,
	790, 793, 0, 793, 793, 793, 793, 790, 790, 790,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2290, 796, 793, 0, 760, 0, 761, 762, 763, 764,
	767, 768, 770, 2291, 2292, 1645, 1646, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	2290, 2290, 774, 778, 782, 780, 1618, 805, 811, 813,
	814, 0, 0, 824, 827, 846, 49, 1914, 832, 49,
	834, 835, 836, 837, 838, 864, 865, 870, 0, 0,
	0, 0, 876, 877, 878, 0, 0, 881, 882, 883,
	0, 0, 0, 0, 0, 1020, 0, 0, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1045, 1046, 0, 0, 0, 1070,
	1071, 1072, 1073, 1076, 0, 1087, 0, 1089, 1487, -2,
	0, 0, 0, 1081, 1082, 0, 0, 0, 1638, 1638,
	0, 0, 0, 1479, 0, 0, 1172, 0, 1173, 1175,
	1176, 1177, 0, 1178, 1179, 901, 901, 901, 901, 901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	0, 0, 1638, 1638, 0, 0, 220, 221, 222, 223,
	224, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 240, 241, 242,
	243, 244, 245, 300, 246, 247, 248, 1157, 0, 0,
	0, 46, 854, 855, 0, 978, 0, -2, 1638, 0,
	0, 907, 0, 1653, 57, 66, 68, 1516, 61, 1516,
	0, 911, 0, 0, -2, -2, 912, 913, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 54, 2288, 55,
	0, 74, 0, 48, 0, 0, 1557, 0, 1560, 0,
	0, 0, 375, 1564, 0, 0, 1509, 1510, 1513, 0,
	929, 2010, 933, 0, 935, 936, 0, 0, 100, 0,
	994, 0, 0, 0, 111, 0, 113, 114, 0, 0,
	0, 386, 1621, 1622, 1623, -2, 409, 0, 386, 370,
	308, 309, 310, 361, 312, 361, 361, 361, 361, 375,
	375, 375, 375, 343, 344, 345, 346, 347, 0, 361,
	0, 329, 361, 361, 361, 361, 351, 352, 353, 354,
	355, 356, 357, 358, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 363, 363, 363, 363, 363, 367, 367,
	0, 1115, 0, 390, 0, 1513, 0, 0, 1547, 1630,
	1640, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	577, 620, 528, 565, 578, 0, 531, 532, -2, 0,
	0, 513, 0, 515, 0, 410, 0, -2, 0, 420,
	0, 416, 420, 417, 420, 408, 421, 555, 556, 557,
	0, 559, 560, 650, 964, 0, 0, 0, 0, 0,
	656, 657, 658, 0, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 566, 567, 568, 569, 570, 571,
	572, 573, 0, 0, 0, 0, 515, 0, 562, 0,
	0, 466, 467, 468, 0, 0, 471, 472, 473, 474,
	0, 0, 477, 478, 479, 981, 982, 480, 481, 506,
	507, 508, 482, 483, 484, 485, 486, 487, 488, 500,
	501, 502, 503, 504, 505, 489, 490, 491, 492, 493,
	494, 497, 0, 147, 1538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1628, 0, 0, 0, 0, 910, 999, 1651,
	1652, 723, 0, 0, 794, 795, 0, 414, 415, 793,
	793, 733, 775, 0, 793, 737, 776, 738, 740, 739,
	741, 754, 755, 793, 744, 791, 792, 745, 746, 747,
	748, 749, 750, 751, 771, 756, 757, 758, 797, 0,
	801, 802, 772, 773, 0, 783, 0, 0, 0, 817,
	818, 0, 825, 849, 847, 848, 850, 842, 843, 844,
	845, 0, 851, 0, 0, 867, 96, 872, 873, 874,
	875, 887, 880, 1159, 1017, 1018, 1019, 0, 1021, 1027,
	0, 1142, 1144, 1025, 1026, 1029, 0, 0, 0, 1023,
	1034, 1154, 1155, 1156, 0, 0, 0, 0, 0, 1038,
	1042, 1047, 1048, 1049, 1050, 1051, 0, 1052, 0, 1055,
	1056, 1057, 1058, 1059, 1060, 1066, 1455, 1456, 1457, 1085,
	301, 302, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1158, 0, 1639, 0, 0, 0, 1485, 1482,
	0, 0, 0, 1441, 1443, 0, 0, 0, 902, 903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 0, 0, 1458, 0, 0,
	0, 0, 0, 0, 0, 1478, 0, 1091, 1092, 1093,
	0, 0, 0, 0, 0, 0, 1220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1366, 1367, 1368, 1369, 41, 0, 0, 0,
	0, 0, 0, 0, 1489, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1391, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 857, 858, 860, 0, 1001, 979, 0, 0, 0,
	0, 0, 863, 0, 906, 0, 909, 60, 62, 915,
	916, 0, 937, 926, 914, 56, 51, 0, 0, 956,
	1558, 1561, 1562, 375, 1584, 0, 384, 384, 381, 1519,
	1520, 0, 1512, 1514, 1515, 79, 934, 930, 0, 1015,
	0, 0, 993, 0, 940, 942, 943, 944, 976, 0,
	947, 948, 0, 0, 0, 0, 0, 98, 998, 104,
	0, 112, 0, 0, 117, 118, 105, 106, 107, 108,
	0, 609, -2, 461, 179, 181, 182, 183, 174, -2,
	373, 371, 372, 311, 375, 375, 337, 338, 339, 340,
	341, 342, 0, 349, 0, 330, 331, 332, 333, 322,
	0, 323, 324, 325, 365, 0, 326, 327, 0, 328,
	428, 0, 1521, 391, 392, 394, 402, 0, 397, 398,
	0, 402, 402, 0, 423, 424, 0, 1513, 1538, 0,
	0, 1641, 1640, 1640, 1640, 152, 0, 167, 168, 169,
	170, 171, 172, 645, 0, 0, 621, 643, 644, 165,
	0, 0, 175, 517, 516, 0, 677, 0, 426, 0,
	0, 420, 420, 405, 406, 558, 0, 0, 652, 653,
	654, 655, 0, 0, 0, 544, 455, 0, 545, 546,
	515, 517, 0, 0, 386, 469, 470, 475, 476, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 594, 596, 599, 601, 519, 605, 607,
	595, 598, 600, 602, 519, 606, 608, 1535, 1536, 1537,
	0, 0, 715, 0, 0, 452, 94, 1629, 720, 724,
	725, 790, 743, 777, 790, 735, 742, 765, 779, 781,
	815, 816, 821, 829, 830, 831, 871, 0, 0, 0,
	0, 879, 0, 0, 1028, 1143, 1145, 1030, 1031, 1032,
	1035, 0, 1039, 1043, 0, 0, 0, 0, 0, 1090,
	1088, 1489, 0, 0, 0, 1139, 0, 0, 1162, 1163,
	0, 0, 0, 0, 1483, 0, 0, 1170, 0, 1444,
	1120, 0, 0, 0, 0, 0, 1120, 1120, 1120, 1120,
	1120, 1120, 1120, 1120, 1120, 1120, 1507, 1197, 0, 0,
	0, 0, 0, 1202, 1203, 1204, 1120, 0, 1207, 1208,
	0, 1210, 0, 1211, 0, 0, 0, 0, 1218, 1219,
	1221, 0, 0, 1224, 1225, 0, 1227, 0, 1229, 1230,
	1231, 1232, 1233, 1234, 0, 1236, 0, 1238, 1239, 1240,
	0, 1242, 0, 1244, 1245, 0, 1247, 0, 1249, 0,
	1252, 0, 1255, 0, 1258, 0, 1261, 0, 1264, 0,
	1267, 0, 1270, 0, 1273, 0, 1276, 0, 1279, 0,
	1282, 0, 1285, 0, 1288, 0, 1291, 0, 1294, 0,
	1297, 1298, 1299, 0, 1301, 0, 1303, 0, 1306, 1307,
	0, 1309, 0, 1312, 0, 1315, 0, 0, 1316, 0,
	0, 0, 1320, 0, 0, 0, 0, 1329, 1330, 1331,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 1344, 1345, 1346, 1347, 1348, 0, 1350, 0,
	1121, 0, 0, 1121, 0, 0, 0, 0, 0, 1160,
	1638, 0, 1445, 1446, 1447, 1448, 1449, 0, 0, 0,
	0, 0, 0, 1389, 1390, 1392, 0, 0, 1395, 0,
	1397, 0, 1612, 856, 859, 861, 950, 1002, 1003, 0,
	0, 0, 980, 0, -2, 0, 1637, 904, 905, 908,
	958, 0, 1493, 0, 0, 937, 1015, 0, 938, 0,
	53, 953, 0, 1566, 1565, 1578, 1591, 384, 384, 378,
	379, 385, 380, 382, 383, 1511, 0, 1516, 0, 1605,
	0, 0, 1594, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 0, 0, 986, 0, 0, 0, 0, 977,
	948, 0, 949, 0, 1015, 0, 0, 92, 93, 0,
	0, 0, 115, 116, 0, 0, 122, 387, 388, 156,
	165, 463, 180, 436, 0, 0, 307, 374, 334, 335,
	336, 0, 359, 0, 0, 0, 0, 457, 128, 1525,
	1524, 402, 402, 393, 0, 396, 0, 0, 0, 1642,
	362, 425, 0, 146, 0, 0, 0, 0, 1631, 615,
	0, 0, 622, 0, 0, 0, 526, 0, 537, 538,
	0, 649, -2, 711, 390, 0, 404, 407, 965, 0,
	0, 539, 0, 542, 543, 456, 517, 548, 549, 563,
	550, 498, 499, 496, 0, 0, 1548, 1549, 1554, 1552,
	1553, 133, 584, 586, 590, 585, 589, 0, 0, 0,
	521, 0, 521, 582, 0, 452, 1521, 0, 719, 453,
	454, 793, 793, 866, 97, 0, 869, 0, 0, 0,
	0, 1036, 1040, 1053, 1054, 1450, 1476, 361, 361, 1463,
	361, 367, 1466, 361, 1468, 361, 1471, 361, 1474, 1475,
	0, 0, 1083, 0, 0, 0, 0, 1169, 1486, 0,
	0, 1180, 1119, 1120, 1120, 1120, 1120, 1120, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1480, 0,
	0, 0, 1201, 0, 0, 1205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 145, 0, 0, 0,
	0, 0, 0, 1400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 1118, 0, 1122, 1123,
	0, 0, 1352, 0, 0, 1370, 0, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1004, 1011, 0, 1011, 0, 1011,
	0, 997, 0, 0, 1624, 1625, 1494, 1495, 1015, 1496,
	927, 939, 957, 1584, 0, 1577, 0, -2, 1586, 0,
	0, 0, 1592, 376, 377, 931, 80, 1016, 83, 0,
	1605, 1614, 0, 1602, 1607, 1609, 0, 0, 0, 1598,
	0, 1015, 941, 972, 974, 0, 969, 984, 985, 987,
	0, 989, 0, 991, 992, 952, 946, 0, 88, 0,
	1015, 1015, 99, 0, 1000, 119, 120, 121, 462, 184,
	189, 0, 0, 0, 194, 0, 196, 0, 0, 0,
	201, 202, 402, 402, 437, 0, 304, 306, 0, 0,
	187, 375, 0, 375, 0, 366, 368, 0, 438, 458,
	1522, 1523, 0, 0, 395, 399, 400, 401, 0, 148,
	0, 0, 0, 618, 0, 646, 0, 0, 0, 0,
	0, 0, 176, 518, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 0, 402, 0, 0, 0, 402, 402,
	402, 0, 703, 389, 0, 0, 674, 671, 540, 0,
	218, 219, 226, 227, 229, 0, 0, 0, 0, 0,
	547, 952, 1539, 1540, 1541, 0, 1551, 1555, 136, 0,
	0, 0, 0, 592, 597, 603, 0, 520, 604, 716,
	717, 718, 95, 728, 734, 868, 888, 1024, 1037, 1041,
	0, 0, 0, 0, 1477, 1461, 375, 1464, 1465, 1467,
	1469, 1470, 1472, 1473, 1079, 1080, 1084, 0, 1166, 0,
	1168, 0, 1484, 0, 1181, 1182, 1183, 1184, 1185, 1516,
	0, 0, 0, 1200, 0, 0, 1120, 0, 1213, 1212,
	1214, 0, 1216, 1217, 1222, 1223, 1226, 1228, 1235, 1237,
	1241, 1243, 1246, 1248, 1250, 0, 1253, 0, 1256, 0,
	1259, 0, 1262, 0, 1265, 0, 1268, 0, 1271, 0,
	1274, 0, 1277, 0, 1280, 0, 1283, 0, 1286, 0,
	1289, 0, 1292, 0, 1295, 0, 1300, 1302, 0, 1305,
	1308, 1310, 0, 1313, 0, 1317, 0, 1319, 1321, 1322,
	0, 0, 0, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1349, 0, 1112, 1351, 1124, 1125, 1130,
	1354, 0, 0, 0, 1357, 0, 0, 0, 1361, 1161,
	1372, 0, 1377, 0, 0, 1383, 0, 1387, 0, 1393,
	1394, 1396, 1398, 0, 0, 0, 0, 0, 0, 0,
	978, 959, 64, 1496, 1500, 0, 1571, 1569, 1569, 1579,
	1580, 0, 0, 1587, 0, 0, 0, 0, 84, 0,
	0, 1593, 0, 0, 1610, 0, 0, 0, 0, 101,
	1507, 966, 973, 0, 0, 967, 0, 968, 988, 990,
	945, 0, 1015, 90, 91, 0, 190, 0, 192, 0,
	195, 197, 198, 199, 205, 206, 207, 200, 0, 0,
	303, 305, 0, 0, 348, 360, 350, 0, 0, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 952, 149, 150,
	151, 610, 0, 620, 0, 954, 0, 613, 0, 529,
	0, 0, 0, 402, 402, 402, 0, 0, 0, 0,
	688, 0, 0, 651, 0, 659, 0, 0, 0, 230,
	231, 0, 1550, 583, 0, 134, 135, 0, 0, 588,
	522, 523, 1077, 0, 0, 0, 1078, 1462, 0, 0,
	0, 0, 0, 1481, 0, 0, 0, 0, 1206, 1209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 640, 641, 0, 1401,
	1117, 1507, 0, 1121, 1131, 1132, 0, 1121, 1371, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1012, 0, 0, 0, 960, 961, 0, 0, 0, 1001,
	1500, 1505, 0, 0, 1574, 0, 1567, 1570, 1568, 1581,
	0, 0, 1588, 0, 1590, 0, 1615, 1616, 1608, 1603,
	0, 1597, 1600, 1602, 1599, 1516, 970, 0, 975, 0,
	89, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 204, 0, 0, 364, 369,
	0, 0, 0, 611, 0, 955, 623, 614, 0, 701,
	0, 705, 0, 0, 0, 708, 709, 710, 687, 0,
	691, 430, 675, 672, 673, 541, 0, 137, 138, 0,
	0, 0, 1451, 0, 1454, 1164, 1167, 1165, 0, 1196,
	1198, 1199, 1459, 1460, 1215, 1251, 1254, 1257, 1260, 1263,
	1266, 1269, 1272, 1275, 1278, 1281, 1284, 1287, 1290, 1293,
	1296, 1304, 1311, 1314, 1318, 1323, 0, 1326, 0, 0,
	1327, 0, 642, 1108, 0, 0, 1128, 1129, 0, 1356,
	1358, 1359, 1360, 1373, 0, 1378, 1379, 0, 1384, 0,
	1388, 1399, 0, 1006, 1013, 1014, 0, 1009, 0, 1010,
	0, 951, 1505, 82, 1506, 1503, 0, 1501, 1498, 1563,
	0, 1572, 1573, 1582, 1583, 1589, 0, 0, 1602, 0,
	1596, 87, 0, 0, 0, 191, 0, 210, 0, 619,
	0, 622, 612, 699, 700, 0, 712, 704, 706, 707,
	689, -2, 1542, 0, 0, 0, 591, 1452, 0, 0,
	1328, 0, 638, 639, 1116, 1109, 0, 1094, 1095, 1113,
	1353, 1355, 0, 0, 0, 1005, 962, 963, 1007, 1008,
	81, 0, 1502, 1136, 0, 1497, 0, 1575, 1576, 1606,
	0, 1595, 1601, 971, 978, 0, 443, 436, 1542, 0,
	0, 0, 692, 693, 694, 695, 696, 697, 698, 580,
	1544, 139, 140, 0, 510, 511, 512, 133, 0, 1171,
	1324, 1110, 0, 0, 0, 0, 0, 1374, 0, 1380,
	0, 1385, 0, 1504, 0, 0, 1499, 1604, 624, 0,
	626, 0, -2, 431, 444, 0, 185, 211, 212, 0,
	0, 215, 216, 217, 208, 209, 129, 0, 0, 713,
	0, 1545, 1546, 0, 136, 0, 0, 1101, 1102, 1103,
	1104, 1106, 0, 0, 0, 0, 1137, 1114, 625, 0,
	0, 386, 0, 635, 432, 433, 0, 439, 440, 441,
	442, 213, 214, 647, 0, 0, 509, 587, 1453, 0,
	0, 1375, 0, 1381, 0, 1386, 0, 627, 628, 636,
	0, 434, 0, 435, 0, 0, 0, 616, 0, 647,
	1543, 1111, 1105, 1107, 0, 0, 1135, 0, 637, 633,
	445, 447, 448, 0, 0, 446, 648, 617, 1376, 1382,
	0, 449, 450, 451, 629, 630, 631, 632,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 187, 179, 3,
	96, 98, 184, 182, 97, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 752,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 155, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	156, 157, 158, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:696
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:708
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:712
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:718
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:724
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:730
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:734
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:743
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:749
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:753
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:759
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:833
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:893
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:899
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:926
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:960
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:964
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:980
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:998
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1008
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1018
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1031
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1037
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1043
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1047
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1053
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1057
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1061
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1065
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1071
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1075
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1079
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1085
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1089
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1095
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1099
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1105
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1109
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1113
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1137
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1141
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1145
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1151
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1157
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1164
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1173
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1177
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1188
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1213
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1219
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1239
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1245
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1261
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1285
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1290
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1297
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1304
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1315
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1326
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1332
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1336
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1340
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1372
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1378
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1382
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1388
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1398
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1402
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1408
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1418
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1423
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1432
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1456
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1465
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1560
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1564
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1570
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1574
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1578
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1584
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1588
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1612
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1622
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1627
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1933
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1961
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1965
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1975
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1981
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1985
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1989
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1993
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2246
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2275
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2285
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2306
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2380
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2389
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2395
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2450
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2458
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2462
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2466
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2533
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2543
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2547
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2553
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2557
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2563
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2567
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2573
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2604
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2610
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2616
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2622
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2635
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2639
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2651
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2665
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2669
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2673
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2692
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2714
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2720
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2734
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2932
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2950
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2954
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2967
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2979
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2985
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3125
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3159
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3163
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3167
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3171
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3342
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3348
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3355
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3374
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3398
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3422
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3431
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3439
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3448
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3455
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3467
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3476
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3491
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3505
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3509
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3515
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3521
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3527
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3537
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3541
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3547
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3553
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3559
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3565
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3583
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3589
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3595
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3601
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3605
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3609
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3615
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3619
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3624
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3628
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3633
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3637
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3691
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3695
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3699
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3703
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3707
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3711
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3715
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3719
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3723
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3727
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3732
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3746
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3750
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3765
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3770
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3775
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3780
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3785
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3790
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3795
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3800
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3805
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3811
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3817
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3827
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3832
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3836
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3841
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3846
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3851
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3856
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3861
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3866
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3873
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3880
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3887
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3905
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3911
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3917
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3923
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3929
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3935
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3947
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3969
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3973
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = "extended "
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4310
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4314
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4324
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4358
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4392
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4401
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4407
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4417
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4421
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4425
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4464
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4469
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4473
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4477
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4481
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4485
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4490
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4494
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4498
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4502
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4506
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4510
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = yyDollar[1].str
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4530
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4538
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4593
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4603
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4609
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4613
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4617
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4621
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4627
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4633
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4639
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4746
		{
			setAllowComments(yylex, true)
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4750
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4756
		{
			yyVAL.strs = nil
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4760
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = "union"
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = "union all"
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = "union distinct"
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = "except"
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = "intersect"
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.str = ""
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4794
		{
			yyVAL.str = SQLCacheStr
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4799
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4803
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4813
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4817
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4836
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4842
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4846
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.strs = nil
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = SQLCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = DistinctStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.str = DistinctStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = HighPriorityStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.str = StraightJoinHint
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4895
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.str = SQLBigResultStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4917
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4927
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4931
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4935
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4939
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4964
		{ // Add dual
			yyLOCAL = TableExprs{}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4968
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4974
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4980
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4994
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4998
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5002
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5006
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5012
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5016
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5022
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5026
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5035
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5044
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5050
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5060
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5064
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5070
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5074
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5078
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5082
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5088
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5092
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5105
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5109
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5113
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5117
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5123
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5125
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5129
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5135
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5140
		{
			yyVAL.empty = struct{}{}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.empty = struct{}{}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5145
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5153
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5166
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5170
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5174
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5180
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5186
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5190
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5194
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5198
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5204
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5208
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5222
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5236
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5240
		{
			yyVAL.tableName = TableName{
				Name: yyDollar[1].identifierCS,
				Args: yyDollar[3].exprsUnion(),
			}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5250
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5254
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5260
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5269
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5275
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5279
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5285
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5289
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5293
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5297
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5301
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5305
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5310
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5314
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5318
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5322
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5381
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5385
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5401
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5457
		{
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5634
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5638
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5644
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5648
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5654
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5658
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5662
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5668
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5672
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5679
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5683
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5687
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5691
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5695
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5701
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5705
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5709
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5713
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5717
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5721
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5725
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5734
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5740
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5744
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5753
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5758
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5768
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5774
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5778
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5784
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5800
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5806
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5810
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5816
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5820
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5826
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5830
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5842
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5848
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5852
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5858
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5864
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5868
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5874
		{
			yyVAL.str = ""
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5878
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5884
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5888
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5895
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5899
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5903
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5907
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5913
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5917
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5923
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5927
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5931
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5935
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5939
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5943
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5949
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5953
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5957
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5964
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5970
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6846
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6850
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6854
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6858
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6935
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6939
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6943
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6947
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6951
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6955
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6968
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6974
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6978
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6982
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6986
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6990
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6994
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6998
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7002
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7006
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7010
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7014
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7018
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7022
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7026
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7030
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7034
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7038
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7042
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7046
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7050
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7056
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7060
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7064
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7068
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7072
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7076
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7080
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7084
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7088
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7092
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7096
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7100
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7104
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7108
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7112
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7116
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7120
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7124
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7134
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7138
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7142
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7152
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7156
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7160
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7164
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7168
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7174
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7178
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7182
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7186
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7190
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7196
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7200
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7204
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7214
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7218
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7232
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7262
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7266
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7270
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7274
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7278
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7282
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7301
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7306
		{
			yyVAL.str = string("")
		}
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7310
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7316
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7320
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7326
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7335
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7341
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7345
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7349
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7353
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7359
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7363
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7369
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7378
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7382
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7391
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7410
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7416
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7422
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7426
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7435
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7444
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7450
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7456
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7460
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7466
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7471
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7475
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7479
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7488
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7494
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7498
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7502
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7511
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7515
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7519
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7523
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7530
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7534
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7538
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7542
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7548
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7552
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7556
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7560
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = ""
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7577
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7592
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7601
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7605
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7610
		{
			yyVAL.str = "cascaded"
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7627
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7633
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7639
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7645
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7658
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7663
		{
			yyVAL.str = ""
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7667
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7673
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7677
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7681
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7685
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7689
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7693
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7697
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7703
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7707
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7711
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = ""
		}
	case 1567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7724
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7733
		{
			yyVAL.str = " header"
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7738
		{
			yyVAL.str = ""
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7742
		{
			yyVAL.str = " manifest on"
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7746
		{
			yyVAL.str = " manifest off"
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7751
		{
			yyVAL.str = ""
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7755
		{
			yyVAL.str = " overwrite on"
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7759
		{
			yyVAL.str = " overwrite off"
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7765
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7770
		{
			yyVAL.str = ""
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7774
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7780
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7784
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7790
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7794
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = ""
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7803
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7809
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7813
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7819
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7823
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7827
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7832
		{
			yyVAL.str = ""
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7836
		{
			yyVAL.str = " optionally"
		}
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7849
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7853
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7857
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7861
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7865
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7871
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7875
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7879
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7883
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7892
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7896
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7905
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7911
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7915
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7921
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7925
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7931
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7935
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7940
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7950
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7954
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7960
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7967
		{
			yyVAL.str = "charset"
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7977
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7981
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7985
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8009
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8011
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8014
		{
			yyVAL.empty = struct{}{}
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8016
		{
			yyVAL.empty = struct{}{}
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8018
		{
			yyVAL.empty = struct{}{}
		}
	case 1637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8022
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8031
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8038
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8042
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8048
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8052
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8059
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8065
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8069
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8075
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8079
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8086
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8092
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8098
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8102
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8106
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8765
		{
		}
	case 2288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8770
		{
		}
	case 2289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8774
		{
			skipToEnd(yylex)
		}
	case 2290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8779
		{
			skipToEnd(yylex)
		}
	case 2291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8783
		{
			skipToEnd(yylex)
		}
	case 2292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8787
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
